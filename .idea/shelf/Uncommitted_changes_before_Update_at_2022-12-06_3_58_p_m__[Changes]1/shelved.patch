Index: app/src/main/res/layout/fragment_profile.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<ScrollView\r\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:paddingTop=\"60dp\">\r\n\r\n    <LinearLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:orientation=\"vertical\"\r\n        android:paddingBottom=\"50dp\">\r\n\r\n\r\n        <LinearLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"200dp\"\r\n            android:background=\"@color/black\"\r\n            android:gravity=\"center\"\r\n            android:orientation=\"vertical\">\r\n\r\n            <LinearLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"40dp\"\r\n                android:gravity=\"right\"\r\n                android:layout_marginTop=\"-10dp\"\r\n                android:paddingRight=\"10dp\">\r\n\r\n                <Button\r\n                    android:id=\"@+id/profileLogoutButton\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"40dp\"\r\n                    android:background=\"@drawable/button_background\"\r\n                    android:text=\"Logout\" />\r\n            </LinearLayout>\r\n\r\n            <ImageView\r\n                android:layout_width=\"100dp\"\r\n                android:layout_height=\"100dp\"\r\n                android:background=\"@drawable/round_outline\"\r\n                android:backgroundTint=\"@color/white\"\r\n                android:layout_marginTop=\"-10dp\"/>\r\n\r\n            <TextView\r\n                android:id=\"@+id/profileEmail\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginTop=\"10dp\"\r\n                android:textAlignment=\"center\"\r\n                android:textColor=\"@color/white\" />\r\n\r\n        </LinearLayout>\r\n\r\n        <LinearLayout\r\n            android:id=\"@+id/profileContent\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:orientation=\"vertical\"\r\n            android:layout_marginTop=\"20dp\"\r\n            >\r\n\r\n            <RelativeLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginBottom=\"5dp\">\r\n\r\n                <TextView\r\n                    android:id=\"@+id/favouriteHeader\"\r\n                    android:text=\"Favourites\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:textColor=\"@color/black\"\r\n                    android:textSize=\"18sp\"\r\n                    android:textStyle=\"bold\"\r\n                    android:paddingLeft=\"5dp\"\r\n                    android:layout_centerVertical=\"true\"/>\r\n\r\n                <Button\r\n                    android:id=\"@+id/englishBtn\"\r\n                    android:layout_width=\"60dp\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_toLeftOf=\"@id/japaneseBtn\"\r\n                    android:backgroundTint=\"@color/back_tint_gray\"\r\n                    android:text=\"ENG\"\r\n                    android:textSize=\"8sp\"\r\n                    app:layout_constraintBottom_toBottomOf=\"parent\"\r\n                    app:layout_constraintEnd_toStartOf=\"@+id/japaneseBtn\"\r\n                    app:layout_constraintVertical_bias=\"0.0\" />\r\n\r\n                <Button\r\n                    android:id=\"@+id/japaneseBtn\"\r\n                    android:layout_width=\"60dp\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_alignParentEnd=\"true\"\r\n                    android:layout_marginRight=\"5dp\"\r\n                    android:backgroundTint=\"@color/back_tint_gray\"\r\n                    android:text=\"JAP\"\r\n                    android:textSize=\"8sp\" />\r\n            </RelativeLayout>\r\n\r\n            <TextView\r\n                android:id=\"@+id/emptyFavText\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:text=\"You have no items on your favourites yet.\"\r\n                android:textAlignment=\"center\"\r\n                android:padding=\"20dp\"\r\n\r\n                />\r\n\r\n            <androidx.recyclerview.widget.RecyclerView\r\n                android:id=\"@+id/favoritesRecyclerView\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_centerHorizontal=\"true\"\r\n                android:orientation=\"horizontal\"\r\n                app:layoutManager=\"androidx.recyclerview.widget.LinearLayoutManager\"\r\n                tools:listitem=\"@layout/listitem_anime\"/>\r\n\r\n            <TextView\r\n                android:id=\"@+id/watchLaterHeader\"\r\n                android:text=\"Watch later\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:textColor=\"@color/black\"\r\n                android:textSize=\"18sp\"\r\n                android:textStyle=\"bold\"\r\n                android:paddingLeft=\"5dp\"\r\n                android:layout_marginBottom=\"5dp\"/>\r\n\r\n            <TextView\r\n                android:id=\"@+id/emptyWatchLaterText\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:text=\"You have no items on your watch later yet.\"\r\n                android:textAlignment=\"center\"\r\n                android:padding=\"20dp\"\r\n                />\r\n            <androidx.recyclerview.widget.RecyclerView\r\n                android:id=\"@+id/watchLaterRecyclerView\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_centerHorizontal=\"true\"\r\n                android:orientation=\"horizontal\"\r\n                app:layoutManager=\"androidx.recyclerview.widget.LinearLayoutManager\"\r\n                tools:listitem=\"@layout/listitem_anime\"/>\r\n\r\n            <TextView\r\n                android:id=\"@+id/watchingHeader\"\r\n                android:text=\"Watching\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:textColor=\"@color/black\"\r\n                android:textSize=\"18sp\"\r\n                android:textStyle=\"bold\"\r\n                android:paddingLeft=\"5dp\"\r\n                android:layout_marginBottom=\"5dp\"/>\r\n\r\n            <TextView\r\n                android:id=\"@+id/emptyWatchingText\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:textAlignment=\"center\"\r\n                android:padding=\"20dp\"\r\n                />\r\n            <androidx.recyclerview.widget.RecyclerView\r\n                android:id=\"@+id/watchingRecyclerView\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_centerHorizontal=\"true\"\r\n                android:orientation=\"horizontal\"\r\n                app:layoutManager=\"androidx.recyclerview.widget.LinearLayoutManager\"\r\n                tools:listitem=\"@layout/listitem_anime\"/>\r\n        </LinearLayout>\r\n\r\n        <LinearLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:orientation=\"vertical\"\r\n            android:gravity=\"center\"\r\n            android:padding=\"20dp\"\r\n            android:id=\"@+id/noAccountContent\">\r\n\r\n            <TextView\r\n                android:layout_width=\"200dp\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:textAlignment=\"center\"\r\n                android:text=\"Set favourites, get personalized recommendations, and post reviews.\"\r\n                android:textSize=\"15dp\"\r\n                />\r\n\r\n            <Button\r\n                android:id=\"@+id/profileLoginButton\"\r\n                android:layout_marginTop=\"20dp\"\r\n                android:layout_width=\"150dp\"\r\n                android:layout_height=\"40dp\"\r\n                android:background=\"@drawable/button_background\"\r\n                android:text=\"Login\"\r\n                android:backgroundTint=\"@color/main_color\"/>\r\n        </LinearLayout>\r\n    </LinearLayout>\r\n</ScrollView>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_profile.xml b/app/src/main/res/layout/fragment_profile.xml
--- a/app/src/main/res/layout/fragment_profile.xml	
+++ b/app/src/main/res/layout/fragment_profile.xml	
@@ -7,198 +7,198 @@
     android:layout_height="match_parent"
     android:paddingTop="60dp">
 
-    <LinearLayout
-        android:layout_width="match_parent"
-        android:layout_height="match_parent"
-        android:orientation="vertical"
-        android:paddingBottom="50dp">
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+            android:orientation="vertical"
+            android:paddingBottom="50dp">
 
 
-        <LinearLayout
-            android:layout_width="match_parent"
-            android:layout_height="200dp"
-            android:background="@color/black"
-            android:gravity="center"
-            android:orientation="vertical">
+                <LinearLayout
+                    android:layout_width="match_parent"
+                    android:layout_height="200dp"
+                    android:background="@color/black"
+                    android:gravity="center"
+                    android:orientation="vertical">
 
-            <LinearLayout
-                android:layout_width="match_parent"
-                android:layout_height="40dp"
-                android:gravity="right"
-                android:layout_marginTop="-10dp"
-                android:paddingRight="10dp">
+                        <LinearLayout
+                            android:layout_width="match_parent"
+                            android:layout_height="40dp"
+                            android:gravity="right"
+                            android:layout_marginTop="-10dp"
+                            android:paddingRight="10dp">
 
-                <Button
-                    android:id="@+id/profileLogoutButton"
-                    android:layout_width="wrap_content"
-                    android:layout_height="40dp"
-                    android:background="@drawable/button_background"
-                    android:text="Logout" />
-            </LinearLayout>
+                                <Button
+                                    android:id="@+id/profileLogoutButton"
+                                    android:layout_width="wrap_content"
+                                    android:layout_height="40dp"
+                                    android:background="@drawable/button_background"
+                                    android:text="Logout" />
+                        </LinearLayout>
 
-            <ImageView
-                android:layout_width="100dp"
-                android:layout_height="100dp"
-                android:background="@drawable/round_outline"
-                android:backgroundTint="@color/white"
-                android:layout_marginTop="-10dp"/>
+                        <ImageView
+                            android:layout_width="100dp"
+                            android:layout_height="100dp"
+                            android:background="@drawable/round_outline"
+                            android:backgroundTint="@color/white"
+                            android:layout_marginTop="-10dp"/>
 
-            <TextView
-                android:id="@+id/profileEmail"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:layout_marginTop="10dp"
-                android:textAlignment="center"
-                android:textColor="@color/white" />
+                        <TextView
+                            android:id="@+id/profileEmail"
+                            android:layout_width="match_parent"
+                            android:layout_height="wrap_content"
+                            android:layout_marginTop="10dp"
+                            android:textAlignment="center"
+                            android:textColor="@color/white" />
 
-        </LinearLayout>
+                </LinearLayout>
 
-        <LinearLayout
-            android:id="@+id/profileContent"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:orientation="vertical"
-            android:layout_marginTop="20dp"
-            >
+                <LinearLayout
+                    android:id="@+id/profileContent"
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content"
+                    android:orientation="vertical"
+                    android:layout_marginTop="20dp"
+                    >
 
-            <RelativeLayout
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:layout_marginBottom="5dp">
+                        <RelativeLayout
+                            android:layout_width="match_parent"
+                            android:layout_height="wrap_content"
+                            android:layout_marginBottom="5dp">
 
-                <TextView
-                    android:id="@+id/favouriteHeader"
-                    android:text="Favourites"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:textColor="@color/black"
-                    android:textSize="18sp"
-                    android:textStyle="bold"
-                    android:paddingLeft="5dp"
-                    android:layout_centerVertical="true"/>
+                                <TextView
+                                    android:id="@+id/favouriteHeader"
+                                    android:text="Favourites"
+                                    android:layout_width="wrap_content"
+                                    android:layout_height="wrap_content"
+                                    android:textColor="@color/black"
+                                    android:textSize="18sp"
+                                    android:textStyle="bold"
+                                    android:paddingLeft="5dp"
+                                    android:layout_centerVertical="true"/>
 
-                <Button
-                    android:id="@+id/englishBtn"
-                    android:layout_width="60dp"
-                    android:layout_height="wrap_content"
-                    android:layout_toLeftOf="@id/japaneseBtn"
-                    android:backgroundTint="@color/back_tint_gray"
-                    android:text="ENG"
-                    android:textSize="8sp"
-                    app:layout_constraintBottom_toBottomOf="parent"
-                    app:layout_constraintEnd_toStartOf="@+id/japaneseBtn"
-                    app:layout_constraintVertical_bias="0.0" />
+                                <Button
+                                    android:id="@+id/englishBtn"
+                                    android:layout_width="60dp"
+                                    android:layout_height="wrap_content"
+                                    android:layout_toLeftOf="@id/japaneseBtn"
+                                    android:backgroundTint="@color/back_tint_gray"
+                                    android:text="ENG"
+                                    android:textSize="8sp"
+                                    app:layout_constraintBottom_toBottomOf="parent"
+                                    app:layout_constraintEnd_toStartOf="@+id/japaneseBtn"
+                                    app:layout_constraintVertical_bias="0.0" />
 
-                <Button
-                    android:id="@+id/japaneseBtn"
-                    android:layout_width="60dp"
-                    android:layout_height="wrap_content"
-                    android:layout_alignParentEnd="true"
-                    android:layout_marginRight="5dp"
-                    android:backgroundTint="@color/back_tint_gray"
-                    android:text="JAP"
-                    android:textSize="8sp" />
-            </RelativeLayout>
+                                <Button
+                                    android:id="@+id/japaneseBtn"
+                                    android:layout_width="60dp"
+                                    android:layout_height="wrap_content"
+                                    android:layout_alignParentEnd="true"
+                                    android:layout_marginRight="5dp"
+                                    android:backgroundTint="@color/back_tint_gray"
+                                    android:text="JAP"
+                                    android:textSize="8sp" />
+                        </RelativeLayout>
 
-            <TextView
-                android:id="@+id/emptyFavText"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:text="You have no items on your favourites yet."
-                android:textAlignment="center"
-                android:padding="20dp"
+                        <TextView
+                            android:id="@+id/emptyFavText"
+                            android:layout_width="match_parent"
+                            android:layout_height="wrap_content"
+                            android:text="You have no items on your favourites yet."
+                            android:textAlignment="center"
+                            android:padding="20dp"
 
-                />
+                            />
 
-            <androidx.recyclerview.widget.RecyclerView
-                android:id="@+id/favoritesRecyclerView"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:layout_centerHorizontal="true"
-                android:orientation="horizontal"
-                app:layoutManager="androidx.recyclerview.widget.LinearLayoutManager"
-                tools:listitem="@layout/listitem_anime"/>
+                        <androidx.recyclerview.widget.RecyclerView
+                            android:id="@+id/favoritesRecyclerView"
+                            android:layout_width="match_parent"
+                            android:layout_height="wrap_content"
+                            android:layout_centerHorizontal="true"
+                            android:orientation="horizontal"
+                            app:layoutManager="androidx.recyclerview.widget.LinearLayoutManager"
+                            tools:listitem="@layout/listitem_anime"/>
 
-            <TextView
-                android:id="@+id/watchLaterHeader"
-                android:text="Watch later"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:textColor="@color/black"
-                android:textSize="18sp"
-                android:textStyle="bold"
-                android:paddingLeft="5dp"
-                android:layout_marginBottom="5dp"/>
+                        <TextView
+                            android:id="@+id/watchLaterHeader"
+                            android:text="Watch later"
+                            android:layout_width="match_parent"
+                            android:layout_height="wrap_content"
+                            android:textColor="@color/black"
+                            android:textSize="18sp"
+                            android:textStyle="bold"
+                            android:paddingLeft="5dp"
+                            android:layout_marginBottom="5dp"/>
 
-            <TextView
-                android:id="@+id/emptyWatchLaterText"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:text="You have no items on your watch later yet."
-                android:textAlignment="center"
-                android:padding="20dp"
-                />
-            <androidx.recyclerview.widget.RecyclerView
-                android:id="@+id/watchLaterRecyclerView"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:layout_centerHorizontal="true"
-                android:orientation="horizontal"
-                app:layoutManager="androidx.recyclerview.widget.LinearLayoutManager"
-                tools:listitem="@layout/listitem_anime"/>
+                        <TextView
+                            android:id="@+id/emptyWatchLaterText"
+                            android:layout_width="match_parent"
+                            android:layout_height="wrap_content"
+                            android:text="You have no items on your watch later yet."
+                            android:textAlignment="center"
+                            android:padding="20dp"
+                            />
+                        <androidx.recyclerview.widget.RecyclerView
+                            android:id="@+id/watchLaterRecyclerView"
+                            android:layout_width="match_parent"
+                            android:layout_height="wrap_content"
+                            android:layout_centerHorizontal="true"
+                            android:orientation="horizontal"
+                            app:layoutManager="androidx.recyclerview.widget.LinearLayoutManager"
+                            tools:listitem="@layout/listitem_anime"/>
 
-            <TextView
-                android:id="@+id/watchingHeader"
-                android:text="Watching"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:textColor="@color/black"
-                android:textSize="18sp"
-                android:textStyle="bold"
-                android:paddingLeft="5dp"
-                android:layout_marginBottom="5dp"/>
+                        <TextView
+                            android:id="@+id/watchingHeader"
+                            android:text="Watching"
+                            android:layout_width="match_parent"
+                            android:layout_height="wrap_content"
+                            android:textColor="@color/black"
+                            android:textSize="18sp"
+                            android:textStyle="bold"
+                            android:paddingLeft="5dp"
+                            android:layout_marginBottom="5dp"/>
 
-            <TextView
-                android:id="@+id/emptyWatchingText"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:textAlignment="center"
-                android:padding="20dp"
-                />
-            <androidx.recyclerview.widget.RecyclerView
-                android:id="@+id/watchingRecyclerView"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:layout_centerHorizontal="true"
-                android:orientation="horizontal"
-                app:layoutManager="androidx.recyclerview.widget.LinearLayoutManager"
-                tools:listitem="@layout/listitem_anime"/>
-        </LinearLayout>
+                        <TextView
+                            android:id="@+id/emptyWatchingText"
+                            android:layout_width="match_parent"
+                            android:layout_height="wrap_content"
+                            android:textAlignment="center"
+                            android:padding="20dp"
+                            />
+                        <androidx.recyclerview.widget.RecyclerView
+                            android:id="@+id/watchingRecyclerView"
+                            android:layout_width="match_parent"
+                            android:layout_height="wrap_content"
+                            android:layout_centerHorizontal="true"
+                            android:orientation="horizontal"
+                            app:layoutManager="androidx.recyclerview.widget.LinearLayoutManager"
+                            tools:listitem="@layout/listitem_anime"/>
+                </LinearLayout>
 
-        <LinearLayout
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:orientation="vertical"
-            android:gravity="center"
-            android:padding="20dp"
-            android:id="@+id/noAccountContent">
+                <LinearLayout
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content"
+                    android:orientation="vertical"
+                    android:gravity="center"
+                    android:padding="20dp"
+                    android:id="@+id/noAccountContent">
 
-            <TextView
-                android:layout_width="200dp"
-                android:layout_height="wrap_content"
-                android:textAlignment="center"
-                android:text="Set favourites, get personalized recommendations, and post reviews."
-                android:textSize="15dp"
-                />
+                        <TextView
+                            android:layout_width="200dp"
+                            android:layout_height="wrap_content"
+                            android:textAlignment="center"
+                            android:text="Set favourites, get personalized recommendations, and post reviews."
+                            android:textSize="15dp"
+                            />
 
-            <Button
-                android:id="@+id/profileLoginButton"
-                android:layout_marginTop="20dp"
-                android:layout_width="150dp"
-                android:layout_height="40dp"
-                android:background="@drawable/button_background"
-                android:text="Login"
-                android:backgroundTint="@color/main_color"/>
-        </LinearLayout>
-    </LinearLayout>
+                        <Button
+                            android:id="@+id/profileLoginButton"
+                            android:layout_marginTop="20dp"
+                            android:layout_width="150dp"
+                            android:layout_height="40dp"
+                            android:background="@drawable/button_background"
+                            android:text="Login"
+                            android:backgroundTint="@color/main_color"/>
+                </LinearLayout>
+        </LinearLayout>
 </ScrollView>
\ No newline at end of file
Index: app/src/main/res/layout/activity_anime_details.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"wrap_content\"\r\n    tools:context=\".AnimeDetails\"\r\n    android:orientation=\"vertical\">\r\n\r\n    <RelativeLayout\r\n        android:id=\"@+id/nav_header\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"40dp\"\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        android:paddingTop=\"5dp\">\r\n\r\n        <TextView\r\n            android:id=\"@+id/nav_title\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"Anime x App\"\r\n            android:textColor=\"@color/black\"\r\n            android:textStyle=\"bold\"\r\n            android:textSize=\"20sp\"\r\n            android:paddingStart=\"5dp\"/>\r\n\r\n        <TextView\r\n            android:id=\"@+id/nav_account\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"Login Text\"\r\n            android:textColor=\"@color/black\"\r\n            android:gravity=\"end\"\r\n            android:layout_alignParentEnd=\"true\"\r\n            android:paddingEnd=\"5dp\"\r\n            android:paddingTop=\"4dp\"/>\r\n\r\n    </RelativeLayout>\r\n\r\n    <ScrollView\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:orientation=\"vertical\">\r\n\r\n        <LinearLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:orientation=\"vertical\">\r\n\r\n            <LinearLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:orientation=\"vertical\">\r\n\r\n                <com.google.android.youtube.player.YouTubePlayerView\r\n                    android:id=\"@+id/youtubePlayerView\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"/>\r\n\r\n                <ImageView\r\n                    android:id=\"@+id/animeDetailsImageView\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"150dp\"\r\n                    android:adjustViewBounds=\"true\"/>\r\n            </LinearLayout>\r\n\r\n            <LinearLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:paddingTop=\"5dp\"\r\n                android:paddingStart=\"5dp\"\r\n                android:paddingEnd=\"5dp\"\r\n                android:orientation=\"vertical\">\r\n\r\n                <RelativeLayout\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\">\r\n\r\n                    <TextView\r\n                        android:id=\"@+id/textViewAnimeDetailsTitle\"\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_marginEnd=\"161dp\"\r\n                        android:text=\"\"\r\n                        android:textColor=\"@color/black\"\r\n                        android:textSize=\"28sp\"\r\n                        android:textStyle=\"bold\"/>\r\n\r\n                    <LinearLayout\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:orientation=\"horizontal\"\r\n                        android:layout_alignParentEnd=\"true\">\r\n\r\n                        <TextView\r\n                            android:id=\"@+id/textViewAnimeDetailsScore\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:text=\"\"\r\n                            android:textStyle=\"bold\"\r\n                            android:textSize=\"28sp\"\r\n                            android:textColor=\"@color/black\"\r\n                            android:gravity=\"end\"/>\r\n                        <TextView\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:text=\"/10\"\r\n                            android:textStyle=\"bold\"\r\n                            android:textColor=\"@color/black\"/>\r\n\r\n                    </LinearLayout>\r\n\r\n                </RelativeLayout>\r\n\r\n                <RelativeLayout\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:paddingTop=\"5dp\"\r\n                    android:orientation=\"horizontal\">\r\n\r\n                    <LinearLayout\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:orientation=\"horizontal\">\r\n\r\n                        <LinearLayout\r\n                            android:layout_width=\"70dp\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:orientation=\"vertical\"\r\n                            android:paddingEnd=\"5dp\">\r\n\r\n                            <ImageButton\r\n                                android:id=\"@+id/imageButtonAnimeDetailsFavourite\"\r\n                                android:layout_width=\"wrap_content\"\r\n                                android:layout_height=\"wrap_content\"\r\n                                android:layout_gravity=\"center\"\r\n                                android:background=\"@color/transparent\"\r\n                                app:tint=\"@color/placehold_gray\"\r\n                                android:src=\"@drawable/icon_thumb_up_unchecked\"/>\r\n\r\n                            <TextView\r\n                                android:layout_width=\"wrap_content\"\r\n                                android:layout_height=\"wrap_content\"\r\n                                android:text=\"Favourite\"\r\n                                android:textColor=\"@color/black\"\r\n                                android:layout_gravity=\"center\"\r\n                                android:textAlignment=\"center\"/>\r\n\r\n                        </LinearLayout>\r\n\r\n                        <LinearLayout\r\n                            android:layout_width=\"70dp\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:orientation=\"vertical\"\r\n                            android:paddingEnd=\"5dp\">\r\n\r\n                            <ImageButton\r\n                                android:id=\"@+id/imageButtonAnimeDetailsWatchLater\"\r\n                                android:layout_width=\"wrap_content\"\r\n                                android:layout_height=\"wrap_content\"\r\n                                android:layout_gravity=\"center\"\r\n                                android:background=\"@color/transparent\"\r\n                                android:src=\"@drawable/icon_plus_unchecked\"/>\r\n\r\n                            <TextView\r\n                                android:layout_width=\"wrap_content\"\r\n                                android:layout_height=\"wrap_content\"\r\n                                android:text=\"Watch Later\"\r\n                                android:textColor=\"@color/black\"\r\n                                android:layout_gravity=\"center\"\r\n                                android:textAlignment=\"center\"/>\r\n\r\n                        </LinearLayout>\r\n\r\n                        <LinearLayout\r\n                            android:layout_width=\"70dp\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:orientation=\"vertical\"\r\n                            android:paddingEnd=\"5dp\">\r\n\r\n                            <ImageButton\r\n                                android:id=\"@+id/imageButtonAnimeDetailsWatching\"\r\n                                android:layout_width=\"wrap_content\"\r\n                                android:layout_height=\"wrap_content\"\r\n                                android:layout_gravity=\"center\"\r\n                                android:background=\"@color/transparent\"\r\n                                android:src=\"@drawable/icon_eye_unchecked\"/>\r\n\r\n                            <TextView\r\n                                android:layout_width=\"wrap_content\"\r\n                                android:layout_height=\"wrap_content\"\r\n                                android:text=\"Watching\"\r\n                                android:textColor=\"@color/black\"\r\n                                android:layout_gravity=\"center\"\r\n                                android:textAlignment=\"center\"/>\r\n\r\n                        </LinearLayout>\r\n                    </LinearLayout>\r\n\r\n                    <LinearLayout\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:orientation=\"horizontal\"\r\n                        android:layout_alignParentEnd=\"true\">\r\n\r\n                        <ImageButton\r\n                            android:id=\"@+id/imageButtonAnimeDetailsStar1\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_gravity=\"end\"\r\n                            android:background=\"@color/transparent\"\r\n                            android:src=\"@drawable/icon_star_half_left_unchecked\"/>\r\n                        <ImageButton\r\n                            android:id=\"@+id/imageButtonAnimeDetailsStar2\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_gravity=\"start\"\r\n                            android:background=\"@color/transparent\"\r\n                            android:src=\"@drawable/icon_star_half_right_unchecked\"/>\r\n\r\n                        <ImageButton\r\n                            android:id=\"@+id/imageButtonAnimeDetailsStar3\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_gravity=\"end\"\r\n                            android:background=\"@color/transparent\"\r\n                            android:src=\"@drawable/icon_star_half_left_unchecked\"/>\r\n                        <ImageButton\r\n                            android:id=\"@+id/imageButtonAnimeDetailsStar4\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_gravity=\"start\"\r\n                            android:background=\"@color/transparent\"\r\n                            android:src=\"@drawable/icon_star_half_right_unchecked\"/>\r\n\r\n                        <ImageButton\r\n                            android:id=\"@+id/imageButtonAnimeDetailsStar5\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_gravity=\"end\"\r\n                            android:background=\"@color/transparent\"\r\n                            android:src=\"@drawable/icon_star_half_left_unchecked\"/>\r\n                        <ImageButton\r\n                            android:id=\"@+id/imageButtonAnimeDetailsStar6\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_gravity=\"start\"\r\n                            android:background=\"@color/transparent\"\r\n                            android:src=\"@drawable/icon_star_half_right_unchecked\"/>\r\n\r\n                        <ImageButton\r\n                            android:id=\"@+id/imageButtonAnimeDetailsStar7\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_gravity=\"end\"\r\n                            android:background=\"@color/transparent\"\r\n                            android:src=\"@drawable/icon_star_half_left_unchecked\"/>\r\n                        <ImageButton\r\n                            android:id=\"@+id/imageButtonAnimeDetailsStar8\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_gravity=\"start\"\r\n                            android:background=\"@color/transparent\"\r\n                            android:src=\"@drawable/icon_star_half_right_unchecked\"/>\r\n\r\n                        <ImageButton\r\n                            android:id=\"@+id/imageButtonAnimeDetailsStar9\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_gravity=\"end\"\r\n                            android:background=\"@color/transparent\"\r\n                            android:src=\"@drawable/icon_star_half_left_unchecked\"/>\r\n                        <ImageButton\r\n                            android:id=\"@+id/imageButtonAnimeDetailsStar10\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_gravity=\"start\"\r\n                            android:background=\"@color/transparent\"\r\n                            android:src=\"@drawable/icon_star_half_right_unchecked\"/>\r\n                    </LinearLayout>\r\n\r\n                </RelativeLayout>\r\n\r\n                <RelativeLayout\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:paddingTop=\"5dp\">\r\n\r\n                    <LinearLayout\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:orientation=\"vertical\">\r\n\r\n                        <TextView\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:text=\"Synopsis\"\r\n                            android:textColor=\"@color/black\"\r\n                            android:textStyle=\"bold\"\r\n                            android:layout_marginBottom=\"5dp\"\r\n                            android:layout_marginTop=\"10dp\"/>\r\n\r\n                        <TextView\r\n                            android:id=\"@+id/textViewAnimeDetailsSynopsis\"\r\n                            android:layout_width=\"match_parent\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:text=\"\"\r\n                            android:textSize=\"12sp\"\r\n                            android:textStyle=\"italic\"\r\n                            android:justificationMode=\"inter_word\"\r\n                            android:padding=\"10dp\"\r\n                            android:background=\"@drawable/custom_dialog_background\"\r\n                            android:backgroundTint=\"#F1F1F1\"\r\n                            android:layout_marginRight=\"5dp\"\r\n                            android:layout_marginLeft=\"5dp\" />\r\n\r\n                    </LinearLayout>\r\n\r\n                </RelativeLayout>\r\n\r\n                <RelativeLayout\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:paddingTop=\"5dp\">\r\n\r\n                    <LinearLayout\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:orientation=\"vertical\">\r\n\r\n                        <TextView\r\n                        android:layout_marginTop=\"10dp\"\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:text=\"Characters\"\r\n                        android:textColor=\"@color/black\"\r\n                        android:textStyle=\"bold\"\r\n                        android:layout_marginBottom=\"5dp\" />\r\n\r\n                        <androidx.recyclerview.widget.RecyclerView\r\n                            android:id=\"@+id/recyclerViewAnimeDetailsCharacters\"\r\n                            android:layout_width=\"match_parent\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_centerHorizontal=\"true\"\r\n                            android:orientation=\"horizontal\"\r\n                            app:layoutManager=\"androidx.recyclerview.widget.LinearLayoutManager\"\r\n                            tools:listitem=\"@layout/listitem_anime\"/>\r\n\r\n                    </LinearLayout>\r\n\r\n                </RelativeLayout>\r\n\r\n                <RelativeLayout\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:paddingTop=\"5dp\">\r\n\r\n                    <LinearLayout\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:orientation=\"vertical\">\r\n\r\n                        <TextView\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:text=\"Reviews\"\r\n                            android:textColor=\"@color/black\"\r\n                            android:textStyle=\"bold\"\r\n                            android:layout_marginBottom=\"5dp\"/>\r\n\r\n                    <LinearLayout\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:orientation=\"vertical\"\r\n                        android:gravity=\"center\"\r\n                        android:paddingBottom=\"20dp\">\r\n                        <Button\r\n                            android:id=\"@+id/submitAReview\"\r\n                            android:layout_width=\"200dp\"\r\n                            android:layout_height=\"40dp\"\r\n                            android:text=\"Submit a review\"\r\n                            android:background=\"@drawable/button_background\"\r\n                            android:backgroundTint=\"@color/main_color\"\r\n                            android:textColor=\"@color/white\"/>\r\n                        <TextView\r\n                            android:id=\"@+id/noReviewsYet\"\r\n                            android:layout_width=\"match_parent\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:text=\"No reviews yet.\"\r\n                            android:textAlignment=\"center\"\r\n                            android:paddingTop=\"20dp\"\r\n                            android:paddingBottom=\"20dp\"/>\r\n\r\n                        <androidx.recyclerview.widget.RecyclerView\r\n                            android:id=\"@+id/reviewsRecycler\"\r\n                            android:layout_width=\"match_parent\"\r\n                            android:layout_height=\"wrap_content\"/>\r\n\r\n                    </LinearLayout>\r\n\r\n                    </LinearLayout>\r\n\r\n\r\n                </RelativeLayout>\r\n\r\n            </LinearLayout>\r\n\r\n        </LinearLayout>\r\n\r\n    </ScrollView>\r\n\r\n</LinearLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_anime_details.xml b/app/src/main/res/layout/activity_anime_details.xml
--- a/app/src/main/res/layout/activity_anime_details.xml	
+++ b/app/src/main/res/layout/activity_anime_details.xml	
@@ -10,15 +10,17 @@
     <RelativeLayout
         android:id="@+id/nav_header"
         android:layout_width="match_parent"
-        android:layout_height="40dp"
+        android:layout_height="60dp"
         app:layout_constraintTop_toTopOf="parent"
-        android:paddingTop="5dp">
+        android:gravity="center"
+        android:paddingLeft="5dp"
+        android:paddingRight="5dp">
 
         <TextView
             android:id="@+id/nav_title"
             android:layout_width="wrap_content"
             android:layout_height="wrap_content"
-            android:text="Anime x App"
+            android:text="AnimexApp"
             android:textColor="@color/black"
             android:textStyle="bold"
             android:textSize="20sp"
Index: app/src/main/res/layout/fragment_feed.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n\r\n<androidx.core.widget.NestedScrollView\r\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:background=\"#F3F3F3\">\r\n\r\n    <LinearLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:orientation=\"vertical\"\r\n        android:padding=\"15dp\"\r\n       >\r\n\r\n            <LinearLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:orientation=\"vertical\"\r\n                android:padding=\"0dp\"\r\n                android:background=\"@drawable/custom_dialog_background\">\r\n\r\n                <LinearLayout\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:background=\"@drawable/tab_layout_custom_background\"\r\n                    android:orientation=\"horizontal\"\r\n                    >\r\n\r\n                    <LinearLayout\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:orientation=\"horizontal\"\r\n                        android:padding=\"10dp\">\r\n\r\n                        <ImageView\r\n                            android:layout_width=\"40dp\"\r\n                            android:layout_height=\"40dp\"\r\n                            android:background=\"@drawable/roundborder\" />\r\n\r\n                        <EditText\r\n                            android:id=\"@+id/communityUserPost\"\r\n                            android:layout_width=\"match_parent\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_gravity=\"center\"\r\n                            android:layout_marginLeft=\"0dp\"\r\n                            android:background=\"@drawable/custom_dialog_background\"\r\n                            android:hint=\"Write something...\"\r\n                            android:textSize=\"12dp\"\r\n                            android:textColor=\"@color/text_black\"/>\r\n                    </LinearLayout>\r\n                </LinearLayout>\r\n\r\n                <androidx.constraintlayout.widget.ConstraintLayout\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:orientation=\"horizontal\">\r\n\r\n                    <TextView\r\n                        android:id=\"@+id/setTagsButton\"\r\n                        android:layout_width=\"70dp\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_margin=\"10dp\"\r\n                        android:layout_marginStart=\"92dp\"\r\n                        android:background=\"@drawable/custom_dialog_background\"\r\n                        android:backgroundTint=\"#EAEAEA\"\r\n                        android:gravity=\"center\"\r\n                        android:padding=\"5dp\"\r\n                        android:text=\"Set tags\"\r\n                        android:textSize=\"12dp\"\r\n                        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n                        app:layout_constraintStart_toStartOf=\"parent\"\r\n                        app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n                    <TextView\r\n                        android:id=\"@+id/linkAnimeButton\"\r\n                        android:layout_width=\"80dp\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:background=\"@drawable/custom_dialog_background\"\r\n                        android:backgroundTint=\"#EAEAEA\"\r\n                        android:gravity=\"center\"\r\n                        android:padding=\"5dp\"\r\n                        android:text=\"Link anime\"\r\n                        android:textSize=\"12dp\"\r\n                        android:layout_marginLeft=\"10dp\"\r\n                        app:layout_constraintStart_toEndOf=\"@+id/setTagsButton\"\r\n                        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n                        app:layout_constraintTop_toTopOf=\"parent\"/>\r\n\r\n\r\n                    <Button\r\n                        android:id=\"@+id/communityPostButton\"\r\n                        android:layout_width=\"82dp\"\r\n                        android:layout_height=\"34dp\"\r\n                        android:layout_margin=\"10dp\"\r\n                        android:background=\"@drawable/button_background\"\r\n                        android:padding=\"0dp\"\r\n                        android:text=\"Post\"\r\n                        android:textSize=\"12dp\"\r\n                        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n                        app:layout_constraintEnd_toEndOf=\"parent\"\r\n                        app:layout_constraintTop_toTopOf=\"parent\">\r\n\r\n                    </Button>\r\n\r\n                </androidx.constraintlayout.widget.ConstraintLayout>\r\n            </LinearLayout>\r\n        <androidx.recyclerview.widget.RecyclerView\r\n            android:id=\"@+id/postsRecycler\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:nestedScrollingEnabled=\"false\" />\r\n    </LinearLayout>\r\n</androidx.core.widget.NestedScrollView>\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_feed.xml b/app/src/main/res/layout/fragment_feed.xml
--- a/app/src/main/res/layout/fragment_feed.xml	
+++ b/app/src/main/res/layout/fragment_feed.xml	
@@ -58,36 +58,7 @@
                     android:layout_height="wrap_content"
                     android:orientation="horizontal">
 
-                    <TextView
-                        android:id="@+id/setTagsButton"
-                        android:layout_width="70dp"
-                        android:layout_height="wrap_content"
-                        android:layout_margin="10dp"
-                        android:layout_marginStart="92dp"
-                        android:background="@drawable/custom_dialog_background"
-                        android:backgroundTint="#EAEAEA"
-                        android:gravity="center"
-                        android:padding="5dp"
-                        android:text="Set tags"
-                        android:textSize="12dp"
-                        app:layout_constraintBottom_toBottomOf="parent"
-                        app:layout_constraintStart_toStartOf="parent"
-                        app:layout_constraintTop_toTopOf="parent" />
 
-                    <TextView
-                        android:id="@+id/linkAnimeButton"
-                        android:layout_width="80dp"
-                        android:layout_height="wrap_content"
-                        android:background="@drawable/custom_dialog_background"
-                        android:backgroundTint="#EAEAEA"
-                        android:gravity="center"
-                        android:padding="5dp"
-                        android:text="Link anime"
-                        android:textSize="12dp"
-                        android:layout_marginLeft="10dp"
-                        app:layout_constraintStart_toEndOf="@+id/setTagsButton"
-                        app:layout_constraintBottom_toBottomOf="parent"
-                        app:layout_constraintTop_toTopOf="parent"/>
 
 
                     <Button
Index: app/src/main/java/com/project24/animexapp/ui/community/News.kt
===================================================================
diff --git a/app/src/main/java/com/project24/animexapp/ui/community/News.kt b/app/src/main/java/com/project24/animexapp/ui/community/News.kt
deleted file mode 100644
--- a/app/src/main/java/com/project24/animexapp/ui/community/News.kt	
+++ /dev/null	
@@ -1,18 +0,0 @@
-package com.project24.animexapp.ui.community
-
-import android.os.Bundle
-import androidx.fragment.app.Fragment
-import android.view.LayoutInflater
-import android.view.View
-import android.view.ViewGroup
-import com.project24.animexapp.R
-
-class News : Fragment() {
-    override fun onCreateView(
-        inflater: LayoutInflater, container: ViewGroup?,
-        savedInstanceState: Bundle?
-    ): View? {
-        // Inflate the layout for this fragment
-        return inflater.inflate(R.layout.fragment_news, container, false)
-    }
-}
\ No newline at end of file
Index: app/src/main/java/com/project24/animexapp/ui/community/Games.kt
===================================================================
diff --git a/app/src/main/java/com/project24/animexapp/ui/community/Games.kt b/app/src/main/java/com/project24/animexapp/ui/community/Games.kt
deleted file mode 100644
--- a/app/src/main/java/com/project24/animexapp/ui/community/Games.kt	
+++ /dev/null	
@@ -1,19 +0,0 @@
-package com.project24.animexapp.ui.community
-
-import android.os.Bundle
-import androidx.fragment.app.Fragment
-import android.view.LayoutInflater
-import android.view.View
-import android.view.ViewGroup
-import com.project24.animexapp.R
-
-class Games : Fragment() {
-    override fun onCreateView(
-        inflater: LayoutInflater, container: ViewGroup?,
-        savedInstanceState: Bundle?
-    ): View? {
-        // Inflate the layout for this fragment
-        return inflater.inflate(R.layout.fragment_games, container, false)
-    }
-
-}
\ No newline at end of file
Index: app/src/main/res/layout/fragment_events.xml
===================================================================
diff --git a/app/src/main/res/layout/fragment_events.xml b/app/src/main/res/layout/fragment_events.xml
deleted file mode 100644
--- a/app/src/main/res/layout/fragment_events.xml	
+++ /dev/null	
@@ -1,14 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    tools:context=".ui.community.Feed">
-
-    <TextView
-        android:layout_width="match_parent"
-        android:layout_height="match_parent"
-        android:text="Events"
-        android:gravity="center"/>
-
-</FrameLayout>
\ No newline at end of file
Index: app/src/main/java/com/project24/animexapp/ui/community/Events.kt
===================================================================
diff --git a/app/src/main/java/com/project24/animexapp/ui/community/Events.kt b/app/src/main/java/com/project24/animexapp/ui/community/Events.kt
deleted file mode 100644
--- a/app/src/main/java/com/project24/animexapp/ui/community/Events.kt	
+++ /dev/null	
@@ -1,18 +0,0 @@
-package com.project24.animexapp.ui.community
-
-import android.os.Bundle
-import androidx.fragment.app.Fragment
-import android.view.LayoutInflater
-import android.view.View
-import android.view.ViewGroup
-import com.project24.animexapp.R
-
-class Events : Fragment() {
-    override fun onCreateView(
-        inflater: LayoutInflater, container: ViewGroup?,
-        savedInstanceState: Bundle?
-    ): View? {
-        // Inflate the layout for this fragment
-        return inflater.inflate(R.layout.fragment_events, container, false)
-    }
-}
\ No newline at end of file
Index: app/src/main/res/layout/fragment_news.xml
===================================================================
diff --git a/app/src/main/res/layout/fragment_news.xml b/app/src/main/res/layout/fragment_news.xml
deleted file mode 100644
--- a/app/src/main/res/layout/fragment_news.xml	
+++ /dev/null	
@@ -1,14 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    tools:context=".ui.community.Feed">
-
-    <TextView
-        android:layout_width="match_parent"
-        android:layout_height="match_parent"
-        android:text="News"
-        android:gravity="center"/>
-
-</FrameLayout>
\ No newline at end of file
Index: app/src/main/java/com/project24/animexapp/ui/community/ClubDetails.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/project24/animexapp/ui/community/ClubDetails.kt b/app/src/main/java/com/project24/animexapp/ui/community/ClubDetails.kt
new file mode 100644
--- /dev/null	
+++ b/app/src/main/java/com/project24/animexapp/ui/community/ClubDetails.kt	
@@ -0,0 +1,444 @@
+package com.project24.animexapp.ui.community
+
+import android.content.ContentValues
+import android.graphics.Color
+import androidx.appcompat.app.AppCompatActivity
+import android.os.Bundle
+import android.util.Log
+import android.view.View
+import android.widget.Button
+import android.widget.EditText
+import android.widget.TextView
+import android.widget.Toast
+import androidx.recyclerview.widget.GridLayoutManager
+import androidx.recyclerview.widget.LinearLayoutManager
+import androidx.recyclerview.widget.RecyclerView
+import com.google.firebase.auth.FirebaseAuth
+import com.google.firebase.firestore.FieldValue
+import com.google.firebase.firestore.ktx.firestore
+import com.google.firebase.ktx.Firebase
+import com.project24.animexapp.NotificationsData
+import com.project24.animexapp.R
+import java.text.SimpleDateFormat
+import java.util.*
+
+class ClubDetails : AppCompatActivity() {
+    private var clubTitle: String? = " "
+    private var clubLongDesc: String? = " "
+    private var clubDate: String? = " "
+    private var clubMemberCount: Long? = 0
+    private var clubId: String? = " "
+    private var clubType: String? = " "
+    private var clubAccess: String? = " "
+    private val sdf = SimpleDateFormat("MM/dd/yyyy hh:mm:ss")
+    private val currentTime: String = sdf.format(Date())
+    private lateinit var firebaseAuth: FirebaseAuth
+    private lateinit var clubPostsList: List<ClubPosts>
+    private lateinit var clubPostsRV: RecyclerView
+    private lateinit var clubPostsAdapter: ClubPostsAdapter
+
+
+    private lateinit var adminsList: List<Admins>
+    private lateinit var adminsRV: RecyclerView
+    private lateinit var adminsAdapter: ClubAdminAdapter
+
+    private lateinit var membersList: List<Admins>
+    private lateinit var membersRV: RecyclerView
+    private lateinit var membersAdapter: MembersAdapter
+
+
+    override fun onCreate(savedInstanceState: Bundle?) {
+        super.onCreate(savedInstanceState)
+
+        val extras = intent.extras
+        val db = Firebase.firestore
+        firebaseAuth = FirebaseAuth.getInstance()
+        val currentUserId = firebaseAuth.currentUser?.uid
+
+
+        if(extras!=null) {
+            // Extract clubId from extras
+            clubTitle = extras.getString("clubName", "No title")
+            clubId = extras.getString("clubId", "0")
+            clubAccess = extras.getString("clubAccess", "No access")
+
+        }
+
+
+        setContentView(R.layout.activity_club_details)
+        val postButton = findViewById<Button>(R.id.clubPostButton)
+        setAdminsAdapter()
+        // real time update club information
+        updateClubInfo()
+        updateClubButtons()
+        postButton.setOnClickListener {
+            createPost()
+        }
+
+        setClubPostsAdapter()
+        val askAdmin = findViewById<TextView>(R.id.clubDetailsAskAdminButton)
+        db.collection("Clubs").document(clubId!!).collection("AdminRequest").document(currentUserId.toString()).addSnapshotListener {snapshot, error ->
+            if(error != null) {
+                Log.e(ContentValues.TAG, "onEvent: ", error)
+                return@addSnapshotListener
+            }
+
+            if(snapshot != null) {
+                if(snapshot.exists()) {
+                    askAdmin.setBackgroundResource(R.drawable.button_requested)
+                    askAdmin.text = "Requested to be admin"
+                } else {
+                    askAdmin.setBackgroundResource(R.drawable.button_unclicked)
+                    askAdmin.text = "Ask to be admin"
+                }
+            }
+        }
+    }
+
+    private fun updateClubButtons() {
+        val db = Firebase.firestore
+        val currentUserId = firebaseAuth.currentUser?.uid
+        val clubJoinButton = findViewById<TextView>(R.id.clubDetailsJoinButton)
+        val askAdmin = findViewById<TextView>(R.id.clubDetailsAskAdminButton)
+        val docRef = db.collection("Users").document(currentUserId!!)
+        var currentUsername: String
+        val currentUserEmail = firebaseAuth.currentUser?.email
+        val notifId = db.collection("Users").document(currentUserId.toString()).collection("Notifications").document().id
+
+        db.collection("Clubs").document(clubId!!).collection("Members").document(currentUserId.toString()).addSnapshotListener { snapshot, error ->
+            if(error != null) {
+                Log.e(ContentValues.TAG, "onEvent: ", error)
+                return@addSnapshotListener
+            }
+            if (snapshot != null) {
+                // if user is a member
+                if(snapshot.exists()) {
+                    clubJoinButton.text = "Joined"
+                    clubJoinButton.setTextColor(Color.parseColor("#FFFFFF"))
+                    clubJoinButton.setBackgroundResource(R.drawable.button_joined)
+
+                    db.collection("Clubs").document(clubId!!).collection("Admins").document(currentUserId.toString()).get().addOnSuccessListener { it ->
+                        // if user is an admin
+                        if(it.exists()) {
+                            askAdmin.text = "You are an admin"
+                            askAdmin.isClickable = false
+                            askAdmin.setBackgroundResource(R.drawable.button_requested)
+                        } else {
+                        // send admin request notification to admins
+                            askAdmin.setOnClickListener {
+                                db.collection("Clubs").document(clubId!!).collection("AdminRequest").document(currentUserId).get().addOnSuccessListener {
+                                    if(it.exists()) {
+                                        askAdmin.text = "Ask to be admin"
+                                        askAdmin.setBackgroundResource(R.drawable.button_unclicked)
+
+                                        // delete user from admin request collection
+                                        db.collection("Clubs").document(clubId!!).collection("AdminRequest").document(currentUserId).delete()
+
+                                        // delete notification
+                                        db.collection("Clubs").document(clubId!!).collection("Admins").get().addOnSuccessListener {
+                                            for(doc in it) {
+                                                db.collection("Users").document(doc.id).collection("Notifications").document(notifId).delete()
+                                            }
+                                        }
+                                    } else {
+                                        askAdmin.text = "Requested to be admin"
+                                        askAdmin.setBackgroundResource(R.drawable.button_requested)
+                                        db.collection("Clubs").document(clubId!!).collection("AdminRequest").document(currentUserId).set(ClubMembersData(" ", currentUserId, "member"))
+
+                                        docRef.get().addOnSuccessListener { document ->
+                                            if(document!=null) {
+                                                currentUsername = document.data?.get("username").toString()
+                                                db.collection("Clubs").document(clubId!!).collection("Admins").get().addOnSuccessListener {
+                                                    for(doc in it) {
+                                                        db.collection("Users").document(doc.id).collection("Notifications").document(notifId).set(
+                                                            NotificationsData("adminRequest", currentUserEmail, currentUserId,"$currentUsername asked to be an admin of $clubTitle", notifId, currentUsername, clubId!!, currentTime)
+                                                        )
+                                                    }
+                                                }
+                                            }
+                                        }
+                                    }
+                                }
+                            }
+                        }
+                    }
+                    askAdmin.visibility = View.VISIBLE
+
+                    // clicking on join button when already a member
+                    clubJoinButton.setOnClickListener {
+                        // delete user from members collection & decrement memberCount
+                        db.collection("Clubs").document(clubId!!).collection("Members").document(currentUserId.toString()).get().addOnSuccessListener {
+                            if (it["memberPrivileges"]?.equals("creator") == true) {
+                                Toast.makeText(
+                                    this,
+                                    "You are the creator of this club.",
+                                    Toast.LENGTH_SHORT
+                                ).show()
+                                clubJoinButton.isClickable = false
+                            } else {
+                                db.collection("Clubs").document(clubId!!).collection("Members")
+                                    .document(currentUserId.toString()).delete()
+                                db.collection("Clubs").document(clubId!!)
+                                    .update("clubMemberCount", FieldValue.increment(-1))
+                            }
+                        }
+                    }
+                } else {
+                    // if user is in request collection
+                    db.collection("Clubs").document(clubId!!).collection("Requests").document(currentUserId.toString()).addSnapshotListener { snapshot, error ->
+                        if(error != null) {
+                            Log.e(ContentValues.TAG, "onEvent: ", error)
+                            return@addSnapshotListener
+                        }
+                        if(snapshot!=null) {
+                            if(snapshot.exists()) {
+                                clubJoinButton.text = "Requested"
+                                clubJoinButton.setBackgroundResource(R.drawable.button_requested)
+                                askAdmin.visibility = View.GONE
+                            } else {
+
+                                // if club is public
+                                if(clubAccess == "anyone") {
+                                    clubJoinButton.text = "Join"
+                                    clubJoinButton.setTextColor(Color.parseColor("#FFFFFF"))
+                                    clubJoinButton.setBackgroundResource(R.drawable.button_unclicked)
+                                    askAdmin.visibility = View.GONE
+
+                                    // on join button click on public
+                                    clubJoinButton.setOnClickListener {
+                                        docRef.get().addOnSuccessListener { document ->
+                                            if(document!=null) {
+                                                currentUsername = document.data?.get("username").toString()
+                                                db.collection("Clubs").document(clubId!!).collection("Members").document(currentUserId.toString()).set(
+                                                    ClubMembersData(currentUsername, currentUserId, "member")
+                                                )
+                                                db.collection("Clubs").document(clubId!!).update("clubMemberCount", FieldValue.increment(1))
+                                            }
+                                        }
+                                    }
+                                }
+
+                                // if club is private
+                                else if (clubAccess == "reqPerm") {
+                                    clubJoinButton.text = "Request to join"
+                                    clubJoinButton.setTextColor(Color.parseColor("#FFFFFF"))
+                                    clubJoinButton.setBackgroundResource(R.drawable.button_unclicked)
+                                    askAdmin.visibility = View.GONE
+                                    // on button click on private
+                                    clubJoinButton.setOnClickListener {
+                                        // if user is in request collection
+                                        db.collection("Clubs").document(clubId!!).collection("Requests").document(currentUserId.toString()).get().addOnSuccessListener {
+                                            if(it.exists()) {
+                                                clubJoinButton.text = "Request to join"
+                                                clubJoinButton.setTextColor(Color.parseColor("#FFFFFF"))
+                                                clubJoinButton.setBackgroundResource(R.drawable.button_unclicked)
+                                                askAdmin.visibility = View.GONE
+                                                db.collection("Clubs").document(clubId!!).collection("Requests").document(currentUserId.toString()).delete()
+
+                                                // delete notification
+                                                db.collection("Clubs").document(clubId!!).collection("Admins").get().addOnSuccessListener {
+                                                    for(doc in it) {
+                                                        db.collection("Users").document(doc.id).collection("Notifications").document(notifId).delete()
+                                                    }
+                                                }
+
+                                            } else {
+                                                clubJoinButton.text = "Requested"
+                                                clubJoinButton.setBackgroundResource(R.drawable.button_requested)
+                                                docRef.get().addOnSuccessListener { document ->
+                                                    if(document!=null) {
+                                                        currentUsername = document.data?.get("username").toString()
+                                                        db.collection("Clubs").document(clubId!!).collection("Requests").document(currentUserId.toString()).set(
+                                                            ClubMembersData(currentUsername, currentUserId, "member")
+                                                        )
+                                                    }
+                                                }
+                                                docRef.get().addOnSuccessListener { document ->
+                                                    if(document!=null) {
+                                                        currentUsername = document.data?.get("username").toString()
+                                                        db.collection("Clubs").document(clubId!!).collection("Admins").get().addOnSuccessListener {
+                                                            for(doc in it) {
+                                                                db.collection("Users").document(doc.id).collection("Notifications").document(notifId).set(
+                                                                    NotificationsData("joinRequest", currentUserEmail, currentUserId,"$currentUserEmail has requested to join $clubTitle", notifId, currentUsername, clubId, currentTime)
+                                                                )
+                                                            }
+                                                        }
+                                                    }
+                                                }
+                                            }
+                                        }
+                                    }
+                                }
+                            }
+                        }
+                    }
+                }
+            }
+        }
+    }
+
+
+
+
+    private fun setAdminsAdapter() {
+        val db = Firebase.firestore
+        db.collection("Clubs").document(clubId!!).collection("Admins").addSnapshotListener { snapshot, error ->
+            if(error != null) {
+                Log.e(ContentValues.TAG, "onEvent: ", error)
+                return@addSnapshotListener
+            }
+
+            adminsList = emptyList()
+            adminsRV = findViewById(R.id.adminRecyclerView)
+            adminsAdapter = ClubAdminAdapter(adminsList)
+            adminsRV.layoutManager = GridLayoutManager(this.applicationContext, 4)
+            adminsRV.adapter = adminsAdapter
+
+
+
+            for(doc in snapshot!!) {
+                val adminUsername = doc.getString("memberUsername")
+                adminsList = adminsList + Admins(adminUsername)
+                adminsAdapter.adminsList = adminsList
+                adminsAdapter.run {
+                    notifyDataSetChanged()
+                }
+            }
+        }
+
+        db.collection("Clubs").document(clubId!!).collection("Members").addSnapshotListener { snapshot, error ->
+            if(error != null) {
+                Log.e(ContentValues.TAG, "onEvent: ", error)
+                return@addSnapshotListener
+            }
+
+            membersList = emptyList()
+            membersRV = findViewById(R.id.allMembersRecyclerView)
+            membersAdapter = MembersAdapter(membersList)
+            membersRV.layoutManager = GridLayoutManager(this.applicationContext, 4)
+            membersRV.adapter = membersAdapter
+
+            for(doc in snapshot!!) {
+                val adminUsername = doc.getString("memberUsername")
+                membersList = membersList + Admins(adminUsername)
+                membersAdapter.membersList = membersList
+                membersAdapter.run {
+                    notifyDataSetChanged()
+                }
+            }
+        }
+    }
+
+    private fun updateClubInfo() {
+        val db = Firebase.firestore
+        db.collection("Clubs").document(clubId!!).addSnapshotListener { snapshot, error ->
+            if(error != null) {
+                Log.e(ContentValues.TAG, "onEvent: ", error)
+                return@addSnapshotListener
+            }
+
+
+            val titleOfClub = findViewById<TextView>(R.id.clubDetailsTitle)
+            val membersOfClub = findViewById<TextView>(R.id.clubDetailsCount)
+            val dateOfClub = findViewById<TextView>(R.id.clubDetailsDate)
+            val longDescOfClub = findViewById<TextView>(R.id.clubDetailsDesc)
+            val typeOfClub = findViewById<TextView>(R.id.clubType)
+            val membersText = findViewById<TextView>(R.id.membersText)
+            clubTitle = snapshot?.getString("clubName")
+            clubMemberCount = snapshot?.getLong("clubMemberCount")
+            clubDate = snapshot?.getString("clubDate")
+            clubLongDesc = snapshot?.getString("clubLongDesc")
+            clubType = snapshot?.getString("clubAccess")
+            titleOfClub.text = clubTitle
+            membersOfClub.text = clubMemberCount.toString()
+            dateOfClub.text = clubDate
+            longDescOfClub.text = clubLongDesc
+            if(clubMemberCount?.toInt()!! > 1) {
+                membersText.text = "members"
+            } else {
+                membersText.text = "member"
+            }
+
+            if(clubType == "anyone") {
+                typeOfClub.text = "public"
+            } else if (clubType == "reqPerm") {
+                typeOfClub.text = "private"
+            }
+        }
+
+    }
+
+    private fun setClubPostsAdapter() {
+        firebaseAuth = FirebaseAuth.getInstance()
+        val db = Firebase.firestore
+
+        db.collection("Clubs").document(clubId!!).collection("Posts").addSnapshotListener { snapshot, error ->
+            if(error != null) {
+                Log.e(ContentValues.TAG, "onEvent: ", error)
+                return@addSnapshotListener
+            }
+
+        clubPostsList = emptyList()
+        clubPostsRV = findViewById(R.id.clubPostsRecycler)
+        clubPostsAdapter = ClubPostsAdapter(clubPostsList)
+        clubPostsRV.layoutManager = LinearLayoutManager(this.applicationContext,
+            LinearLayoutManager.VERTICAL, false
+        )
+
+        clubPostsRV.adapter = clubPostsAdapter
+
+
+            for(doc in snapshot!!) {
+                val clubPostsUser = doc.getString("username")
+                val clubPostsText = doc.getString("postText")
+                val clubPostsTime = doc.getString("time")
+                val clubPostsDate = doc.getString("date")
+                val clubPostsLikesCount = doc.getLong("likes")
+                val clubPostsCommentsCount = doc.getLong("commentsNum")
+                val clubPostsId = doc.getString("postId")
+                val clubId = doc.getString("clubId")
+
+                clubPostsList = clubPostsList + ClubPosts(clubPostsText, clubPostsUser, clubPostsTime, clubPostsDate, clubPostsLikesCount?.toInt(), clubPostsCommentsCount?.toInt(), clubPostsId, clubId)
+                clubPostsAdapter.postList = clubPostsList
+                clubPostsAdapter.run {
+                    notifyDataSetChanged()
+                }
+            }
+        }
+    }
+
+    private fun createPost() {
+        firebaseAuth = FirebaseAuth.getInstance()
+        val db = Firebase.firestore
+        clubPostsRV.adapter = clubPostsAdapter
+
+        val currentUserID = firebaseAuth.currentUser?.uid
+        val clubsUserPost = findViewById<EditText>(R.id.clubUserPost).text.toString()
+        val userPost = findViewById<EditText>(R.id.clubUserPost)
+        var currentUsername: String
+        val sdf = SimpleDateFormat("MM/dd/yyyy hh:mm:ss")
+        val currentTime = sdf.format(Date())
+        val sdfDate = SimpleDateFormat("MM/dd/yyyy")
+        val currentDate = sdfDate.format(Date())
+        val postId = db.collection("Clubs").document(clubId!!).collection("Posts").document().id
+
+
+        if(userPost.text.isEmpty()) {
+            Toast.makeText(this, "You need to write something before posting", Toast.LENGTH_SHORT).show()
+        }
+        else {
+            val docRef = db.collection("Users").document(currentUserID!!)
+            docRef.get().addOnSuccessListener { document ->
+                if(document!=null) {
+                    currentUsername = document.data?.get("username").toString()
+                    db.collection("Clubs").document(clubId!!).collection("Posts").document(postId).set(
+                        ClubPosts(clubsUserPost, currentUsername, currentTime, currentDate,0, 0, postId, clubId)
+                    )
+
+                }
+            }
+
+        }
+        userPost.text.clear()
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/project24/animexapp/ui/community/MembersAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/project24/animexapp/ui/community/MembersAdapter.kt b/app/src/main/java/com/project24/animexapp/ui/community/MembersAdapter.kt
new file mode 100644
--- /dev/null	
+++ b/app/src/main/java/com/project24/animexapp/ui/community/MembersAdapter.kt	
@@ -0,0 +1,42 @@
+package com.project24.animexapp.ui.community
+
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import android.widget.GridView
+import android.widget.ImageView
+import android.widget.TextView
+import androidx.recyclerview.widget.RecyclerView
+import com.project24.animexapp.R
+
+class MembersAdapter(var membersList: List<Admins>) : RecyclerView.Adapter<MembersAdapter.MembersViewHolder>(){
+
+    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): MembersViewHolder {
+        val view = LayoutInflater.from(parent.context).inflate(R.layout.profile_img_username_item, parent, false)
+        return MembersAdapter.MembersViewHolder(view)
+    }
+
+    override fun onBindViewHolder(holder: MembersViewHolder, position: Int) {
+        val adminItem = membersList[position]
+        holder.bindAdmin(adminItem)
+    }
+
+    override fun getItemCount(): Int {
+        return membersList.size
+    }
+
+    class MembersViewHolder(itemView: View) : RecyclerView.ViewHolder(itemView) {
+        private var view: View = itemView
+        private lateinit var memberItem: Admins
+        init {
+
+        }
+        fun bindAdmin(memberItem: Admins) {
+            this.memberItem = memberItem
+            view.findViewById<TextView>(R.id.userName).text = memberItem.userName
+        }
+
+    }
+
+
+}
\ No newline at end of file
Index: app/src/main/res/layout/activity_club_details.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_club_details.xml b/app/src/main/res/layout/activity_club_details.xml
new file mode 100644
--- /dev/null	
+++ b/app/src/main/res/layout/activity_club_details.xml	
@@ -0,0 +1,348 @@
+<?xml version="1.0" encoding="utf-8"?>
+    <LinearLayout
+        xmlns:android="http://schemas.android.com/apk/res/android"
+        xmlns:app="http://schemas.android.com/apk/res-auto"
+        xmlns:tools="http://schemas.android.com/tools"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:orientation="vertical"
+        android:background="#F3F3F3"
+        >
+
+        <RelativeLayout
+            android:id="@+id/nav_header"
+            android:layout_width="match_parent"
+            android:layout_height="60dp"
+            app:layout_constraintTop_toTopOf="parent"
+            android:gravity="center"
+            android:paddingLeft="5dp"
+            android:paddingRight="5dp"
+            android:background="@color/white">
+
+            <TextView
+                android:id="@+id/nav_title"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:text="AnimexApp"
+                android:textColor="@color/black"
+                android:textStyle="bold"
+                android:textSize="20sp"
+                android:paddingStart="5dp"/>
+
+            <TextView
+                android:id="@+id/nav_account"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:text="Login Text"
+                android:textColor="@color/black"
+                android:gravity="end"
+                android:layout_alignParentEnd="true"
+                android:paddingEnd="5dp"
+                android:paddingTop="4dp"/>
+
+        </RelativeLayout>
+    <ScrollView
+
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        >
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:orientation="vertical"
+            android:padding="10dp"
+            android:layout_marginTop="10dp"
+
+            >
+            <TextView
+                android:id="@+id/clubDetailsTitle"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:textStyle="bold"
+                android:text="Club Name"
+                android:textSize="20sp"
+                android:textColor="@color/text_black"
+                android:gravity="center"/>
+            <LinearLayout
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:orientation="horizontal"
+                android:gravity="center"
+                android:layout_marginTop="10dp">
+                <TextView
+                    android:id="@+id/clubDetailsAskAdminButton"
+                    android:layout_width="wrap_content"
+                    android:paddingRight="20dp"
+                    android:paddingLeft="20dp"
+                    android:gravity="center"
+                    android:layout_height="wrap_content"
+                    android:text="Ask to be admin"
+                    android:layout_marginRight="10dp"
+                    android:background="@drawable/button_unclicked"
+                    android:textColor="#ffffff"/>
+                <TextView
+                    android:id="@+id/clubDetailsJoinButton"
+                    android:layout_width="wrap_content"
+                    android:paddingRight="20dp"
+                    android:paddingLeft="20dp"
+                    android:layout_height="wrap_content"
+                    android:text="Join"
+                    android:gravity="center"
+                    android:background="@drawable/custom_dialog_background"/>
+            </LinearLayout>
+
+
+            <TextView
+                android:layout_marginTop="20dp"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:text="Club Information"
+                android:textStyle="bold"
+                android:layout_marginBottom="5dp"
+                android:textColor="@color/black"/>
+            <LinearLayout
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:orientation="vertical"
+                android:paddingTop="15dp"
+                android:paddingBottom="15dp"
+
+                android:background="@drawable/custom_dialog_background">
+
+                <LinearLayout
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content"
+                    android:gravity="center">
+
+                    <LinearLayout
+                        android:layout_width="0dp"
+                        android:layout_weight="1"
+                        android:layout_height="wrap_content"
+                        android:orientation="vertical"
+                        android:gravity="center"
+                        >
+                        <LinearLayout
+                            android:layout_width="wrap_content"
+                            android:layout_height="wrap_content"
+                            android:orientation="horizontal">
+                            <ImageView
+                                android:layout_width="20dp"
+                                android:layout_height="20dp"
+                                android:src="@drawable/ic_baseline_person_24"
+                                android:gravity="center" />
+                            <TextView
+                                android:id="@+id/clubDetailsCount"
+                                android:layout_width="20dp"
+                                android:layout_height="20dp"
+                                android:text="20"
+                                android:textColor="@color/text_black"
+                                android:textStyle="bold"
+                                android:gravity="center" />
+                        </LinearLayout>
+
+                        <TextView
+                            android:id="@+id/membersText"
+                            android:layout_width="match_parent"
+                            android:layout_height="wrap_content"
+                            android:text="members"
+                            android:gravity="center" />
+                    </LinearLayout>
+                    <LinearLayout
+                        android:layout_width="0dp"
+                        android:layout_weight="1"
+                        android:layout_height="wrap_content"
+                        android:orientation="vertical"
+                        android:gravity="center"
+                        >
+                        <TextView
+                            android:id="@+id/clubType"
+                            android:layout_width="match_parent"
+                            android:layout_height="wrap_content"
+                            android:text="private"
+                            android:textColor="@color/text_black"
+                            android:textStyle="bold"
+                            android:gravity="center" />
+                        <TextView
+                            android:layout_width="match_parent"
+                            android:layout_height="wrap_content"
+                            android:text="type"
+                            android:gravity="center" />
+
+
+                    </LinearLayout>
+                    <LinearLayout
+                        android:layout_width="0dp"
+                        android:layout_weight="1"
+                        android:layout_height="wrap_content"
+                        android:orientation="vertical"
+                        android:gravity="center"
+                        >
+                        <TextView
+                            android:id="@+id/clubDetailsDate"
+                            android:layout_width="match_parent"
+                            android:layout_height="wrap_content"
+                            android:text="11/20/2022"
+                            android:textStyle="bold"
+                            android:textColor="@color/black"
+                            android:gravity="center" />
+                        <TextView
+                            android:layout_width="match_parent"
+                            android:layout_height="wrap_content"
+                            android:text="date created"
+                            android:gravity="center" />
+
+
+                    </LinearLayout>
+
+
+                </LinearLayout>
+
+                <LinearLayout
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content"
+                    android:paddingRight="10dp"
+                    android:paddingLeft="10dp"
+                    android:orientation="vertical">
+                    <TextView
+                        android:layout_marginTop="20dp"
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:text="Description"
+                        android:textColor="@color/black"
+                        android:textSize="13sp"
+                        android:textStyle="bold"/>
+                    <TextView
+                        android:id="@+id/clubDetailsDesc"
+                        android:layout_width="match_parent"
+                        android:layout_height="wrap_content"
+                        android:text="akjsdjkasdhjkahdjahsd jahsdkja ajsdhkasjdh kajshdkjashd akakjshd a"/>
+                </LinearLayout>
+
+
+            </LinearLayout>
+            <TextView
+                android:layout_marginTop="20dp"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:text="Admins"
+                android:textStyle="bold"
+                android:textColor="@color/black"/>
+            <LinearLayout
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:orientation="vertical"
+                android:layout_marginTop="10dp"
+                android:paddingTop="15dp"
+                android:paddingBottom="15dp"
+                android:background="@drawable/custom_dialog_background">
+
+                <androidx.recyclerview.widget.RecyclerView
+                    android:id="@+id/adminRecyclerView"
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content"/>
+            </LinearLayout>
+
+            <TextView
+                android:layout_marginTop="20dp"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:text="All Members"
+                android:textStyle="bold"
+                android:textColor="@color/black"/>
+            <LinearLayout
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:orientation="vertical"
+                android:layout_marginTop="10dp"
+                android:paddingTop="15dp"
+                android:paddingBottom="15dp"
+                android:background="@drawable/custom_dialog_background">
+
+                <androidx.recyclerview.widget.RecyclerView
+                    android:id="@+id/allMembersRecyclerView"
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content"/>
+            </LinearLayout>
+
+            <TextView
+                android:layout_marginTop="20dp"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:text="Comments"
+                android:textStyle="bold"
+                android:textColor="@color/black"/>
+
+
+            <LinearLayout
+                android:layout_marginTop="5dp"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:orientation="vertical"
+                android:padding="0dp"
+                android:background="@drawable/custom_dialog_background">
+
+                <LinearLayout
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content"
+                    android:background="@drawable/tab_layout_custom_background"
+                    android:orientation="horizontal"
+                    >
+
+                    <LinearLayout
+                        android:layout_width="match_parent"
+                        android:layout_height="wrap_content"
+                        android:orientation="horizontal"
+                        android:padding="10dp">
+
+                        <ImageView
+                            android:layout_width="40dp"
+                            android:layout_height="40dp"
+                            android:background="@drawable/roundborder" />
+
+                        <EditText
+                            android:id="@+id/clubUserPost"
+                            android:layout_width="match_parent"
+                            android:layout_height="wrap_content"
+                            android:layout_gravity="center"
+                            android:layout_marginLeft="0dp"
+                            android:background="@drawable/custom_dialog_background"
+                            android:hint="Write a comment..."
+                            android:textSize="12dp"
+                            android:textColor="@color/text_black"/>
+                    </LinearLayout>
+                </LinearLayout>
+
+                <androidx.constraintlayout.widget.ConstraintLayout
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content"
+                    android:orientation="horizontal">
+
+
+                    <Button
+                        android:id="@+id/clubPostButton"
+                        android:layout_width="82dp"
+                        android:layout_height="34dp"
+                        android:layout_margin="10dp"
+                        android:background="@drawable/button_background"
+                        android:padding="0dp"
+                        android:text="Post"
+                        android:textSize="12dp"
+                        app:layout_constraintBottom_toBottomOf="parent"
+                        app:layout_constraintEnd_toEndOf="parent"
+                        app:layout_constraintTop_toTopOf="parent">
+
+                    </Button>
+                </androidx.constraintlayout.widget.ConstraintLayout>
+
+            </LinearLayout>
+
+
+            <androidx.recyclerview.widget.RecyclerView
+                android:id="@+id/clubPostsRecycler"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:nestedScrollingEnabled="false"
+                android:paddingBottom="50dp"/>
+        </LinearLayout>
+    </ScrollView>
+    </LinearLayout>
Index: .idea/shelf/Uncommitted_changes_before_Update_at_2022-11-29_10_11_p_m__[Changes]1/shelved.patch
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_2022-11-29_10_11_p_m__[Changes]1/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_2022-11-29_10_11_p_m__[Changes]1/shelved.patch
new file mode 100644
--- /dev/null	
+++ b/.idea/shelf/Uncommitted_changes_before_Update_at_2022-11-29_10_11_p_m__[Changes]1/shelved.patch	
@@ -0,0 +1,43 @@
+Index: app/src/main/java/com/project24/animexapp/LogInActivity.kt
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package com.project24.animexapp\r\n\r\nimport android.content.Intent\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport android.os.Bundle\r\nimport android.widget.TextView\r\nimport android.widget.Toast\r\nimport com.google.firebase.auth.FirebaseAuth\r\nimport com.google.firebase.firestore.ktx.firestore\r\nimport com.google.firebase.ktx.Firebase\r\nimport com.project24.animexapp.databinding.ActivityLogInBinding\r\n\r\nclass LogInActivity : AppCompatActivity() {\r\n\r\n    private lateinit var binding:ActivityLogInBinding\r\n    private lateinit var firebaseAuth: FirebaseAuth\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n\r\n        val db = Firebase.firestore\r\n        binding = ActivityLogInBinding.inflate(layoutInflater)\r\n        setContentView(binding.root)\r\n        firebaseAuth = FirebaseAuth.getInstance()\r\n        binding.signUpBtn.setOnClickListener {\r\n            val intent = Intent(this, RegisterActivity::class.java)\r\n            startActivity(intent)\r\n        }\r\n\r\n        binding.logInBtn.setOnClickListener {\r\n            val userEmail = binding.emailInput.text.toString()\r\n            val userPass = binding.passwordInput.text.toString()\r\n\r\n\r\n            if (userEmail.isNotEmpty() && userPass.isNotEmpty()) {\r\n                firebaseAuth.signInWithEmailAndPassword(userEmail, userPass).addOnCompleteListener {\r\n                    if(it.isSuccessful) {\r\n                        Toast.makeText(this, \"Logged in successfully\", Toast.LENGTH_SHORT).show()\r\n\r\n\r\n                        val intent = Intent(this, MainActivity::class.java)\r\n                        startActivity(intent)\r\n\r\n                    } else {\r\n                        Toast.makeText(this, it.exception.toString(), Toast.LENGTH_SHORT).show()\r\n                    }\r\n                }\r\n            } else {\r\n                Toast.makeText(this, \"All fields must be filled\", Toast.LENGTH_SHORT).show()\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n}
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/app/src/main/java/com/project24/animexapp/LogInActivity.kt b/app/src/main/java/com/project24/animexapp/LogInActivity.kt
+--- a/app/src/main/java/com/project24/animexapp/LogInActivity.kt	
++++ b/app/src/main/java/com/project24/animexapp/LogInActivity.kt	
+@@ -20,6 +20,7 @@
+         val db = Firebase.firestore
+         binding = ActivityLogInBinding.inflate(layoutInflater)
+         setContentView(binding.root)
++
+         firebaseAuth = FirebaseAuth.getInstance()
+         binding.signUpBtn.setOnClickListener {
+             val intent = Intent(this, RegisterActivity::class.java)
+Index: .idea/deploymentTargetDropDown.xml
+===================================================================
+diff --git a/.idea/deploymentTargetDropDown.xml b/.idea/deploymentTargetDropDown.xml
+deleted file mode 100644
+--- a/.idea/deploymentTargetDropDown.xml	
++++ /dev/null	
+@@ -1,17 +0,0 @@
+-<?xml version="1.0" encoding="UTF-8"?>
+-<project version="4">
+-  <component name="deploymentTargetDropDown">
+-    <targetSelectedWithDropDown>
+-      <Target>
+-        <type value="QUICK_BOOT_TARGET" />
+-        <deviceKey>
+-          <Key>
+-            <type value="VIRTUAL_DEVICE_PATH" />
+-            <value value="C:\Users\matth\.android\avd\Pixel_4_API_29.avd" />
+-          </Key>
+-        </deviceKey>
+-      </Target>
+-    </targetSelectedWithDropDown>
+-    <timeTargetWasSelectedWithDropDown value="2022-11-29T00:51:01.635573400Z" />
+-  </component>
+-</project>
+\ No newline at end of file
Index: app/src/main/java/com/project24/animexapp/ui/profile/ProfileFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.project24.animexapp.ui.profile\r\n\r\nimport android.content.Context.MODE_PRIVATE\r\nimport android.content.Intent\r\nimport android.os.Bundle\r\nimport android.os.Handler\r\nimport android.os.Looper\r\nimport android.util.Log\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport android.widget.Toast\r\nimport androidx.core.content.ContextCompat\r\nimport androidx.fragment.app.Fragment\r\nimport androidx.lifecycle.ViewModelProvider\r\nimport androidx.recyclerview.widget.LinearLayoutManager\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport com.google.firebase.auth.FirebaseAuth\r\nimport com.google.firebase.firestore.ktx.firestore\r\nimport com.google.firebase.ktx.Firebase\r\nimport com.project24.animexapp.LogInActivity\r\nimport com.project24.animexapp.R\r\nimport com.project24.animexapp.api.JikanApiClient\r\nimport com.project24.animexapp.api.LocalAnime\r\nimport com.project24.animexapp.api.UserFavouritesResponse\r\nimport com.project24.animexapp.databinding.FragmentProfileBinding\r\nimport dev.failsafe.RetryPolicy\r\nimport dev.failsafe.retrofit.FailsafeCall\r\nimport retrofit2.Response\r\nimport java.time.Duration\r\n\r\n\r\nclass ProfileFragment : Fragment() {\r\n\r\n    private var _binding: FragmentProfileBinding? = null\r\n    private lateinit var firebaseAuth: FirebaseAuth\r\n\r\n    private lateinit var favoritesList: List<LocalAnime>\r\n    private lateinit var favoritesAnimeRV: RecyclerView\r\n    private lateinit var favoritesAnimeAdapter: LocalAnimeRVAdapter\r\n\r\n    private lateinit var watchLaterList: List<LocalAnime>\r\n    private lateinit var watchLaterAnimeRV: RecyclerView\r\n    private lateinit var watchLaterAnimeAdapter: LocalAnimeRVAdapter\r\n\r\n    private lateinit var watchingList: List<LocalAnime>\r\n    private lateinit var watchingAnimeRV: RecyclerView\r\n    private lateinit var watchingAnimeAdapter: LocalAnimeRVAdapter\r\n\r\n    private lateinit var profileViewModel : ProfileViewModel\r\n\r\n    private lateinit var currentUserID : String\r\n    private lateinit var chosenLanguage : String\r\n\r\n    // This property is only valid between onCreateView and\r\n    // onDestroyView.\r\n    private val binding get() = _binding!!\r\n\r\n    override fun onCreateView(\r\n        inflater: LayoutInflater,\r\n        container: ViewGroup?,\r\n        savedInstanceState: Bundle?\r\n    ): View {\r\n        firebaseAuth = FirebaseAuth.getInstance()\r\n        val db = Firebase.firestore\r\n        profileViewModel =\r\n            ViewModelProvider(this).get(ProfileViewModel::class.java)\r\n\r\n        _binding = FragmentProfileBinding.inflate(inflater, container, false)\r\n        val root: View = binding.root\r\n\r\n        val profileEmail = binding.profileEmail\r\n        val currentUserEmail = firebaseAuth.currentUser?.email.toString()\r\n        currentUserID = firebaseAuth.currentUser?.uid.toString()\r\n        val favEmptyText = binding.emptyFavText\r\n        val watchingEmptyText = binding.emptyWatchingText\r\n        val watchLaterEmptyText = binding.emptyWatchLaterText\r\n        val profileContent = binding.profileContent\r\n        val profileLogoutButton = binding.profileLogoutButton\r\n        val noAccountContent = binding.noAccountContent\r\n        val profileLoginButton = binding.profileLoginButton\r\n        val englishBtn = binding.englishBtn\r\n        val japaneseBtn = binding.japaneseBtn\r\n        val chosenLanguagePreferences = requireActivity().getSharedPreferences(getString(R.string.shared_preference_language_key), MODE_PRIVATE)\r\n        chosenLanguage =\r\n            chosenLanguagePreferences.getString(getString(R.string.chosen_language_key), getString(R.string.english))!!\r\n\r\n        profileLogoutButton.setOnClickListener {\r\n            firebaseAuth.signOut()\r\n            currentUserID = null.toString()\r\n            Toast.makeText(activity, \"Logged out\", Toast.LENGTH_SHORT).show()\r\n            profileContent.visibility = View.GONE\r\n            profileLogoutButton.visibility = View.GONE\r\n            noAccountContent.visibility = View.VISIBLE\r\n            profileEmail.text = \"Guest\"\r\n            profileLoginButton.isClickable\r\n            activity?.recreate()\r\n        }\r\n\r\n        // Set language for entire app\r\n        englishBtn.setOnClickListener{\r\n            englishBtn.setBackgroundTintList(ContextCompat.getColorStateList(requireActivity(), R.color.light_green))\r\n            japaneseBtn.setBackgroundTintList(ContextCompat.getColorStateList(requireActivity(), R.color.back_tint_gray))\r\n\r\n            if (currentUserID != \"null\" && chosenLanguage == getString(R.string.japanese)){\r\n                val updateUiThread = Thread(){\r\n                    val handler = Handler(Looper.getMainLooper())\r\n                    val myRunnable = Runnable {\r\n                        updateFavourites(currentUserID, chosenLanguage)\r\n                        updateWatchingLater(currentUserID, chosenLanguage)\r\n                        updateCurrentlyWatching(currentUserID, chosenLanguage)\r\n                    }\r\n                    handler.post(myRunnable)\r\n                }\r\n                updateUiThread.start()\r\n                updateUiThread.join()\r\n            }\r\n\r\n\r\n            val prefsEditor = chosenLanguagePreferences.edit()\r\n            prefsEditor.clear()\r\n            prefsEditor.putString(getString(R.string.chosen_language_key), getString(R.string.english))\r\n            chosenLanguage = getString(R.string.english)\r\n            prefsEditor.apply()\r\n        }\r\n\r\n        japaneseBtn.setOnClickListener{\r\n            englishBtn.setBackgroundTintList(ContextCompat.getColorStateList(requireActivity(), R.color.back_tint_gray))\r\n            japaneseBtn.setBackgroundTintList(ContextCompat.getColorStateList(requireActivity(), R.color.main_color))\r\n\r\n            if (currentUserID != \"null\" && chosenLanguage == getString(R.string.english)){\r\n                val updateUiThread = Thread(){\r\n                    val handler = Handler(Looper.getMainLooper())\r\n                    val myRunnable = Runnable {\r\n                        updateFavourites(currentUserID, chosenLanguage)\r\n                        updateWatchingLater(currentUserID, chosenLanguage)\r\n                        updateCurrentlyWatching(currentUserID, chosenLanguage)\r\n                    }\r\n                    handler.post(myRunnable)\r\n                }\r\n                updateUiThread.start()\r\n                updateUiThread.join()\r\n            }\r\n\r\n            val prefsEditor = chosenLanguagePreferences.edit()\r\n            prefsEditor.clear()\r\n            prefsEditor.putString(getString(R.string.chosen_language_key), getString(R.string.japanese))\r\n            chosenLanguage = getString(R.string.japanese)\r\n            prefsEditor.apply()\r\n        }\r\n\r\n        if (chosenLanguage == getString(R.string.english)){\r\n            englishBtn.setBackgroundTintList(ContextCompat.getColorStateList(requireActivity(), R.color.light_green))\r\n        }\r\n        else {\r\n            japaneseBtn.setBackgroundTintList(ContextCompat.getColorStateList(requireActivity(), R.color.main_color))\r\n        }\r\n\r\n        profileEmail.text = if(currentUserEmail==\"null\") \"Guest\" else currentUserEmail\r\n\r\n        favoritesList = emptyList()\r\n        favoritesAnimeRV = binding.favoritesRecyclerView\r\n        favoritesAnimeAdapter = LocalAnimeRVAdapter(favoritesList)\r\n\r\n        watchLaterList = emptyList()\r\n        watchLaterAnimeRV = binding.watchLaterRecyclerView\r\n        watchLaterAnimeAdapter = LocalAnimeRVAdapter(watchLaterList)\r\n\r\n        watchingList = emptyList()\r\n        watchingAnimeRV = binding.watchingRecyclerView\r\n        watchingAnimeAdapter = LocalAnimeRVAdapter(watchingList)\r\n\r\n\r\n        favoritesAnimeRV.layoutManager = LinearLayoutManager(\r\n            context,\r\n            LinearLayoutManager.HORIZONTAL, false\r\n        )\r\n        favoritesAnimeRV.adapter = favoritesAnimeAdapter\r\n\r\n        watchLaterAnimeRV.layoutManager = LinearLayoutManager(\r\n            context,\r\n            LinearLayoutManager.HORIZONTAL, false\r\n        )\r\n        watchLaterAnimeRV.adapter = watchLaterAnimeAdapter\r\n\r\n        watchingAnimeRV.layoutManager = LinearLayoutManager(\r\n            context,\r\n            LinearLayoutManager.HORIZONTAL, false\r\n        )\r\n        watchingAnimeRV.adapter = watchingAnimeAdapter\r\n\r\n        if (currentUserID != \"null\") {\r\n\r\n            val favDocRef = db.collection(\"Users\").document(currentUserID).collection(\"Favourites\")\r\n            val watchLaterDocRef = db.collection(\"Users\").document(currentUserID).collection(\"WatchLater\")\r\n            val watchingDocRef = db.collection(\"Users\").document(currentUserID).collection(\"Watching\")\r\n\r\n            noAccountContent.visibility = View.GONE\r\n            profileLogoutButton.visibility = View.VISIBLE\r\n\r\n            favDocRef.get().addOnSuccessListener() {\r\n                if(it.isEmpty) {\r\n                    favEmptyText.text = \"You have no items on your favourites yet.\"\r\n                } else {\r\n                    favEmptyText.visibility = View.GONE\r\n                }\r\n            }\r\n\r\n            watchingDocRef.get().addOnSuccessListener() {\r\n                if(it.isEmpty) {\r\n                    watchingEmptyText.text = \"You have no items on your watching yet.\"\r\n                } else {\r\n                    watchingEmptyText.visibility = View.GONE\r\n                }\r\n            }\r\n\r\n            watchLaterDocRef.get().addOnSuccessListener() {\r\n                if(it.isEmpty) {\r\n                    watchLaterEmptyText.text = \"You have no items on your watch later yet.\"\r\n                } else {\r\n                    watchLaterEmptyText.visibility = View.GONE\r\n                }\r\n            }\r\n\r\n            updateFavourites(currentUserID, chosenLanguage)\r\n            updateWatchingLater(currentUserID, chosenLanguage)\r\n            updateCurrentlyWatching(currentUserID, chosenLanguage)\r\n        } else {\r\n            profileContent.visibility = View.GONE\r\n            profileLogoutButton.visibility = View.GONE\r\n\r\n            profileLoginButton.setOnClickListener {\r\n                val intent = Intent(activity, LogInActivity::class.java)\r\n                startActivity(intent)\r\n\r\n            }\r\n        }\r\n        return root\r\n    }\r\n\r\n    override fun onResume() {\r\n        if (currentUserID!==\"null\") {\r\n            val updateUiThread = Thread(){\r\n                val handler = Handler(Looper.getMainLooper())\r\n                val myRunnable = Runnable {\r\n                    updateFavourites(currentUserID, chosenLanguage)\r\n                    updateWatchingLater(currentUserID, chosenLanguage)\r\n                    updateCurrentlyWatching(currentUserID, chosenLanguage)\r\n                }\r\n                handler.post(myRunnable)\r\n            }\r\n            updateUiThread.start()\r\n            updateUiThread.join()\r\n        }\r\n\r\n        super.onResume()\r\n    }\r\n\r\n    fun logUserFavourites(username: String){\r\n        val client = JikanApiClient.apiService.requestUserFavourites(username = username)\r\n\r\n        val retryPolicy = RetryPolicy.builder<Response<UserFavouritesResponse>>()\r\n            .withDelay(Duration.ofSeconds(1))\r\n            .withMaxRetries(3)\r\n            .build()\r\n\r\n        val failsafeCall = FailsafeCall.with(retryPolicy).compose(client)\r\n\r\n        val cFuture = failsafeCall.executeAsync()\r\n        cFuture.thenApply {\r\n            if(it.isSuccessful){\r\n                if(it.body() != null){\r\n                    val userFavs = it.body()!!.result\r\n                    Log.d(\"USER FAVS ANIME\",\"\"+userFavs.toString())\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    override fun onDestroyView() {\r\n        super.onDestroyView()\r\n        _binding = null\r\n    }\r\n\r\n    private fun updateFavourites(currentUserID: String, chosenLanguage: String?) {\r\n        val db = Firebase.firestore\r\n        favoritesList = emptyList()\r\n\r\n        db.collection(\"Users\").document(currentUserID).collection(\"Favourites\").get()\r\n            .addOnSuccessListener { favourite ->\r\n                for (document in favourite) {\r\n                    var malID: Long = document.data.getValue(\"mal_id\") as Long\r\n                    var imgURL: String = document.data.getValue(\"image_url\") as String\r\n\r\n                    // To prevent older version of database from crashing\r\n                    if (document.data.size > 3) {\r\n                        if (chosenLanguage == getString(R.string.english)\r\n                            && document.data.getValue(\"anime_english_title\") != null\r\n                        ) {\r\n                            var animeTitle: String =\r\n                                document.data.getValue(\"anime_english_title\") as String\r\n                            favoritesList =\r\n                                favoritesList + LocalAnime(malID, animeTitle, imgURL)\r\n                            // DELETE THIS\r\n                            Log.d(\"ARRR\", favoritesList.toString())\r\n                        } else {\r\n                            var animeTitle: String =\r\n                                document.data.getValue(\"anime_title\") as String\r\n                            favoritesList =\r\n                                favoritesList + LocalAnime(malID, animeTitle, imgURL)\r\n                        }\r\n                    }\r\n                    else{\r\n                        var animeTitle: String =\r\n                            document.data.getValue(\"anime_title\") as String\r\n                        favoritesList =\r\n                            favoritesList + LocalAnime(malID, animeTitle, imgURL)\r\n                    }\r\n\r\n                    favoritesAnimeAdapter.animeList = favoritesList\r\n                    favoritesAnimeAdapter.notifyDataSetChanged()\r\n                }\r\n            }\r\n    }\r\n\r\n    private fun updateWatchingLater(currentUserID: String, chosenLanguage: String?) {\r\n        val db = Firebase.firestore\r\n        watchLaterList = emptyList()\r\n\r\n        db.collection(\"Users\").document(currentUserID).collection(\"WatchLater\").get()\r\n            .addOnSuccessListener { watchLater ->\r\n                for (document in watchLater) {\r\n                    var malID: Long = document.data.getValue(\"mal_id\") as Long\r\n                    var imgURL: String = document.data.getValue(\"image_url\") as String\r\n\r\n                    // To prevent older version of database from crashing\r\n                    if (document.data.size > 3) {\r\n                        if (chosenLanguage == getString(R.string.english)\r\n                            && document.data.getValue(\"anime_english_title\")  != null\r\n                        ) {\r\n                            var animeTitle: String =\r\n                                document.data.getValue(\"anime_english_title\") as String\r\n                            watchLaterList =\r\n                                watchLaterList + LocalAnime(malID, animeTitle, imgURL)\r\n                        }\r\n                        else {\r\n                            var animeTitle: String =\r\n                                document.data.getValue(\"anime_title\") as String\r\n                            watchLaterList =\r\n                                watchLaterList + LocalAnime(malID, animeTitle, imgURL)\r\n                        }\r\n                    }\r\n                    else{\r\n                        var animeTitle: String =\r\n                            document.data.getValue(\"anime_title\") as String\r\n                        watchLaterList =\r\n                            watchLaterList + LocalAnime(malID, animeTitle, imgURL)\r\n                    }\r\n                    watchLaterAnimeAdapter.animeList = watchLaterList\r\n                    watchLaterAnimeAdapter.notifyDataSetChanged()\r\n                }\r\n            }\r\n    }\r\n\r\n    private fun updateCurrentlyWatching(currentUserID: String, chosenLanguage: String?) {\r\n        val db = Firebase.firestore\r\n        watchingList = emptyList()\r\n        db.collection(\"Users\").document(currentUserID).collection(\"Watching\").get()\r\n            .addOnSuccessListener { watching ->\r\n                //Log.d(\"favorite\",favourite.documents.)\r\n                //var idList = emptyList<Long>()\r\n                for (document in watching) {\r\n                    var malID: Long = document.data.getValue(\"mal_id\") as Long\r\n                    var imgURL: String = document.data.getValue(\"image_url\") as String\r\n\r\n                    // To prevent older version of database from crashing\r\n                    if (document.data.size > 3) {\r\n                        if (chosenLanguage == getString(R.string.english)\r\n                            && document.data.getValue(\"anime_english_title\") != null\r\n                        ) {\r\n                            var animeTitle: String =\r\n                                document.data.getValue(\"anime_english_title\") as String\r\n                            watchingList = watchingList + LocalAnime(malID, animeTitle, imgURL)\r\n                        }\r\n                        else {\r\n                            var animeTitle: String =\r\n                                document.data.getValue(\"anime_title\") as String\r\n                            watchingList = watchingList + LocalAnime(malID, animeTitle, imgURL)\r\n                        }\r\n                    }\r\n                    else {\r\n                        var animeTitle: String =\r\n                            document.data.getValue(\"anime_title\") as String\r\n                        watchingList = watchingList + LocalAnime(malID, animeTitle, imgURL)\r\n                    }\r\n                    watchingAnimeAdapter.animeList = watchingList\r\n                    watchingAnimeAdapter.notifyDataSetChanged()\r\n                }\r\n            }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/project24/animexapp/ui/profile/ProfileFragment.kt b/app/src/main/java/com/project24/animexapp/ui/profile/ProfileFragment.kt
--- a/app/src/main/java/com/project24/animexapp/ui/profile/ProfileFragment.kt	
+++ b/app/src/main/java/com/project24/animexapp/ui/profile/ProfileFragment.kt	
@@ -398,4 +398,4 @@
                 }
             }
     }
-}
+}
\ No newline at end of file
Index: app/src/main/java/com/project24/animexapp/ui/community/CommunityFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.project24.animexapp.ui.community\r\n\r\nimport android.os.Bundle\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport android.widget.TextView\r\nimport androidx.fragment.app.Fragment\r\nimport androidx.lifecycle.ViewModelProvider\r\nimport androidx.viewpager.widget.ViewPager\r\nimport com.google.android.material.tabs.TabLayout\r\nimport com.project24.animexapp.databinding.FragmentCommunityBinding\r\nimport com.project24.animexapp.ui.CommunityTabAdapter\r\n\r\n\r\nclass CommunityFragment : Fragment() {\r\n\r\n    private var _binding: FragmentCommunityBinding? = null\r\n    private lateinit var tabLayout: TabLayout\r\n    private lateinit var viewPager: ViewPager\r\n\r\n    // This property is only valid between onCreateView and\r\n    // onDestroyView.\r\n    private val binding get() = _binding!!\r\n\r\n    override fun onCreateView(\r\n        inflater: LayoutInflater,\r\n        container: ViewGroup?,\r\n        savedInstanceState: Bundle?\r\n    ): View {\r\n        val notificationsViewModel =\r\n            ViewModelProvider(this).get(CommunityViewModel::class.java)\r\n\r\n        _binding = FragmentCommunityBinding.inflate(inflater, container, false)\r\n        val root: View = binding.root\r\n\r\n        tabLayout = binding.communityTabLayout\r\n        viewPager = binding.communityViewPager\r\n\r\n        tabLayout.addTab(tabLayout.newTab().setText(\"Feed\"))\r\n        tabLayout.addTab(tabLayout.newTab().setText(\"News\"))\r\n        tabLayout.addTab(tabLayout.newTab().setText(\"Events\"))\r\n        tabLayout.addTab(tabLayout.newTab().setText(\"Games\"))\r\n        tabLayout.tabGravity = TabLayout.GRAVITY_FILL\r\n\r\n        val adapter = CommunityTabAdapter(requireContext(), childFragmentManager, tabLayout.tabCount)\r\n        viewPager.adapter = adapter\r\n\r\n        viewPager.addOnPageChangeListener(TabLayout.TabLayoutOnPageChangeListener(tabLayout))\r\n        tabLayout.addOnTabSelectedListener(object: TabLayout.OnTabSelectedListener{\r\n            override fun onTabSelected(tab: TabLayout.Tab?) {\r\n                viewPager.currentItem = tab!!.position\r\n            }\r\n\r\n            override fun onTabUnselected(tab: TabLayout.Tab?) {}\r\n\r\n            override fun onTabReselected(tab: TabLayout.Tab?) {\r\n                viewPager.currentItem = tab!!.position\r\n            }\r\n\r\n        })\r\n\r\n\r\n        return root\r\n    }\r\n\r\n    override fun onDestroyView() {\r\n        super.onDestroyView()\r\n        _binding = null\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/project24/animexapp/ui/community/CommunityFragment.kt b/app/src/main/java/com/project24/animexapp/ui/community/CommunityFragment.kt
--- a/app/src/main/java/com/project24/animexapp/ui/community/CommunityFragment.kt	
+++ b/app/src/main/java/com/project24/animexapp/ui/community/CommunityFragment.kt	
@@ -38,9 +38,7 @@
         viewPager = binding.communityViewPager
 
         tabLayout.addTab(tabLayout.newTab().setText("Feed"))
-        tabLayout.addTab(tabLayout.newTab().setText("News"))
-        tabLayout.addTab(tabLayout.newTab().setText("Events"))
-        tabLayout.addTab(tabLayout.newTab().setText("Games"))
+        tabLayout.addTab(tabLayout.newTab().setText("Clubs"))
         tabLayout.tabGravity = TabLayout.GRAVITY_FILL
 
         val adapter = CommunityTabAdapter(requireContext(), childFragmentManager, tabLayout.tabCount)
@@ -57,10 +55,7 @@
             override fun onTabReselected(tab: TabLayout.Tab?) {
                 viewPager.currentItem = tab!!.position
             }
-
         })
-
-
         return root
     }
 
Index: app/src/main/java/com/project24/animexapp/ui/community/ClubAdminAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/project24/animexapp/ui/community/ClubAdminAdapter.kt b/app/src/main/java/com/project24/animexapp/ui/community/ClubAdminAdapter.kt
new file mode 100644
--- /dev/null	
+++ b/app/src/main/java/com/project24/animexapp/ui/community/ClubAdminAdapter.kt	
@@ -0,0 +1,42 @@
+package com.project24.animexapp.ui.community
+
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import android.widget.GridView
+import android.widget.ImageView
+import android.widget.TextView
+import androidx.recyclerview.widget.RecyclerView
+import com.project24.animexapp.R
+
+class ClubAdminAdapter(var adminsList: List<Admins>) : RecyclerView.Adapter<ClubAdminAdapter.ClubAdminViewHolder>(){
+
+    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ClubAdminViewHolder {
+        val view = LayoutInflater.from(parent.context).inflate(R.layout.profile_img_username_item, parent, false)
+        return ClubAdminAdapter.ClubAdminViewHolder(view)
+    }
+
+    override fun onBindViewHolder(holder: ClubAdminViewHolder, position: Int) {
+        val adminItem = adminsList[position]
+        holder.bindAdmin(adminItem)
+    }
+
+    override fun getItemCount(): Int {
+        return adminsList.size
+    }
+
+    class ClubAdminViewHolder(itemView: View) : RecyclerView.ViewHolder(itemView) {
+        private var view: View = itemView
+        private lateinit var adminItem: Admins
+        init {
+
+        }
+        fun bindAdmin(adminItem: Admins) {
+            this.adminItem = adminItem
+            view.findViewById<TextView>(R.id.userName).text = adminItem.userName
+        }
+
+    }
+
+
+}
\ No newline at end of file
Index: app/src/main/java/com/project24/animexapp/PostAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.project24.animexapp\r\n\r\nimport android.content.Context\r\nimport android.content.Intent\r\nimport android.graphics.Color\r\nimport android.graphics.ColorFilter\r\nimport android.graphics.drawable.Drawable\r\nimport android.util.Log\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.View.OnClickListener\r\nimport android.view.ViewGroup\r\nimport android.widget.ImageView\r\nimport android.widget.TextView\r\nimport android.widget.Toast\r\nimport androidx.core.content.res.ResourcesCompat\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport com.bumptech.glide.Glide\r\nimport com.google.firebase.auth.FirebaseAuth\r\nimport com.google.firebase.firestore.FieldValue\r\nimport com.google.firebase.firestore.ktx.firestore\r\nimport com.google.firebase.ktx.Firebase\r\nimport com.project24.animexapp.api.LocalAnime\r\nimport com.project24.animexapp.ui.community.Feed\r\nimport com.project24.animexapp.ui.home.AnimeRVAdapter\r\n\r\n\r\nclass PostAdapter(var postList : List<Posts>): RecyclerView.Adapter<PostAdapter.ViewHolder>() {\r\n\r\n    private lateinit var firebaseAuth: FirebaseAuth\r\n\r\n    override fun onCreateViewHolder(parent:ViewGroup, viewType: Int): ViewHolder {\r\n        val view = LayoutInflater.from(parent.context).inflate(R.layout.post_item, parent, false)\r\n        return ViewHolder(view)\r\n    }\r\n\r\n    override fun getItemCount(): Int {\r\n        return postList.size\r\n    }\r\n    override fun onBindViewHolder(holder: PostAdapter.ViewHolder, position: Int) {\r\n\r\n        val postItem = postList[position]\r\n        holder.bindAnime(postItem)\r\n    }\r\n\r\n    class ViewHolder(itemView: View): RecyclerView.ViewHolder(itemView) {\r\n\r\n        private var view: View = itemView\r\n        private lateinit var postItem: Posts\r\n        var button: ImageView\r\n        var context: Context = itemView.context\r\n        val db = Firebase.firestore\r\n        var firebaseAuth: FirebaseAuth = FirebaseAuth.getInstance()\r\n\r\n        init {\r\n            val thumbsClicked: Drawable? = ResourcesCompat.getDrawable(\r\n                context.resources,\r\n                R.drawable.ic_baseline_thumb_up_alt_24,\r\n                null\r\n            )\r\n            val thumbsUnClicked: Drawable? = ResourcesCompat.getDrawable(\r\n                context.resources,\r\n                R.drawable.ic_baseline_thumb_up_off_alt_24,\r\n                null\r\n            )\r\n            val currentUserId = firebaseAuth.currentUser?.uid\r\n            button = itemView.findViewById(R.id.thumbsUpButton)\r\n\r\n\r\n\r\n            button.setOnClickListener {\r\n                db.collection(\"Posts\").document(postItem.postId.toString()).collection(\"LikedBy\").document(currentUserId.toString()).get().addOnSuccessListener {\r\n                    if(it.exists()) {\r\n                        button.setImageDrawable(thumbsUnClicked)\r\n                        db.collection(\"Posts\").document(postItem.postId.toString())\r\n                            .update(\"likes\", FieldValue.increment(-1))\r\n                        db.collection(\"Posts\").document(postItem.postId.toString()).collection(\"LikedBy\").document(currentUserId.toString()).delete()\r\n                    } else {\r\n                        button.setImageDrawable(thumbsClicked)\r\n                        db.collection(\"Posts\").document(postItem.postId.toString()).collection(\"LikedBy\")\r\n                            .document(currentUserId.toString()).set(\r\n                                Posts(\r\n                                    postItem.postText,\r\n                                    \"\",\r\n                                    \"\",\r\n                                    \"\",\r\n                                    postItem.username,\r\n                                    postItem.time,\r\n                                    postItem.date,\r\n                                    postItem.likes,\r\n                                    postItem.commentsNum,\r\n                                    postItem.postId.toString()\r\n                                )\r\n                            )\r\n                        db.collection(\"Posts\").document(postItem.postId.toString())\r\n                            .update(\"likes\", FieldValue.increment(1))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        fun bindAnime(postItem: Posts) {\r\n            val currentUserId = firebaseAuth.currentUser?.uid\r\n            button = itemView.findViewById(R.id.thumbsUpButton)\r\n            this.postItem = postItem\r\n            val thumbsClicked: Drawable? = ResourcesCompat.getDrawable(\r\n                context.resources,\r\n                R.drawable.ic_baseline_thumb_up_alt_24,\r\n                null\r\n            )\r\n            val thumbsUnClicked: Drawable? = ResourcesCompat.getDrawable(\r\n                context.resources,\r\n                R.drawable.ic_baseline_thumb_up_off_alt_24,\r\n                null\r\n            )\r\n\r\n            db.collection(\"Posts\").document(postItem.postId.toString()).collection(\"LikedBy\").document(currentUserId.toString()).get().addOnSuccessListener {\r\n                if (it.exists()) {\r\n                    button.setImageDrawable(thumbsClicked)\r\n                } else {\r\n                    button.setImageDrawable(thumbsUnClicked)\r\n                }\r\n            }\r\n            view.findViewById<TextView>(R.id.postText).text = postItem.postText\r\n            view.findViewById<TextView>(R.id.postUsername).text = postItem.username\r\n            view.findViewById<TextView>(R.id.postLikesCount).text = postItem.likes.toString()\r\n            view.findViewById<TextView>(R.id.postCommentsCount).text = postItem.commentsNum.toString()\r\n            view.findViewById<TextView>(R.id.postDate).text = postItem.date.toString()\r\n        }\r\n\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/project24/animexapp/PostAdapter.kt b/app/src/main/java/com/project24/animexapp/PostAdapter.kt
--- a/app/src/main/java/com/project24/animexapp/PostAdapter.kt	
+++ b/app/src/main/java/com/project24/animexapp/PostAdapter.kt	
@@ -66,8 +66,6 @@
             val currentUserId = firebaseAuth.currentUser?.uid
             button = itemView.findViewById(R.id.thumbsUpButton)
 
-
-
             button.setOnClickListener {
                 db.collection("Posts").document(postItem.postId.toString()).collection("LikedBy").document(currentUserId.toString()).get().addOnSuccessListener {
                     if(it.exists()) {
@@ -124,7 +122,6 @@
             view.findViewById<TextView>(R.id.postText).text = postItem.postText
             view.findViewById<TextView>(R.id.postUsername).text = postItem.username
             view.findViewById<TextView>(R.id.postLikesCount).text = postItem.likes.toString()
-            view.findViewById<TextView>(R.id.postCommentsCount).text = postItem.commentsNum.toString()
             view.findViewById<TextView>(R.id.postDate).text = postItem.date.toString()
         }
 
Index: app/src/main/java/com/project24/animexapp/ui/community/Admins.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/project24/animexapp/ui/community/Admins.kt b/app/src/main/java/com/project24/animexapp/ui/community/Admins.kt
new file mode 100644
--- /dev/null	
+++ b/app/src/main/java/com/project24/animexapp/ui/community/Admins.kt	
@@ -0,0 +1,6 @@
+package com.project24.animexapp.ui.community
+
+data class Admins(
+    val userName: String? = null
+
+)
Index: app/src/main/java/com/project24/animexapp/AnimeDetails.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.project24.animexapp\r\n\r\nimport android.app.Dialog\r\nimport android.content.ContentValues.TAG\r\nimport android.content.Context\r\nimport android.content.pm.PackageManager\r\nimport android.graphics.Color\r\nimport android.graphics.drawable.ColorDrawable\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport android.view.View\r\nimport android.widget.*\r\nimport androidx.recyclerview.widget.LinearLayoutManager\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport com.bumptech.glide.Glide\r\nimport com.google.android.youtube.player.YouTubeBaseActivity\r\nimport com.google.android.youtube.player.YouTubeInitializationResult\r\nimport com.google.android.youtube.player.YouTubePlayer\r\nimport com.google.android.youtube.player.YouTubePlayerView\r\nimport com.google.firebase.auth.FirebaseAuth\r\nimport com.google.firebase.firestore.ktx.firestore\r\nimport com.google.firebase.ktx.Firebase\r\nimport com.project24.animexapp.api.*\r\nimport dev.failsafe.RetryPolicy\r\nimport dev.failsafe.retrofit.FailsafeCall\r\nimport retrofit2.Response\r\nimport java.text.SimpleDateFormat\r\nimport java.time.Duration\r\nimport java.util.*\r\nimport kotlin.collections.ArrayList\r\n\r\n\r\nclass AnimeDetails : YouTubeBaseActivity() {\r\n    private var animeID : Long = -1\r\n    private var animeIDKitsu : String = \"\"\r\n    private var YOUTUBE_API_KEY: String? = \"\"\r\n    private lateinit var firebaseAuth: FirebaseAuth\r\n    private var youTubePlayerView : YouTubePlayerView? = null\r\n    private lateinit var reviewsList: List<Reviews>\r\n    private lateinit var reviewsAnimeRV: RecyclerView\r\n    private lateinit var reviewsAnimeAdapter: ReviewAdapter\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        val extras = intent.extras\r\n        if(extras!=null) {\r\n            // Reset values\r\n            animeID = -1\r\n            animeIDKitsu = \"\"\r\n\r\n            // Extract values from extras\r\n            animeID = extras.getLong(getString(R.string.anime_id_key), -1)\r\n            animeIDKitsu = extras.getString(getString(R.string.anime_id_kitsu), \"No Title\")\r\n        }\r\n\r\n        setContentView(R.layout.activity_anime_details)\r\n\r\n        YOUTUBE_API_KEY = this.packageManager.getApplicationInfo(\r\n            this.packageName,\r\n            PackageManager.GET_META_DATA\r\n        ).metaData.getString(\"com.project24.animexapp.YoutubeKey\")\r\n\r\n        grabAnimeInfo()\r\n    }\r\n\r\n    private fun grabAnimeInfo() {\r\n        if (animeID.toInt() == -1 && animeIDKitsu == \"No Title\"){\r\n            return //Indicates the previous activity did not correctly pass the animeID\r\n        }\r\n\r\n        // If Jikan was used to provide the animeID to AnimeDetails\r\n        else if (animeID.toInt() != -1) {\r\n            val client = JikanApiClient.apiService.getAnimeByID(animeID)\r\n\r\n            val retryPolicy = RetryPolicy.builder<Response<AnimeSearchByIDResponse>>()\r\n                .withDelay(Duration.ofSeconds(1))\r\n                .withMaxRetries(3)\r\n                .build()\r\n\r\n            val failsafeCall = FailsafeCall.with(retryPolicy).compose(client)\r\n\r\n            val cFuture = failsafeCall.executeAsync()\r\n            cFuture.thenApply {\r\n                if (it.isSuccessful) {\r\n                    if (it.body() != null) {\r\n                        val animeData = it.body()!!.animeData\r\n\r\n                        setAnimeDetails(animeData)\r\n                        SetUpStarsRating(animeData)\r\n                        setButtons(animeData)\r\n                        setReviewDialog(animeData)\r\n                        setReviewAdapter(animeData)\r\n                    }\r\n                }\r\n            }\r\n\r\n            val client2 = JikanApiClient.apiService.getAnimeCharacterById(animeID)\r\n\r\n            val retryPolicy2 = RetryPolicy.builder<Response<AnimeCharacterSearchResponse>>()\r\n                .withDelay(Duration.ofSeconds(1))\r\n                .withMaxRetries(3)\r\n                .build()\r\n\r\n            val failsafeCall2 = FailsafeCall.with(retryPolicy2).compose(client2)\r\n\r\n            val cFuture2 = failsafeCall2.executeAsync()\r\n            cFuture2.thenApply {\r\n                if (it.isSuccessful) {\r\n                    if (it.body() != null) {\r\n                        setAnimeCharacterDetails(it.body()!!.animeData)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // If Kitsu was used to provide animeID to AnimeDetails\r\n        else{\r\n            val animeTitleQuery = convertToQuery(animeIDKitsu)\r\n            val client = JikanApiClient.apiService.requestAnime(query = animeTitleQuery)\r\n\r\n            val retryPolicy = RetryPolicy.builder<Response<AnimeSearchResponse>>()\r\n                .withDelay(Duration.ofSeconds(1))\r\n                .withMaxRetries(3)\r\n                .build()\r\n\r\n            val failsafeCall = FailsafeCall.with(retryPolicy).compose(client)\r\n\r\n            // Grab Anime details\r\n            val cFuture = failsafeCall.executeAsync()\r\n            cFuture.thenApply {\r\n                if (it.isSuccessful) {\r\n                    if (it.body() != null) {\r\n                        val animeData = it.body()!!.result.get(0)\r\n\r\n                        // Set Anime Details\r\n                        setAnimeDetails(animeData)\r\n                        SetUpStarsRating(animeData)\r\n                        setButtons(animeData)\r\n                        setReviewDialog(animeData)\r\n                        setReviewAdapter(animeData)\r\n\r\n                        // Set Character Details\r\n                        val newAnimeID = animeData.mal_id\r\n                        val client2 = JikanApiClient.apiService.getAnimeCharacterById(newAnimeID)\r\n                        val retryPolicy2 = RetryPolicy.builder<Response<AnimeCharacterSearchResponse>>()\r\n                            .withDelay(Duration.ofSeconds(1))\r\n                            .withMaxRetries(3)\r\n                            .build()\r\n                        val failsafeCall2 = FailsafeCall.with(retryPolicy2).compose(client2)\r\n                        val cFuture2 = failsafeCall2.executeAsync()\r\n                        cFuture2.thenApply {\r\n                            if (it.isSuccessful) {\r\n                                if (it.body() != null) {\r\n                                    setAnimeCharacterDetails(it.body()!!.animeData)\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private fun convertToQuery(givenTitle: String): String {\r\n        var resultQuery = \"\"\r\n        val stringArr = givenTitle.split(\" \").toTypedArray()\r\n        for (str in stringArr){\r\n            if (str == stringArr.get(stringArr.size - 1)){\r\n                resultQuery += str\r\n            }\r\n            else{\r\n                resultQuery += str\r\n                resultQuery += \", \"\r\n            }\r\n        }\r\n        return resultQuery\r\n    }\r\n\r\n    private fun setReviewAdapter(animeData: Anime) {\r\n        firebaseAuth = FirebaseAuth.getInstance()\r\n        val db = Firebase.firestore\r\n        reviewsList = emptyList()\r\n        reviewsAnimeRV = findViewById(R.id.reviewsRecycler)\r\n        reviewsAnimeAdapter = ReviewAdapter(reviewsList)\r\n        val noReviewsYet = findViewById<TextView>(R.id.noReviewsYet)\r\n\r\n        reviewsAnimeRV.layoutManager = LinearLayoutManager (\r\n            this,\r\n            LinearLayoutManager.VERTICAL, false\r\n        )\r\n\r\n        reviewsAnimeRV.adapter = reviewsAnimeAdapter\r\n\r\n\r\n        db.collection(\"Reviews\").document(animeData.mal_id.toString()).collection(\"Reviews\").get()\r\n            .addOnSuccessListener { review ->\r\n                for (review in review) {\r\n                    var reviewTitle: String = review.data.getValue(\"reviewTitle\") as String\r\n                    var reviewComment: String = review.data.getValue(\"reviewComment\") as String\r\n                    var reviewUser: String = review.data.getValue(\"username\") as String\r\n                    var reviewSpoiler: String = review.data.getValue(\"reviewSpoilers\") as String\r\n                    var reviewDate: String = review.data.getValue(\"reviewDate\") as String\r\n                    reviewsList = reviewsList + Reviews(animeData.mal_id, reviewTitle, reviewComment, reviewSpoiler, reviewUser, reviewDate)\r\n                    reviewsAnimeAdapter.reviewList = reviewsList\r\n                    reviewsAnimeAdapter.notifyDataSetChanged()\r\n                    Log.d(\"MAL_IDFAV\", reviewComment)\r\n\r\n                }\r\n\r\n                if(reviewsList.isEmpty()) {\r\n                    noReviewsYet.visibility = View.VISIBLE\r\n                } else {\r\n                    noReviewsYet.visibility = View.GONE\r\n                }\r\n            }\r\n    }\r\n\r\n    private fun SetUpStarsRating(animeData: Anime) {\r\n        var starButtons = ArrayList<ImageButton>()\r\n        starButtons.add(findViewById(R.id.imageButtonAnimeDetailsStar1))\r\n        starButtons.add(findViewById(R.id.imageButtonAnimeDetailsStar2))\r\n        starButtons.add(findViewById(R.id.imageButtonAnimeDetailsStar3))\r\n        starButtons.add(findViewById(R.id.imageButtonAnimeDetailsStar4))\r\n        starButtons.add(findViewById(R.id.imageButtonAnimeDetailsStar5))\r\n        starButtons.add(findViewById(R.id.imageButtonAnimeDetailsStar6))\r\n        starButtons.add(findViewById(R.id.imageButtonAnimeDetailsStar7))\r\n        starButtons.add(findViewById(R.id.imageButtonAnimeDetailsStar8))\r\n        starButtons.add(findViewById(R.id.imageButtonAnimeDetailsStar9))\r\n        starButtons.add(findViewById(R.id.imageButtonAnimeDetailsStar10))\r\n\r\n        for (i in 0..9) {\r\n            starButtons[i].setOnClickListener() {\r\n                for (j in 0..i) {\r\n                    starButtons[j].setColorFilter(resources.getColor(R.color.main_color))\r\n                }\r\n\r\n                for (k in i + 1..9) {\r\n                    starButtons[k].setColorFilter(resources.getColor(R.color.placehold_gray))\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private fun setReviewDialog(animeData: Anime) {\r\n        val submitAReview = findViewById<Button>(R.id.submitAReview)\r\n        val reviewDialog = Dialog(this)\r\n        firebaseAuth = FirebaseAuth.getInstance()\r\n        val db = Firebase.firestore\r\n        val currentUserID = firebaseAuth.currentUser?.uid\r\n        var currentUsername: String\r\n\r\n\r\n        reviewDialog.setContentView(R.layout.dialog_review)\r\n        reviewDialog.window?.setBackgroundDrawable(ColorDrawable(Color.TRANSPARENT))\r\n\r\n        val reviewRatingSpinner = reviewDialog.findViewById(R.id.reviewRatingSpinner) as Spinner\r\n        val reviewArrow = reviewDialog.findViewById(R.id.spinnerArrow) as ImageView\r\n        val submitReviewDialog = reviewDialog.findViewById(R.id.reviewSubmitButton) as Button\r\n        val reviewComment = reviewDialog.findViewById(R.id.reviewAnimeComment) as EditText\r\n        val reviewAnimeTitle = reviewDialog.findViewById(R.id.reviewAnimeTitle) as EditText\r\n        val reviewSpoilersCheckbox = reviewDialog.findViewById(R.id.reviewSpoilersCheckbox) as CheckBox\r\n\r\n        reviewArrow.setOnClickListener {\r\n            reviewRatingSpinner.performClick()\r\n        }\r\n\r\n        ArrayAdapter.createFromResource(\r\n            this,\r\n            R.array.reviewrating,\r\n            android.R.layout.simple_spinner_item\r\n        ).also { adapter ->\r\n            adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item)\r\n            reviewRatingSpinner.adapter = adapter\r\n        }\r\n\r\n        submitAReview.setOnClickListener {\r\n            if (currentUserID == null) {\r\n                Toast.makeText(this, \"You must be logged in to submit a review\", Toast.LENGTH_SHORT).show()\r\n            } else {\r\n                reviewDialog.show()\r\n                submitReviewDialog.setOnClickListener {\r\n                    val userReviewComment = reviewComment.text.toString()\r\n                    val userReviewTitle = reviewAnimeTitle.text.toString()\r\n                    val sdf = SimpleDateFormat(\"MM/dd/yyyy\")\r\n                    val currentDate = sdf.format(Date())\r\n                    var spoilers = if(reviewSpoilersCheckbox.isChecked) { \"yes\" } else { \"no\" }\r\n\r\n                    var docRef = db.collection(\"Users\").document(currentUserID!!)\r\n                    docRef.get()\r\n                        .addOnSuccessListener { document ->\r\n                            if (document != null) {\r\n                                currentUsername = document.data?.get(\"username\").toString()\r\n                                Toast.makeText(this, currentUsername, Toast.LENGTH_SHORT).show()\r\n                                db.collection(\"Reviews\").document(animeData.mal_id.toString()).collection(\"Reviews\").add(Reviews(animeData.mal_id, userReviewTitle, userReviewComment, spoilers, currentUsername, currentDate))\r\n                            } else {\r\n                                Log.d(TAG, \"No such document\")\r\n                            }\r\n                        }\r\n                        .addOnFailureListener { exception ->\r\n                            Log.d(TAG, \"get failed with \", exception)\r\n                        }\r\n                    reviewDialog.dismiss()\r\n                    this.recreate()\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private fun setButtons(animeData: Anime) {\r\n        firebaseAuth = FirebaseAuth.getInstance()\r\n        val db = Firebase.firestore\r\n        val currentUserID = firebaseAuth.currentUser?.uid\r\n\r\n        var favourite = 0; var watchlater = 0; var watching = 0;\r\n        var favouriteButton = findViewById<ImageButton>(R.id.imageButtonAnimeDetailsFavourite)\r\n        var watchLaterButton = findViewById<ImageButton>(R.id.imageButtonAnimeDetailsWatchLater)\r\n        var watcthingButton = findViewById<ImageButton>(R.id.imageButtonAnimeDetailsWatching)\r\n\r\n        var favDocRef = db.collection(\"Users\").document(currentUserID.toString()).collection(\"Favourites\").document(animeID.toString())\r\n        var watchLaterDocRef = db.collection(\"Users\").document(currentUserID.toString()).collection(\"WatchLater\").document(animeID.toString())\r\n        var watchingDocRef = db.collection(\"Users\").document(currentUserID.toString()).collection(\"Watching\").document(animeID.toString())\r\n\r\n\r\n        // keep buttons selected if clicked, else gray\r\n        favDocRef.get().addOnSuccessListener {\r\n            if(it.exists()) {\r\n                favouriteButton.setColorFilter(resources.getColor(R.color.main_color))\r\n                favouriteButton.setOnClickListener() {\r\n                    favouriteButton.setColorFilter(resources.getColor(R.color.placehold_gray))\r\n                    favDocRef.delete()\r\n                }\r\n            }\r\n        }\r\n\r\n        watchLaterDocRef.get().addOnSuccessListener {\r\n            if(it.exists()) {\r\n                watchLaterButton.setColorFilter(resources.getColor(R.color.main_color))\r\n                watchLaterButton.setOnClickListener() {\r\n                    watchLaterButton.setColorFilter(resources.getColor(R.color.placehold_gray))\r\n                    watchLaterDocRef.delete()\r\n                }\r\n            }\r\n        }\r\n\r\n        watchingDocRef.get().addOnSuccessListener {\r\n            if(it.exists()) {\r\n                watcthingButton.setColorFilter(resources.getColor(R.color.main_color))\r\n                watcthingButton.setOnClickListener() {\r\n                    watcthingButton.setColorFilter(resources.getColor(R.color.placehold_gray))\r\n                    watchingDocRef.delete()\r\n                }\r\n            }\r\n        }\r\n\r\n        favouriteButton.setOnClickListener() {\r\n            when(favourite++ % 2 ) {\r\n                0 ->\r\n                {\r\n                    favouriteButton.setColorFilter(resources.getColor(R.color.main_color))\r\n                    if(db.collection(\"Users\").document(currentUserID.toString()).collection(\"Favourites\").document(animeID.toString()).equals(animeID.toString()))\r\n                        Toast.makeText(this, \"Already favourite\", Toast.LENGTH_LONG).show()\r\n                    else if(db.collection(\"AnimeData\").document(animeData.mal_id.toString()).equals(animeData.mal_id.toString()))\r\n                        Toast.makeText(this, \"Already in AnimeData DB\", Toast.LENGTH_LONG).show()\r\n                    else {\r\n                        db.collection(\"Users\").document(currentUserID.toString()).collection(\"Favourites\").document(animeID.toString()).set(Favourite(animeData.mal_id, animeData.imageData!!.jpg!!.URL, animeData.title, animeData.englishTitle, animeData.japaneseTitle))\r\n                        db.collection(\"AnimeData\").document(animeData.mal_id.toString()).set(LocalAnime(animeData.mal_id, animeData.title, animeData.imageData!!.jpg!!.URL, animeData.synopsis, animeData.score, animeData.trailerData))\r\n                    }\r\n                }\r\n\r\n                1 ->\r\n                {\r\n                    favouriteButton.setColorFilter(resources.getColor(R.color.placehold_gray))\r\n                    favDocRef.delete()\r\n                }\r\n            }\r\n        }\r\n\r\n        watchLaterButton.setOnClickListener() {\r\n            when(watchlater++ % 2 ) {\r\n                0 ->\r\n                {\r\n                    watchLaterButton.setColorFilter(resources.getColor(R.color.main_color))\r\n                    if(db.collection(\"Users\").document(currentUserID.toString()).collection(\"WatchLater\").document(animeID.toString()).equals(animeID.toString()))\r\n                        Toast.makeText(this, \"Already in watch later\", Toast.LENGTH_LONG).show()\r\n                    else if(db.collection(\"AnimeData\").document(animeData.mal_id.toString()).equals(animeData.mal_id.toString()))\r\n                        Toast.makeText(this, \"Already in AnimeData DB\", Toast.LENGTH_LONG).show()\r\n                    else {\r\n                        db.collection(\"Users\").document(currentUserID.toString()).collection(\"WatchLater\").document(animeID.toString()).set(Favourite(animeData.mal_id, animeData.imageData!!.jpg!!.URL, animeData.title, animeData.englishTitle, animeData.japaneseTitle))\r\n                        db.collection(\"AnimeData\").document(animeData.mal_id.toString()).set(LocalAnime(animeData.mal_id, animeData.title, animeData.imageData!!.jpg!!.URL, animeData.synopsis, animeData.score, animeData.trailerData))\r\n                    }\r\n                }\r\n                1 ->\r\n                {\r\n                    watchLaterButton.setColorFilter(resources.getColor(R.color.placehold_gray))\r\n                    watchLaterDocRef.delete()\r\n                }\r\n            }\r\n        }\r\n\r\n        watcthingButton.setOnClickListener() {\r\n            when(watching++ % 2 ) {\r\n                0 ->\r\n                {\r\n                    watcthingButton.setColorFilter(resources.getColor(R.color.main_color))\r\n                    if(db.collection(\"Users\").document(currentUserID.toString()).collection(\"Watching\").document(animeID.toString()).equals(animeID.toString()))\r\n                        Toast.makeText(this, \"Already in watching\", Toast.LENGTH_LONG).show()\r\n                    else if(db.collection(\"AnimeData\").document(animeData.mal_id.toString()).equals(animeData.mal_id.toString()))\r\n                        Toast.makeText(this, \"Already in AnimeData DB\", Toast.LENGTH_LONG).show()\r\n                    else {\r\n                        db.collection(\"Users\").document(currentUserID.toString()).collection(\"Watching\").document(animeID.toString()).set(Favourite(animeData.mal_id, animeData.imageData!!.jpg!!.URL, animeData.title, animeData.englishTitle, animeData.japaneseTitle))\r\n                        db.collection(\"AnimeData\").document(animeData.mal_id.toString()).set(LocalAnime(animeData.mal_id, animeData.title, animeData.imageData!!.jpg!!.URL, animeData.synopsis, animeData.score, animeData.trailerData))\r\n                    }\r\n                }\r\n\r\n\r\n                1 ->\r\n                {\r\n                    watcthingButton.setColorFilter(resources.getColor(R.color.placehold_gray))\r\n                    watchingDocRef.delete()\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private fun setAnimeCharacterDetails(characterList: List<Character>) {\r\n        val characterRV = findViewById<RecyclerView>(R.id.recyclerViewAnimeDetailsCharacters)\r\n\r\n        var characterAdapter = CharacterRVAdapter(characterList)\r\n\r\n        characterRV.layoutManager = LinearLayoutManager(this,\r\n            LinearLayoutManager.HORIZONTAL,false)\r\n        characterRV.adapter = characterAdapter\r\n    }\r\n\r\n    private fun setAnimeDetails(animeData: Anime) {\r\n        setAnimeTitle(animeData)\r\n        setAnimeTrailer(animeData.trailerData?.youtubeID, animeData.imageData?.jpg)\r\n        setAnimeSynopsis(animeData.synopsis)\r\n        setAnimeScore(animeData.score.toString())\r\n    }\r\n\r\n    private fun setAnimeTitle(animeData: Anime) {\r\n        val txt = findViewById<TextView>(R.id.textViewAnimeDetailsTitle)\r\n\r\n        val chosenLanguagePreferences = getSharedPreferences(getString(\r\n            R.string.shared_preference_language_key), Context.MODE_PRIVATE)\r\n        val chosenLanguage =\r\n            chosenLanguagePreferences.getString(getString(R.string.chosen_language_key), getString(R.string.english))!!\r\n\r\n        if (chosenLanguage == getString(R.string.english)\r\n            && animeData.englishTitle != null\r\n        ) {\r\n            txt.text = animeData.englishTitle\r\n        }\r\n        else{\r\n            txt.text = animeData.title\r\n        }\r\n    }\r\n\r\n    private fun setAnimeScore(givenScore: String) {\r\n        val score = findViewById<TextView>(R.id.textViewAnimeDetailsScore)\r\n        score.text = givenScore\r\n    }\r\n\r\n    private fun setAnimeTrailer(youtubeID: String?, givenJPG: Jpg?) {\r\n\r\n        val youTubePlayerView : YouTubePlayerView = findViewById(R.id.youtubePlayerView)\r\n        val animeDetailsImageView = findViewById<ImageView>(R.id.animeDetailsImageView)\r\n\r\n        if (youtubeID == null){\r\n            youTubePlayerView.visibility = View.GONE\r\n            Glide.with(this)\r\n                .load(givenJPG!!.URL)\r\n                .fitCenter()\r\n                .into(animeDetailsImageView)\r\n            return\r\n        }\r\n        else{\r\n            animeDetailsImageView.visibility = View.GONE\r\n        }\r\n\r\n        val youtubeTrailerID = youtubeID\r\n        youTubePlayerView.initialize(YOUTUBE_API_KEY, object:YouTubePlayer.OnInitializedListener {\r\n            override fun onInitializationSuccess(\r\n                provider: YouTubePlayer.Provider?,\r\n                player: YouTubePlayer?,\r\n                bln: Boolean\r\n            ) {\r\n                player?.cueVideo(youtubeTrailerID)\r\n                player?.play()\r\n            }\r\n\r\n            override fun onInitializationFailure(\r\n                provider: YouTubePlayer.Provider?,\r\n                result: YouTubeInitializationResult?\r\n            ) {\r\n                Toast.makeText(applicationContext, \"Something went wrong\", Toast.LENGTH_SHORT).show()\r\n            }\r\n        })\r\n    }\r\n\r\n    private fun setAnimeSynopsis(synopsis: String?) {\r\n        if (synopsis == null){\r\n            return\r\n        }\r\n\r\n        var syn = findViewById<TextView>(R.id.textViewAnimeDetailsSynopsis)\r\n        syn.text = synopsis.dropLast(25)\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/project24/animexapp/AnimeDetails.kt b/app/src/main/java/com/project24/animexapp/AnimeDetails.kt
--- a/app/src/main/java/com/project24/animexapp/AnimeDetails.kt	
+++ b/app/src/main/java/com/project24/animexapp/AnimeDetails.kt	
@@ -290,7 +290,6 @@
                         .addOnSuccessListener { document ->
                             if (document != null) {
                                 currentUsername = document.data?.get("username").toString()
-                                Toast.makeText(this, currentUsername, Toast.LENGTH_SHORT).show()
                                 db.collection("Reviews").document(animeData.mal_id.toString()).collection("Reviews").add(Reviews(animeData.mal_id, userReviewTitle, userReviewComment, spoilers, currentUsername, currentDate))
                             } else {
                                 Log.d(TAG, "No such document")
Index: app/src/main/res/layout/dialog_club.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/dialog_club.xml b/app/src/main/res/layout/dialog_club.xml
new file mode 100644
--- /dev/null	
+++ b/app/src/main/res/layout/dialog_club.xml	
@@ -0,0 +1,142 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="350dp"
+    android:layout_height="wrap_content"
+    android:orientation="vertical"
+    android:padding="20dp"
+    android:background="@drawable/custom_dialog_background">
+
+    <TextView
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:text="Create a Club"
+        android:textColor="@color/black"
+        android:textStyle="bold"
+        android:textSize="20dp"
+        android:gravity="center"/>
+
+    <TextView
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="Club Name"
+        android:textColor="@color/text_black"
+        android:layout_marginBottom="5dp"
+        android:textStyle="bold"/>
+
+
+    <EditText
+        android:id="@+id/clubName"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:background="@drawable/customborder"
+        android:overScrollMode="always"
+        android:lines="1"
+        android:textSize="12dp"
+        android:textColor="@color/black"
+        android:gravity="top"
+        android:scrollbarStyle="insideInset"
+        android:scrollbars="vertical"
+        android:scrollHorizontally="false"
+        android:inputType="textMultiLine"
+        android:layout_marginBottom="10dp"/>
+
+    <TextView
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="Club Short Description"
+        android:textColor="@color/text_black"
+        android:textStyle="bold"
+        android:layout_marginBottom="5dp"/>
+
+
+    <EditText
+        android:id="@+id/clubShortDesc"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:background="@drawable/customborder"
+        android:overScrollMode="always"
+        android:lines="1"
+        android:textSize="12dp"
+        android:textColor="@color/black"
+        android:gravity="top"
+        android:scrollbarStyle="insideInset"
+        android:scrollbars="vertical"
+        android:scrollHorizontally="false"
+        android:inputType="textMultiLine"
+        android:layout_marginBottom="10dp"
+        android:hint="Provide a short description of your club"/>
+
+    <TextView
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="Club Description"
+        android:layout_marginBottom="5dp"
+        android:textStyle="bold"
+        android:textColor="@color/text_black"
+        />
+
+    <EditText
+        android:id="@+id/clubLongDesc"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:background="@drawable/customborder"
+        android:overScrollMode="always"
+        android:lines="6"
+        android:textSize="12dp"
+        android:textColor="@color/black"
+        android:gravity="top"
+        android:scrollbarStyle="insideInset"
+        android:scrollbars="vertical"
+        android:scrollHorizontally="false"
+        android:inputType="textMultiLine"
+        android:hint="How would you describe your club? What can users expect when they join your club?"/>
+
+    <TextView
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="Who can join your club?"
+        android:textStyle="bold"
+        android:textColor="@color/text_black"
+        android:layout_marginTop="10dp"
+        />
+
+    <RadioGroup
+        android:id="@+id/clubAccessRadio"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content">
+        <RadioButton
+            android:id="@+id/clubAnyoneRadio"
+            android:layout_width="111dp"
+            android:layout_height="match_parent"
+            android:text="Anyone"
+            android:layout_marginTop="5dp"/>
+
+        <RadioButton
+            android:id="@+id/clubReqPermissionRadio"
+            android:layout_width="181dp"
+            android:layout_height="match_parent"
+            android:layout_marginTop="5dp"
+            android:text="Require permission" />
+    </RadioGroup>
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:gravity="center"
+        android:layout_marginTop="20dp"
+        android:orientation="horizontal">
+
+        <Button
+            android:id="@+id/createClubDialogButton"
+            android:layout_width="150dp"
+            android:layout_height="40dp"
+            android:gravity="center"
+            android:text="Create Club"
+            android:background="@drawable/button_background"
+            android:backgroundTint="@color/main_color"
+            android:textColor="@color/white"
+            />
+    </LinearLayout>
+
+</LinearLayout>
\ No newline at end of file
Index: app/src/main/res/drawable/button_requested.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/button_requested.xml b/app/src/main/res/drawable/button_requested.xml
new file mode 100644
--- /dev/null	
+++ b/app/src/main/res/drawable/button_requested.xml	
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android" android:shape="rectangle">
+    <corners android:radius="15dp"/>
+    <padding android:left="20dp" android:right="20dp" android:top="10dp" android:bottom="10dp"/>
+    <solid android:color="#D1D1D1"/>
+</shape>
\ No newline at end of file
Index: app/src/main/res/drawable/button_unclicked.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/button_unclicked.xml b/app/src/main/res/drawable/button_unclicked.xml
new file mode 100644
--- /dev/null	
+++ b/app/src/main/res/drawable/button_unclicked.xml	
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android" android:shape="rectangle">
+    <corners android:radius="15dp"/>
+    <padding android:left="20dp" android:right="20dp" android:top="10dp" android:bottom="10dp"/>
+    <solid android:color="@color/main_color"/>
+
+</shape>
\ No newline at end of file
Index: app/src/main/java/com/project24/animexapp/MainActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.project24.animexapp\r\n\r\nimport android.annotation.SuppressLint\r\nimport android.os.Bundle\r\nimport android.widget.Toast\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport androidx.navigation.findNavController\r\nimport androidx.navigation.ui.setupWithNavController\r\nimport com.google.android.material.bottomnavigation.BottomNavigationView\r\nimport com.google.firebase.auth.FirebaseAuth\r\nimport com.google.firebase.firestore.ktx.firestore\r\nimport com.google.firebase.ktx.Firebase\r\nimport com.project24.animexapp.databinding.ActivityMainBinding\r\n\r\nclass MainActivity : AppCompatActivity() {\r\n\r\n    private lateinit var binding: ActivityMainBinding\r\n    private lateinit var firebaseAuth: FirebaseAuth\r\n\r\n\r\n\r\n    @SuppressLint(\"SetTextI18n\")\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        firebaseAuth = FirebaseAuth.getInstance()\r\n        binding = ActivityMainBinding.inflate(layoutInflater)\r\n        setContentView(binding.root)\r\n        val db = Firebase.firestore\r\n        val navView: BottomNavigationView = binding.navView\r\n        val navAccount = binding.navAccount\r\n        val currentUserID = firebaseAuth.currentUser?.uid.toString()\r\n        val userName = \"\"\r\n        Toast.makeText(this, userName, Toast.LENGTH_SHORT).show()\r\n\r\n        if(firebaseAuth.currentUser !== null) {\r\n            navAccount.text = \"Welcome, \" + firebaseAuth.currentUser?.email.toString()\r\n        } else {\r\n            navAccount.text = \"\"\r\n        }\r\n        val navController = findNavController(R.id.nav_host_fragment_activity_main)\r\n        // Passing each menu ID as a set of Ids because each\r\n        // menu should be considered as top level destinations.\r\n//        val appBarConfiguration = AppBarConfiguration(\r\n//            setOf(\r\n//                R.id.navigation_home, R.id.navigation_dashboard, R.id.navigation_notifications\r\n//            )\r\n//        )\r\n//        setupActionBarWithNavController(navController, appBarConfiguration)\r\n        navView.setupWithNavController(navController)\r\n\r\n        //In an Async fashion, get all the info needed\r\n        //Trending Anime: Kitsu\r\n        //Ongoing Anime\r\n        //Recommended For You Details\r\n        //Explore Anime\r\n        /*\r\n        lifecycleScope.launch{\r\n            withContext(Dispatchers.IO){\r\n                Log.d(\"BEFORE\",\"HERE\")\r\n                getOngoingAnime()\r\n                Log.d(\"AFTER\",\"HERE\")\r\n                delay(1000)\r\n                Log.d(\"AFTER DELAY\",\"HERE\")\r\n            }\r\n        }\r\n\r\n         */\r\n    }\r\n    /*\r\n    private fun getOngoingAnime(){\r\n        val client = JikanApiClient.apiService.requestAnime(status = \"airing\")\r\n\r\n        client.enqueue(object: Callback<AnimeSearchResponse> {\r\n            override fun onResponse(\r\n                call: Call<AnimeSearchResponse>,\r\n                response: Response<AnimeSearchResponse>\r\n            ){\r\n                if(response.isSuccessful){\r\n                    if(response.body() != null){\r\n                        ongoingList = response.body()!!.result\r\n\r\n                        //PASS THE LIST TO THE ADAPTER AND REFRESH IT\r\n\r\n                        //ongoingAnimeAdapter.animeList = ongoingList\r\n                        //ongoingAnimeAdapter.notifyDataSetChanged()\r\n                        //viewModel.ongoingList.value = ongoingList\r\n\r\n                        //Log.d(\"ONGOING ANIME\",\"\"+ viewModel.ongoingList.value)\r\n                    }\r\n                }\r\n            }\r\n            override fun onFailure(call: Call<AnimeSearchResponse>, t: Throwable) {\r\n                Log.e(\"ONGOING ANIME API FAIL\",\"\"+t.message)\r\n            }\r\n        })\r\n    }\r\n    */\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/project24/animexapp/MainActivity.kt b/app/src/main/java/com/project24/animexapp/MainActivity.kt
--- a/app/src/main/java/com/project24/animexapp/MainActivity.kt	
+++ b/app/src/main/java/com/project24/animexapp/MainActivity.kt	
@@ -17,8 +17,6 @@
     private lateinit var binding: ActivityMainBinding
     private lateinit var firebaseAuth: FirebaseAuth
 
-
-
     @SuppressLint("SetTextI18n")
     override fun onCreate(savedInstanceState: Bundle?) {
         super.onCreate(savedInstanceState)
@@ -30,7 +28,6 @@
         val navAccount = binding.navAccount
         val currentUserID = firebaseAuth.currentUser?.uid.toString()
         val userName = ""
-        Toast.makeText(this, userName, Toast.LENGTH_SHORT).show()
 
         if(firebaseAuth.currentUser !== null) {
             navAccount.text = "Welcome, " + firebaseAuth.currentUser?.email.toString()
Index: app/src/main/java/com/project24/animexapp/ui/community/Clubs.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/project24/animexapp/ui/community/Clubs.kt b/app/src/main/java/com/project24/animexapp/ui/community/Clubs.kt
new file mode 100644
--- /dev/null	
+++ b/app/src/main/java/com/project24/animexapp/ui/community/Clubs.kt	
@@ -0,0 +1,153 @@
+package com.project24.animexapp.ui.community
+
+import android.app.Dialog
+import android.content.ContentValues.TAG
+import android.content.Context
+import android.graphics.Color
+import android.graphics.drawable.ColorDrawable
+import android.os.Bundle
+import android.util.Log
+import androidx.fragment.app.Fragment
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import android.widget.Button
+import android.widget.EditText
+import android.widget.RadioButton
+import android.widget.Toast
+import androidx.recyclerview.widget.LinearLayoutManager
+import androidx.recyclerview.widget.RecyclerView
+import com.google.firebase.auth.FirebaseAuth
+import com.google.firebase.firestore.ktx.firestore
+import com.google.firebase.ktx.Firebase
+import com.project24.animexapp.*
+import com.project24.animexapp.databinding.FragmentClubsBinding
+import java.text.SimpleDateFormat
+import java.util.*
+
+class Clubs : Fragment() {
+    private var _binding: FragmentClubsBinding? = null
+    private val binding get() = _binding!!
+    private lateinit var firebaseAuth: FirebaseAuth
+    private lateinit var clubsList: List<ClubsData>
+    private lateinit var clubsRV: RecyclerView
+    private lateinit var clubsAdapter: ClubsAdapter
+    private var mContext: Context? = null
+
+    override fun onCreateView(
+        inflater: LayoutInflater, container: ViewGroup?,
+        savedInstanceState: Bundle?
+    ): View? {
+        _binding = FragmentClubsBinding.inflate(inflater, container, false)
+        val root: View = binding.root
+        var createClubButton = binding.createClubButton
+        createClubButton.setOnClickListener {
+            openCreateClubDialog()
+        }
+        setClubsAdapter()
+
+        return root
+    }
+
+    private fun setClubsAdapter() {
+        firebaseAuth = FirebaseAuth.getInstance()
+        val db = Firebase.firestore
+        db.collection("Clubs").addSnapshotListener { snapshot, error ->
+            if(error != null) {
+                Log.e(TAG, "onEvent: ", error)
+                return@addSnapshotListener
+            }
+
+            clubsList = emptyList()
+            clubsRV = binding.clubsRecycler
+            clubsAdapter = ClubsAdapter(clubsList)
+            clubsRV.layoutManager = LinearLayoutManager(mContext?.applicationContext,
+                LinearLayoutManager.VERTICAL, false
+            )
+
+            clubsRV.adapter = clubsAdapter
+
+            for(doc in snapshot!!) {
+                val clubName = doc.getString("clubName")
+                val clubShortDesc = doc.getString("clubShortDesc")
+                val clubLongDesc = doc.getString("clubLongDesc")
+                val clubAccess = doc.getString("clubAccess")
+                val clubId = doc.getString("clubId")
+                val clubMemberCount = doc.getLong("clubMemberCount")
+                val clubDate = doc.getString("clubDate")
+                val clubTime = doc.getString("clubTime")
+
+                clubsList = clubsList + ClubsData(clubName, clubShortDesc, clubLongDesc, clubAccess, clubId, clubMemberCount?.toInt(), clubDate, clubTime)
+                clubsAdapter.clubsList = clubsList
+                clubsAdapter.run {
+                    notifyDataSetChanged()
+                }
+            }
+        }
+    }
+
+    private fun openCreateClubDialog() {
+        val clubDialog = Dialog(this.requireContext())
+        firebaseAuth = FirebaseAuth.getInstance()
+        val db = Firebase.firestore
+        val currentUserID = firebaseAuth.currentUser?.uid
+        val clubId = db.collection("Clubs").document().id
+        clubDialog.setContentView(R.layout.dialog_club)
+        clubDialog.window?.setBackgroundDrawable(ColorDrawable(Color.TRANSPARENT))
+
+        val dialogCreateClubButton = clubDialog.findViewById<Button>(R.id.createClubDialogButton)
+        val clubName = clubDialog.findViewById<EditText>(R.id.clubName)
+        val clubShortDesc = clubDialog.findViewById<EditText>(R.id.clubShortDesc)
+        val clubLongDesc = clubDialog.findViewById<EditText>(R.id.clubLongDesc)
+        val sdf = SimpleDateFormat("MM/dd/yyyy hh:mm:ss")
+        val currentTime = sdf.format(Date())
+        val sdfDate = SimpleDateFormat("MM/dd/yyyy")
+        val currentDate = sdfDate.format(Date())
+
+
+
+        if(currentUserID == null) {
+            Toast.makeText(this.requireContext(), "You must be logged in to create a club", Toast.LENGTH_SHORT).show()
+        } else {
+            clubDialog.show()
+
+            dialogCreateClubButton.setOnClickListener {
+                val clubAnyoneRadio = clubDialog.findViewById<RadioButton>(R.id.clubAnyoneRadio)
+                val clubReqPermRadio = clubDialog.findViewById<RadioButton>(R.id.clubReqPermissionRadio)
+                val clubNameText = clubName.text.toString()
+                val clubShortDescText = clubShortDesc.text.toString()
+                val clubLongDescText = clubLongDesc.text.toString()
+                var clubAccess = ""
+
+                var currentUsername: String
+
+
+                if(clubAnyoneRadio.isChecked) {
+                    clubAccess = "anyone"
+                } else if (clubReqPermRadio.isChecked) {
+                    clubAccess = "reqPerm"
+                }
+
+                if(clubNameText.isEmpty() && clubShortDescText.isEmpty() && clubLongDescText.isEmpty() && clubAccess == "") {
+                    Toast.makeText(this.requireContext(), "You must fill in all fields", Toast.LENGTH_SHORT).show()
+                } else {
+                    db.collection("Clubs").document(clubId).set(ClubsData(clubNameText, clubShortDescText, clubLongDescText, clubAccess, clubId, 1, currentDate, currentTime))
+                    val docRef = db.collection("Users").document(currentUserID!!)
+                    docRef.get().addOnSuccessListener { document ->
+                        if(document!=null) {
+                            currentUsername = document.data?.get("username").toString()
+                            db.collection("Clubs").document(clubId).collection("Members").document(currentUserID.toString()).set(
+                                ClubMembersData(currentUsername, currentUserID, "creator")
+                            )
+                            db.collection("Clubs").document(clubId).collection("Admins").document(currentUserID.toString()).set(
+                                ClubMembersData(currentUsername, currentUserID, "creator")
+                            )
+                        }
+                    }
+                    clubDialog.dismiss()
+                }
+            }
+        }
+    }
+
+}
\ No newline at end of file
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\">\r\n\r\n    <uses-permission android:name=\"android.permission.INTERNET\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" />\r\n\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:dataExtractionRules=\"@xml/data_extraction_rules\"\r\n        android:fullBackupContent=\"@xml/backup_rules\"\r\n        android:icon=\"@drawable/purple_anime_app_icon\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/Theme.AnimeXApp\"\r\n        tools:targetApi=\"31\">\r\n        <activity\r\n            android:name=\".ui.LoadingScreens.LoadingBarActivity\"\r\n            android:exported=\"false\">\r\n            <meta-data\r\n                android:name=\"android.app.lib_name\"\r\n                android:value=\"\" />\r\n        </activity>\r\n        <activity\r\n            android:name=\".ui.community.Feed\"\r\n            android:exported=\"false\">\r\n            <meta-data\r\n                android:name=\"android.app.lib_name\"\r\n                android:value=\"\" />\r\n        </activity>\r\n        <activity\r\n            android:name=\".ui.dashboard.ExploreFragment\"\r\n            android:exported=\"false\">\r\n            <meta-data\r\n                android:name=\"android.app.lib_name\"\r\n                android:value=\"\" />\r\n        </activity>\r\n        <activity\r\n            android:name=\".AnimeDetails\"\r\n            android:exported=\"false\">\r\n            <meta-data\r\n                android:name=\"android.app.lib_name\"\r\n                android:value=\"\" />\r\n        </activity>\r\n        <activity\r\n            android:name=\".ui.profile.ProfileViewModel\"\r\n            android:exported=\"false\">\r\n            <meta-data\r\n                android:name=\"android.app.lib_name\"\r\n                android:value=\"\" />\r\n        </activity>\r\n        <activity\r\n            android:name=\".ui.profile.ProfileFragment\"\r\n            android:exported=\"false\">\r\n            <meta-data\r\n                android:name=\"android.app.lib_name\"\r\n                android:value=\"\" />\r\n        </activity>\r\n        <activity\r\n            android:name=\".RegisterActivity\"\r\n            android:exported=\"false\">\r\n            <meta-data\r\n                android:name=\"android.app.lib_name\"\r\n                android:value=\"\" />\r\n        </activity>\r\n        <activity\r\n            android:name=\".LogInActivity\"\r\n            android:exported=\"false\">\r\n            <meta-data\r\n                android:name=\"android.app.lib_name\"\r\n                android:value=\"\" />\r\n        </activity>\r\n        <activity\r\n            android:name=\".MainActivity\"\r\n            android:exported=\"true\"\r\n            android:label=\"@string/app_name\">\r\n            <meta-data\r\n                android:name=\"android.app.lib_name\"\r\n                android:value=\"\" />\r\n        </activity>\r\n        <activity\r\n            android:name=\".ui.LoadingScreens.WelcomeScreenActivity\"\r\n            android:exported=\"true\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n\r\n            <meta-data\r\n                android:name=\"android.app.lib_name\"\r\n                android:value=\"\" />\r\n        </activity>\r\n\r\n        <meta-data\r\n            android:name=\"com.project24.animexapp.YoutubeKey\"\r\n            android:value=\"${YT_KEY}\" />\r\n    </application>\r\n\r\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
--- a/app/src/main/AndroidManifest.xml	
+++ b/app/src/main/AndroidManifest.xml	
@@ -16,6 +16,13 @@
         android:theme="@style/Theme.AnimeXApp"
         tools:targetApi="31">
         <activity
+            android:name=".ui.community.ClubDetails"
+            android:exported="false">
+            <meta-data
+                android:name="android.app.lib_name"
+                android:value="" />
+        </activity>
+        <activity
             android:name=".ui.LoadingScreens.LoadingBarActivity"
             android:exported="false">
             <meta-data
@@ -24,6 +31,13 @@
         </activity>
         <activity
             android:name=".ui.community.Feed"
+            android:exported="false">
+            <meta-data
+                android:name="android.app.lib_name"
+                android:value="" />
+        </activity>
+        <activity
+            android:name=".Clubs"
             android:exported="false">
             <meta-data
                 android:name="android.app.lib_name"
@@ -52,6 +66,13 @@
         </activity>
         <activity
             android:name=".ui.profile.ProfileFragment"
+            android:exported="false">
+            <meta-data
+                android:name="android.app.lib_name"
+                android:value="" />
+        </activity>
+        <activity
+            android:name=".ui.notifications.NotificationsFragment"
             android:exported="false">
             <meta-data
                 android:name="android.app.lib_name"
Index: app/src/main/res/drawable/button_joined.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/button_joined.xml b/app/src/main/res/drawable/button_joined.xml
new file mode 100644
--- /dev/null	
+++ b/app/src/main/res/drawable/button_joined.xml	
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android" android:shape="rectangle">
+    <corners android:radius="15dp"/>
+    <padding android:left="20dp" android:right="20dp" android:top="10dp" android:bottom="10dp"/>
+    <solid android:color="@color/light_green"/>
+</shape>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_2022-12-02_4_15_p_m__[Changes]/shelved.patch
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_2022-12-02_4_15_p_m__[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_2022-12-02_4_15_p_m__[Changes]/shelved.patch
new file mode 100644
--- /dev/null	
+++ b/.idea/shelf/Uncommitted_changes_before_Update_at_2022-12-02_4_15_p_m__[Changes]/shelved.patch	
@@ -0,0 +1,82 @@
+Index: app/src/main/java/com/project24/animexapp/ui/community/Feed.kt
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package com.project24.animexapp.ui.community\r\n\r\nimport android.content.ContentValues.TAG\r\nimport android.content.Context\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport android.widget.Toast\r\nimport androidx.fragment.app.Fragment\r\nimport androidx.recyclerview.widget.LinearLayoutManager\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport com.google.firebase.auth.FirebaseAuth\r\nimport com.google.firebase.firestore.Query\r\nimport com.google.firebase.firestore.ktx.firestore\r\nimport com.google.firebase.ktx.Firebase\r\nimport com.project24.animexapp.*\r\nimport com.project24.animexapp.databinding.FragmentFeedBinding\r\nimport java.text.SimpleDateFormat\r\nimport java.util.*\r\n\r\nclass Feed : Fragment() {\r\n    private var _binding: FragmentFeedBinding? = null\r\n    private lateinit var firebaseAuth: FirebaseAuth\r\n    private val binding get() = _binding!!\r\n    private lateinit var postsList: List<Posts>\r\n    private lateinit var postsRV: RecyclerView\r\n    private lateinit var postsAdapter: PostAdapter\r\n    private var mContext: Context? = null\r\n\r\n    override fun onCreateView(\r\n        inflater: LayoutInflater, container: ViewGroup?,\r\n        savedInstanceState: Bundle?\r\n    ): View? {\r\n        firebaseAuth = FirebaseAuth.getInstance()\r\n        val db = Firebase.firestore\r\n\r\n        _binding = FragmentFeedBinding.inflate(inflater, container, false)\r\n        val root: View = binding.root\r\n        val communityPostButton = binding.communityPostButton\r\n        val communityUserPost = binding.communityUserPost.text.toString()\r\n        val setTagsButton = binding.setTagsButton\r\n        val linkAnimeButton = binding.linkAnimeButton\r\n\r\n        communityPostButton.setOnClickListener {\r\n            createPost()\r\n        }\r\n        setPostsAdapter()\r\n        return root\r\n    }\r\n\r\n    private fun setPostsAdapter() {\r\n        firebaseAuth = FirebaseAuth.getInstance()\r\n        val db = Firebase.firestore\r\n\r\n\r\n\r\n        db.collection(\"Posts\").orderBy(\"time\", Query.Direction.DESCENDING).addSnapshotListener { snapshot, error ->\r\n            if( error != null) {\r\n                Log.e(TAG, \"onEvent: \", error)\r\n                return@addSnapshotListener\r\n            }\r\n\r\n\r\n            postsList = emptyList()\r\n            postsRV = binding.postsRecycler\r\n            postsAdapter = PostAdapter(postsList)\r\n            postsRV.layoutManager = LinearLayoutManager (mContext?.applicationContext,\r\n                LinearLayoutManager.VERTICAL, false\r\n            )\r\n\r\n            postsRV.adapter = postsAdapter\r\n\r\n            for(doc in snapshot!!) {\r\n                val postUser = doc.getString(\"username\")\r\n                val postText = doc.getString(\"postText\")\r\n                val postTime = doc.getString(\"time\")\r\n                val postDate = doc.getString(\"date\")\r\n                val postLikesCount = doc.getLong(\"likes\")\r\n                val postCommentsCount = doc.getLong(\"commentsNum\")\r\n                val postId = doc.getString(\"postId\")\r\n                postsList = postsList + Posts(postText, \"\", \"\", \"\", postUser, postTime, postDate, postLikesCount?.toInt(), postCommentsCount?.toInt(), postId)\r\n                postsAdapter.postList = postsList\r\n                postsAdapter.run {\r\n                    notifyDataSetChanged()\r\n                }\r\n            }\r\n//            Log.d(TAG, \"Current names: $posts\")\r\n        }\r\n    }\r\n\r\n    private fun createPost() {\r\n        firebaseAuth = FirebaseAuth.getInstance()\r\n        val db = Firebase.firestore\r\n        postsRV.adapter = postsAdapter\r\n\r\n        val currentUserID = firebaseAuth.currentUser?.uid\r\n        val communityUserPost = binding.communityUserPost.text.toString()\r\n        val userPost = binding.communityUserPost\r\n        var currentUsername: String\r\n        val sdf = SimpleDateFormat(\"MM/dd/yyyy hh:mm:ss\")\r\n        val currentTime = sdf.format(Date())\r\n        val sdfDate = SimpleDateFormat(\"MM/dd/yyyy\")\r\n        val currentDate = sdfDate.format(Date())\r\n        var postId: Int\r\n\r\n        if(userPost.text.isEmpty()) {\r\n                Toast.makeText(activity, \"You need to write something before posting\", Toast.LENGTH_SHORT).show()\r\n        }\r\n        else {\r\n            val docRef = db.collection(\"Users\").document(currentUserID!!)\r\n            docRef.get().addOnSuccessListener { document ->\r\n                if(document!=null) {\r\n                    currentUsername = document.data?.get(\"username\").toString()\r\n                    db.collection(\"Posts\").document(postsList.size.toString()).set(Posts(communityUserPost, \"\", \"\", \"\", currentUsername, currentTime, currentDate,0, 0, postsList.size.toString()))\r\n\r\n                }\r\n            }\r\n\r\n        }\r\n        userPost.text.clear()\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/app/src/main/java/com/project24/animexapp/ui/community/Feed.kt b/app/src/main/java/com/project24/animexapp/ui/community/Feed.kt
+--- a/app/src/main/java/com/project24/animexapp/ui/community/Feed.kt	(revision 7c41e64f54f6185177827bf30c6e45ebb7e16886)
++++ b/app/src/main/java/com/project24/animexapp/ui/community/Feed.kt	(date 1669789833988)
+@@ -54,15 +54,12 @@
+         firebaseAuth = FirebaseAuth.getInstance()
+         val db = Firebase.firestore
+ 
+-
+-
+         db.collection("Posts").orderBy("time", Query.Direction.DESCENDING).addSnapshotListener { snapshot, error ->
+             if( error != null) {
+                 Log.e(TAG, "onEvent: ", error)
+                 return@addSnapshotListener
+             }
+ 
+-
+             postsList = emptyList()
+             postsRV = binding.postsRecycler
+             postsAdapter = PostAdapter(postsList)
+@@ -121,9 +118,5 @@
+         }
+         userPost.text.clear()
+ 
+-
+     }
+-
+-
+-
+ }
+Index: app/src/main/java/com/project24/animexapp/LogInActivity.kt
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package com.project24.animexapp\r\n\r\nimport android.content.Intent\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport android.os.Bundle\r\nimport android.widget.TextView\r\nimport android.widget.Toast\r\nimport com.google.firebase.auth.FirebaseAuth\r\nimport com.google.firebase.firestore.ktx.firestore\r\nimport com.google.firebase.ktx.Firebase\r\nimport com.project24.animexapp.databinding.ActivityLogInBinding\r\n\r\nclass LogInActivity : AppCompatActivity() {\r\n\r\n    private lateinit var binding:ActivityLogInBinding\r\n    private lateinit var firebaseAuth: FirebaseAuth\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n\r\n        val db = Firebase.firestore\r\n        binding = ActivityLogInBinding.inflate(layoutInflater)\r\n        setContentView(binding.root)\r\n        firebaseAuth = FirebaseAuth.getInstance()\r\n        binding.signUpBtn.setOnClickListener {\r\n            val intent = Intent(this, RegisterActivity::class.java)\r\n            startActivity(intent)\r\n        }\r\n\r\n        binding.logInBtn.setOnClickListener {\r\n            val userEmail = binding.emailInput.text.toString()\r\n            val userPass = binding.passwordInput.text.toString()\r\n\r\n\r\n            if (userEmail.isNotEmpty() && userPass.isNotEmpty()) {\r\n                firebaseAuth.signInWithEmailAndPassword(userEmail, userPass).addOnCompleteListener {\r\n                    if(it.isSuccessful) {\r\n                        Toast.makeText(this, \"Logged in successfully\", Toast.LENGTH_SHORT).show()\r\n\r\n\r\n                        val intent = Intent(this, MainActivity::class.java)\r\n                        startActivity(intent)\r\n\r\n                    } else {\r\n                        Toast.makeText(this, it.exception.toString(), Toast.LENGTH_SHORT).show()\r\n                    }\r\n                }\r\n            } else {\r\n                Toast.makeText(this, \"All fields must be filled\", Toast.LENGTH_SHORT).show()\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n}
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/app/src/main/java/com/project24/animexapp/LogInActivity.kt b/app/src/main/java/com/project24/animexapp/LogInActivity.kt
+--- a/app/src/main/java/com/project24/animexapp/LogInActivity.kt	(revision 7c41e64f54f6185177827bf30c6e45ebb7e16886)
++++ b/app/src/main/java/com/project24/animexapp/LogInActivity.kt	(date 1669788677273)
+@@ -20,6 +20,7 @@
+         val db = Firebase.firestore
+         binding = ActivityLogInBinding.inflate(layoutInflater)
+         setContentView(binding.root)
++
+         firebaseAuth = FirebaseAuth.getInstance()
+         binding.signUpBtn.setOnClickListener {
+             val intent = Intent(this, RegisterActivity::class.java)
+Index: .idea/deploymentTargetDropDown.xml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.idea/deploymentTargetDropDown.xml b/.idea/deploymentTargetDropDown.xml
+deleted file mode 100644
+--- a/.idea/deploymentTargetDropDown.xml	(revision 7c41e64f54f6185177827bf30c6e45ebb7e16886)
++++ /dev/null	(revision 7c41e64f54f6185177827bf30c6e45ebb7e16886)
+@@ -1,17 +0,0 @@
+-<?xml version="1.0" encoding="UTF-8"?>
+-<project version="4">
+-  <component name="deploymentTargetDropDown">
+-    <targetSelectedWithDropDown>
+-      <Target>
+-        <type value="QUICK_BOOT_TARGET" />
+-        <deviceKey>
+-          <Key>
+-            <type value="VIRTUAL_DEVICE_PATH" />
+-            <value value="C:\Users\matth\.android\avd\Pixel_4_API_29.avd" />
+-          </Key>
+-        </deviceKey>
+-      </Target>
+-    </targetSelectedWithDropDown>
+-    <timeTargetWasSelectedWithDropDown value="2022-11-29T00:51:01.635573400Z" />
+-  </component>
+-</project>
+\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_2022-12-02_4_15_p_m___Changes_.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_2022-12-02_4_15_p_m___Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_2022-12-02_4_15_p_m___Changes_.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/shelf/Uncommitted_changes_before_Update_at_2022-12-02_4_15_p_m___Changes_.xml	
@@ -0,0 +1,4 @@
+<changelist name="Uncommitted_changes_before_Update_at_2022-12-02_4_15_p_m__[Changes]" date="1670026560620" recycled="true" deleted="true">
+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2022-12-02_4_15_p_m__[Changes]/shelved.patch" />
+  <option name="DESCRIPTION" value="Uncommitted changes before Update at 2022-12-02 4:15 p.m. [Changes]" />
+</changelist>
\ No newline at end of file
Index: app/src/main/java/com/project24/animexapp/ui/profile/PlaylistsFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/project24/animexapp/ui/profile/PlaylistsFragment.kt b/app/src/main/java/com/project24/animexapp/ui/profile/PlaylistsFragment.kt
new file mode 100644
--- /dev/null	
+++ b/app/src/main/java/com/project24/animexapp/ui/profile/PlaylistsFragment.kt	
@@ -0,0 +1,364 @@
+package com.project24.animexapp.ui.profile
+
+import android.content.Context
+import android.content.Intent
+import android.os.Bundle
+import android.os.Handler
+import android.os.Looper
+import android.util.Log
+import androidx.fragment.app.Fragment
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import androidx.core.content.ContextCompat
+import androidx.lifecycle.ViewModelProvider
+import androidx.recyclerview.widget.LinearLayoutManager
+import androidx.recyclerview.widget.RecyclerView
+import com.google.firebase.auth.FirebaseAuth
+import com.google.firebase.firestore.ktx.firestore
+import com.google.firebase.ktx.Firebase
+import com.project24.animexapp.LogInActivity
+import com.project24.animexapp.R
+import com.project24.animexapp.api.JikanApiClient
+import com.project24.animexapp.api.LocalAnime
+import com.project24.animexapp.api.UserFavouritesResponse
+import com.project24.animexapp.databinding.FragmentPlaylistsBinding
+import com.project24.animexapp.databinding.FragmentProfileBinding
+import dev.failsafe.RetryPolicy
+import dev.failsafe.retrofit.FailsafeCall
+import retrofit2.Response
+import java.time.Duration
+
+class PlaylistsFragment : Fragment() {
+    private var _binding: FragmentPlaylistsBinding? = null
+    private lateinit var firebaseAuth: FirebaseAuth
+    private lateinit var favoritesList: List<LocalAnime>
+    private lateinit var favoritesAnimeRV: RecyclerView
+    private lateinit var favoritesAnimeAdapter: LocalAnimeRVAdapter
+
+    private lateinit var watchLaterList: List<LocalAnime>
+    private lateinit var watchLaterAnimeRV: RecyclerView
+    private lateinit var watchLaterAnimeAdapter: LocalAnimeRVAdapter
+
+    private lateinit var watchingList: List<LocalAnime>
+    private lateinit var watchingAnimeRV: RecyclerView
+    private lateinit var watchingAnimeAdapter: LocalAnimeRVAdapter
+
+    private lateinit var profileViewModel : ProfileViewModel
+
+    private lateinit var currentUserID : String
+    private lateinit var chosenLanguage : String
+
+    private val binding get() = _binding!!
+
+    override fun onCreateView(
+        inflater: LayoutInflater, container: ViewGroup?,
+        savedInstanceState: Bundle?
+    ): View? {
+        firebaseAuth = FirebaseAuth.getInstance()
+        val db = Firebase.firestore
+
+        profileViewModel =
+            ViewModelProvider(this).get(ProfileViewModel::class.java)
+
+        _binding = FragmentPlaylistsBinding.inflate(inflater, container, false)
+        val root: View = binding.root
+
+        currentUserID = firebaseAuth.currentUser?.uid.toString()
+        val englishBtn = binding.englishBtn
+        val japaneseBtn = binding.japaneseBtn
+        val favEmptyText = binding.emptyFavText
+        val watchingEmptyText = binding.emptyWatchingText
+        val watchLaterEmptyText = binding.emptyWatchLaterText
+        val chosenLanguagePreferences = requireActivity().getSharedPreferences(getString(R.string.shared_preference_language_key),
+            Context.MODE_PRIVATE
+        )
+        chosenLanguage =
+            chosenLanguagePreferences.getString(getString(R.string.chosen_language_key), getString(R.string.english))!!
+
+
+        englishBtn.setOnClickListener{
+            englishBtn.setBackgroundTintList(ContextCompat.getColorStateList(requireActivity(), R.color.light_green))
+            japaneseBtn.setBackgroundTintList(ContextCompat.getColorStateList(requireActivity(), R.color.back_tint_gray))
+
+            if (currentUserID != "null" && chosenLanguage == getString(R.string.japanese)){
+                val updateUiThread = Thread(){
+                    val handler = Handler(Looper.getMainLooper())
+                    val myRunnable = Runnable {
+                        updateFavourites(currentUserID, chosenLanguage)
+                        updateWatchingLater(currentUserID, chosenLanguage)
+                        updateCurrentlyWatching(currentUserID, chosenLanguage)
+                    }
+                    handler.post(myRunnable)
+                }
+                updateUiThread.start()
+                updateUiThread.join()
+            }
+
+
+            val prefsEditor = chosenLanguagePreferences.edit()
+            prefsEditor.clear()
+            prefsEditor.putString(getString(R.string.chosen_language_key), getString(R.string.english))
+            chosenLanguage = getString(R.string.english)
+            prefsEditor.apply()
+        }
+
+        japaneseBtn.setOnClickListener{
+            englishBtn.setBackgroundTintList(ContextCompat.getColorStateList(requireActivity(), R.color.back_tint_gray))
+            japaneseBtn.setBackgroundTintList(ContextCompat.getColorStateList(requireActivity(), R.color.main_color))
+
+            if (currentUserID != "null" && chosenLanguage == getString(R.string.english)){
+                val updateUiThread = Thread(){
+                    val handler = Handler(Looper.getMainLooper())
+                    val myRunnable = Runnable {
+                        updateFavourites(currentUserID, chosenLanguage)
+                        updateWatchingLater(currentUserID, chosenLanguage)
+                        updateCurrentlyWatching(currentUserID, chosenLanguage)
+                    }
+                    handler.post(myRunnable)
+                }
+                updateUiThread.start()
+                updateUiThread.join()
+            }
+
+            val prefsEditor = chosenLanguagePreferences.edit()
+            prefsEditor.clear()
+            prefsEditor.putString(getString(R.string.chosen_language_key), getString(R.string.japanese))
+            chosenLanguage = getString(R.string.japanese)
+            prefsEditor.apply()
+        }
+
+        if (chosenLanguage == getString(R.string.english)){
+            englishBtn.setBackgroundTintList(ContextCompat.getColorStateList(requireActivity(), R.color.light_green))
+        }
+        else {
+            japaneseBtn.setBackgroundTintList(ContextCompat.getColorStateList(requireActivity(), R.color.main_color))
+        }
+
+        favoritesList = emptyList()
+        favoritesAnimeRV = binding.favoritesRecyclerView
+        favoritesAnimeAdapter = LocalAnimeRVAdapter(favoritesList)
+
+        watchLaterList = emptyList()
+        watchLaterAnimeRV = binding.watchLaterRecyclerView
+        watchLaterAnimeAdapter = LocalAnimeRVAdapter(watchLaterList)
+
+        watchingList = emptyList()
+        watchingAnimeRV = binding.watchingRecyclerView
+        watchingAnimeAdapter = LocalAnimeRVAdapter(watchingList)
+
+        favoritesAnimeRV.layoutManager = LinearLayoutManager(
+            context,
+            LinearLayoutManager.HORIZONTAL, false
+        )
+        favoritesAnimeRV.adapter = favoritesAnimeAdapter
+
+        watchLaterAnimeRV.layoutManager = LinearLayoutManager(
+            context,
+            LinearLayoutManager.HORIZONTAL, false
+        )
+        watchLaterAnimeRV.adapter = watchLaterAnimeAdapter
+
+        watchingAnimeRV.layoutManager = LinearLayoutManager(
+            context,
+            LinearLayoutManager.HORIZONTAL, false
+        )
+        watchingAnimeRV.adapter = watchingAnimeAdapter
+
+
+        val favDocRef = db.collection("Users").document(currentUserID).collection("Favourites")
+        val watchLaterDocRef = db.collection("Users").document(currentUserID).collection("WatchLater")
+        val watchingDocRef = db.collection("Users").document(currentUserID).collection("Watching")
+
+
+        favDocRef.get().addOnSuccessListener() {
+            if(it.isEmpty) {
+                favEmptyText.text = "You have no items on your favourites yet."
+            } else {
+                favEmptyText.visibility = View.GONE
+            }
+        }
+
+        watchingDocRef.get().addOnSuccessListener() {
+            if(it.isEmpty) {
+                watchingEmptyText.text = "You have no items on your watching yet."
+            } else {
+                watchingEmptyText.visibility = View.GONE
+            }
+        }
+
+        watchLaterDocRef.get().addOnSuccessListener() {
+            if(it.isEmpty) {
+                watchLaterEmptyText.text = "You have no items on your watch later yet."
+            } else {
+                watchLaterEmptyText.visibility = View.GONE
+            }
+        }
+        updateFavourites(currentUserID, chosenLanguage)
+        updateWatchingLater(currentUserID, chosenLanguage)
+        updateCurrentlyWatching(currentUserID, chosenLanguage)
+
+        return root
+    }
+
+    override fun onResume() {
+        if (currentUserID!=="null") {
+            val updateUiThread = Thread(){
+                val handler = Handler(Looper.getMainLooper())
+                val myRunnable = Runnable {
+                    updateFavourites(currentUserID, chosenLanguage)
+                    updateWatchingLater(currentUserID, chosenLanguage)
+                    updateCurrentlyWatching(currentUserID, chosenLanguage)
+                }
+                handler.post(myRunnable)
+            }
+            updateUiThread.start()
+            updateUiThread.join()
+        }
+
+        super.onResume()
+    }
+
+    fun logUserFavourites(username: String){
+        val client = JikanApiClient.apiService.requestUserFavourites(username = username)
+
+        val retryPolicy = RetryPolicy.builder<Response<UserFavouritesResponse>>()
+            .withDelay(Duration.ofSeconds(1))
+            .withMaxRetries(3)
+            .build()
+
+        val failsafeCall = FailsafeCall.with(retryPolicy).compose(client)
+
+        val cFuture = failsafeCall.executeAsync()
+        cFuture.thenApply {
+            if(it.isSuccessful){
+                if(it.body() != null){
+                    val userFavs = it.body()!!.result
+                    Log.d("USER FAVS ANIME",""+userFavs.toString())
+                }
+            }
+        }
+    }
+
+    override fun onDestroyView() {
+        super.onDestroyView()
+        _binding = null
+    }
+
+    private fun updateFavourites(currentUserID: String, chosenLanguage: String?) {
+        val db = Firebase.firestore
+        favoritesList = emptyList()
+
+        db.collection("Users").document(currentUserID).collection("Favourites").get()
+            .addOnSuccessListener { favourite ->
+                for (document in favourite) {
+                    var malID: Long = document.data.getValue("mal_id") as Long
+                    var imgURL: String = document.data.getValue("image_url") as String
+
+                    // To prevent older version of database from crashing
+                    if (document.data.size > 3) {
+                        if (chosenLanguage == getString(R.string.english)
+                            && document.data.getValue("anime_english_title") != null
+                        ) {
+                            var animeTitle: String =
+                                document.data.getValue("anime_english_title") as String
+                            favoritesList =
+                                favoritesList + LocalAnime(malID, animeTitle, imgURL)
+                            // DELETE THIS
+                            Log.d("ARRR", favoritesList.toString())
+                        } else {
+                            var animeTitle: String =
+                                document.data.getValue("anime_title") as String
+                            favoritesList =
+                                favoritesList + LocalAnime(malID, animeTitle, imgURL)
+                        }
+                    }
+                    else{
+                        var animeTitle: String =
+                            document.data.getValue("anime_title") as String
+                        favoritesList =
+                            favoritesList + LocalAnime(malID, animeTitle, imgURL)
+                    }
+
+                    favoritesAnimeAdapter.animeList = favoritesList
+                    favoritesAnimeAdapter.notifyDataSetChanged()
+                }
+            }
+    }
+
+    private fun updateWatchingLater(currentUserID: String, chosenLanguage: String?) {
+        val db = Firebase.firestore
+        watchLaterList = emptyList()
+
+        db.collection("Users").document(currentUserID).collection("WatchLater").get()
+            .addOnSuccessListener { watchLater ->
+                for (document in watchLater) {
+                    var malID: Long = document.data.getValue("mal_id") as Long
+                    var imgURL: String = document.data.getValue("image_url") as String
+
+                    // To prevent older version of database from crashing
+                    if (document.data.size > 3) {
+                        if (chosenLanguage == getString(R.string.english)
+                            && document.data.getValue("anime_english_title")  != null
+                        ) {
+                            var animeTitle: String =
+                                document.data.getValue("anime_english_title") as String
+                            watchLaterList =
+                                watchLaterList + LocalAnime(malID, animeTitle, imgURL)
+                        }
+                        else {
+                            var animeTitle: String =
+                                document.data.getValue("anime_title") as String
+                            watchLaterList =
+                                watchLaterList + LocalAnime(malID, animeTitle, imgURL)
+                        }
+                    }
+                    else{
+                        var animeTitle: String =
+                            document.data.getValue("anime_title") as String
+                        watchLaterList =
+                            watchLaterList + LocalAnime(malID, animeTitle, imgURL)
+                    }
+                    watchLaterAnimeAdapter.animeList = watchLaterList
+                    watchLaterAnimeAdapter.notifyDataSetChanged()
+                }
+            }
+    }
+
+    private fun updateCurrentlyWatching(currentUserID: String, chosenLanguage: String?) {
+        val db = Firebase.firestore
+        watchingList = emptyList()
+        db.collection("Users").document(currentUserID).collection("Watching").get()
+            .addOnSuccessListener { watching ->
+                //Log.d("favorite",favourite.documents.)
+                //var idList = emptyList<Long>()
+                for (document in watching) {
+                    var malID: Long = document.data.getValue("mal_id") as Long
+                    var imgURL: String = document.data.getValue("image_url") as String
+
+                    // To prevent older version of database from crashing
+                    if (document.data.size > 3) {
+                        if (chosenLanguage == getString(R.string.english)
+                            && document.data.getValue("anime_english_title") != null
+                        ) {
+                            var animeTitle: String =
+                                document.data.getValue("anime_english_title") as String
+                            watchingList = watchingList + LocalAnime(malID, animeTitle, imgURL)
+                        }
+                        else {
+                            var animeTitle: String =
+                                document.data.getValue("anime_title") as String
+                            watchingList = watchingList + LocalAnime(malID, animeTitle, imgURL)
+                        }
+                    }
+                    else {
+                        var animeTitle: String =
+                            document.data.getValue("anime_title") as String
+                        watchingList = watchingList + LocalAnime(malID, animeTitle, imgURL)
+                    }
+                    watchingAnimeAdapter.animeList = watchingList
+                    watchingAnimeAdapter.notifyDataSetChanged()
+                }
+            }
+    }
+}
\ No newline at end of file
Index: app/src/main/res/layout/fragment_games.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_games.xml b/app/src/main/res/layout/fragment_playlists.xml
rename from app/src/main/res/layout/fragment_games.xml
rename to app/src/main/res/layout/fragment_playlists.xml
--- a/app/src/main/res/layout/fragment_games.xml	
+++ b/app/src/main/res/layout/fragment_playlists.xml	
@@ -1,14 +1,133 @@
 <?xml version="1.0" encoding="utf-8"?>
-<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
+<ScrollView
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
     xmlns:tools="http://schemas.android.com/tools"
     android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    tools:context=".ui.community.Feed">
+    android:layout_height="match_parent">
+    <LinearLayout
+        xmlns:android="http://schemas.android.com/apk/res/android"
+        xmlns:tools="http://schemas.android.com/tools"
+        xmlns:app="http://schemas.android.com/apk/res-auto"
+        android:id="@+id/profileContent"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:orientation="vertical"
+        android:layout_marginTop="20dp"
+        android:paddingBottom="50dp"
+        >
+
+        <RelativeLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_marginBottom="5dp">
+
+            <TextView
+                android:id="@+id/favouriteHeader"
+                android:text="Favourites"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:textColor="@color/black"
+                android:textSize="18sp"
+                android:textStyle="bold"
+                android:paddingLeft="5dp"
+                android:layout_centerVertical="true"/>
+
+            <Button
+                android:id="@+id/englishBtn"
+                android:layout_width="60dp"
+                android:layout_height="wrap_content"
+                android:layout_toLeftOf="@id/japaneseBtn"
+                android:backgroundTint="@color/back_tint_gray"
+                android:text="ENG"
+                android:textSize="8sp"
+                app:layout_constraintBottom_toBottomOf="parent"
+                app:layout_constraintEnd_toStartOf="@+id/japaneseBtn"
+                app:layout_constraintVertical_bias="0.0" />
+
+            <Button
+                android:id="@+id/japaneseBtn"
+                android:layout_width="60dp"
+                android:layout_height="wrap_content"
+                android:layout_alignParentEnd="true"
+                android:layout_marginRight="5dp"
+                android:backgroundTint="@color/back_tint_gray"
+                android:text="JAP"
+                android:textSize="8sp" />
+        </RelativeLayout>
+
+        <TextView
+            android:id="@+id/emptyFavText"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:text="You have no items on your favourites yet."
+            android:textAlignment="center"
+            android:padding="20dp"
+
+            />
+
+        <androidx.recyclerview.widget.RecyclerView
+            android:id="@+id/favoritesRecyclerView"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_centerHorizontal="true"
+            android:orientation="horizontal"
+            app:layoutManager="androidx.recyclerview.widget.LinearLayoutManager"
+            tools:listitem="@layout/listitem_anime"/>
 
-    <TextView
-        android:layout_width="match_parent"
-        android:layout_height="match_parent"
-        android:text="Games"
-        android:gravity="center"/>
+        <TextView
+            android:id="@+id/watchLaterHeader"
+            android:text="Watch later"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:textColor="@color/black"
+            android:textSize="18sp"
+            android:textStyle="bold"
+            android:paddingLeft="5dp"
+            android:layout_marginBottom="5dp"/>
+
+        <TextView
+            android:id="@+id/emptyWatchLaterText"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:text="You have no items on your watch later yet."
+            android:textAlignment="center"
+            android:padding="20dp"
+            />
+        <androidx.recyclerview.widget.RecyclerView
+            android:id="@+id/watchLaterRecyclerView"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_centerHorizontal="true"
+            android:orientation="horizontal"
+            app:layoutManager="androidx.recyclerview.widget.LinearLayoutManager"
+            tools:listitem="@layout/listitem_anime"/>
 
-</FrameLayout>
\ No newline at end of file
+        <TextView
+            android:id="@+id/watchingHeader"
+            android:text="Watching"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:textColor="@color/black"
+            android:textSize="18sp"
+            android:textStyle="bold"
+            android:paddingLeft="5dp"
+            android:layout_marginBottom="5dp"/>
+
+        <TextView
+            android:id="@+id/emptyWatchingText"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:textAlignment="center"
+            android:padding="20dp"
+            />
+        <androidx.recyclerview.widget.RecyclerView
+            android:id="@+id/watchingRecyclerView"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_centerHorizontal="true"
+            android:orientation="horizontal"
+            app:layoutManager="androidx.recyclerview.widget.LinearLayoutManager"
+            tools:listitem="@layout/listitem_anime"/>
+    </LinearLayout>
+</ScrollView>
Index: .idea/deploymentTargetDropDown.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/deploymentTargetDropDown.xml b/.idea/deploymentTargetDropDown.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/deploymentTargetDropDown.xml	
@@ -0,0 +1,17 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="deploymentTargetDropDown">
+    <targetSelectedWithDropDown>
+      <Target>
+        <type value="QUICK_BOOT_TARGET" />
+        <deviceKey>
+          <Key>
+            <type value="VIRTUAL_DEVICE_PATH" />
+            <value value="C:\Users\ericc\.android\avd\Pixel_6_API_33.avd" />
+          </Key>
+        </deviceKey>
+      </Target>
+    </targetSelectedWithDropDown>
+    <timeTargetWasSelectedWithDropDown value="2022-12-06T17:23:09.040158700Z" />
+  </component>
+</project>
\ No newline at end of file
Index: app/src/main/res/navigation/mobile_navigation.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<navigation xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:id=\"@+id/mobile_navigation\"\r\n    app:startDestination=\"@+id/navigation_home\">\r\n\r\n    <fragment\r\n        android:id=\"@+id/navigation_home\"\r\n        android:name=\"com.project24.animexapp.ui.home.HomeFragment\"\r\n        android:label=\"@string/title_home\"\r\n        tools:layout=\"@layout/fragment_home\" />\r\n\r\n    <fragment\r\n        android:id=\"@+id/navigation_dashboard\"\r\n        android:name=\"com.project24.animexapp.ui.dashboard.ExploreFragment\"\r\n        android:label=\"@string/title_dashboard\"\r\n        tools:layout=\"@layout/fragment_dashboard\" />\r\n\r\n    <fragment\r\n        android:id=\"@+id/navigation_notifications\"\r\n        android:name=\"com.project24.animexapp.ui.community.CommunityFragment\"\r\n        android:label=\"@string/title_notifications\"\r\n        tools:layout=\"@layout/fragment_community\" />\r\n\r\n    <fragment\r\n        android:id=\"@+id/navigation_profile\"\r\n        android:name=\"com.project24.animexapp.ui.profile.ProfileFragment\"\r\n        android:label=\"@string/title_profile\"\r\n        tools:layout=\"@layout/fragment_profile\" />\r\n</navigation>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/navigation/mobile_navigation.xml b/app/src/main/res/navigation/mobile_navigation.xml
--- a/app/src/main/res/navigation/mobile_navigation.xml	
+++ b/app/src/main/res/navigation/mobile_navigation.xml	
@@ -28,4 +28,10 @@
         android:name="com.project24.animexapp.ui.profile.ProfileFragment"
         android:label="@string/title_profile"
         tools:layout="@layout/fragment_profile" />
+
+    <fragment
+        android:id="@+id/navigation_notifs"
+        android:name="com.project24.animexapp.ui.notifications.NotificationsFragment"
+        android:label="@string/title_notifs"
+        tools:layout="@layout/fragment_notifications" />
 </navigation>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_2022-11-29_10_11_p_m___Changes_.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_2022-11-29_10_11_p_m___Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_2022-11-29_10_11_p_m___Changes_.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/shelf/Uncommitted_changes_before_Update_at_2022-11-29_10_11_p_m___Changes_.xml	
@@ -0,0 +1,4 @@
+<changelist name="Uncommitted_changes_before_Update_at_2022-11-29_10_11_p_m__[Changes]" date="1669788676892" recycled="false" toDelete="true">
+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2022-11-29_10_11_p_m__[Changes]/shelved.patch" />
+  <option name="DESCRIPTION" value="Uncommitted changes before Update at 2022-11-29 10:11 p.m. [Changes]" />
+</changelist>
\ No newline at end of file
Index: app/src/main/res/layout/notification_item.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/notification_item.xml b/app/src/main/res/layout/notification_item.xml
new file mode 100644
--- /dev/null	
+++ b/app/src/main/res/layout/notification_item.xml	
@@ -0,0 +1,78 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:orientation="vertical"
+    android:paddingRight="16dp"
+    android:paddingLeft="16dp"
+    android:paddingTop="15dp"
+    android:paddingBottom="15dp"
+    android:background="@drawable/custom_dialog_background"
+    android:backgroundTint="#FFFFFF"
+    android:layout_marginTop="15dp"
+    >
+
+    <LinearLayout
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_gravity="right"
+        android:layout_marginBottom="5dp">
+
+        <ImageView
+            android:id="@+id/clearNotification"
+            android:layout_width="20dp"
+            android:layout_height="20dp"
+            android:src="@drawable/ic_baseline_clear_24" />
+    </LinearLayout>
+
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:orientation="vertical">
+
+        <TextView
+            android:id="@+id/notificationText"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:text="You have received!"
+            android:textAlignment="center"
+            android:textColor="@color/text_black"
+            android:gravity="center"/>
+
+        <LinearLayout
+            android:layout_marginTop="30dp"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:gravity="center">
+            <TextView
+                android:id="@+id/denyButton"
+                android:gravity="center"
+                android:layout_width="150dp"
+                android:layout_height="40dp"
+                android:background="@drawable/custom_dialog_background"
+                android:backgroundTint="#E3E3E3"
+                android:text="DENY"
+                android:textStyle="bold"
+                android:layout_marginRight="10dp"
+               />
+
+            <TextView
+                android:id="@+id/allowButton"
+                android:gravity="center"
+                android:layout_width="150dp"
+                android:layout_height="40dp"
+                android:background="@drawable/custom_dialog_background"
+                android:backgroundTint="@color/main_color"
+                android:textColor="@color/white"
+                android:text="ALLOW"
+                android:textStyle="bold"
+                android:layout_marginRight="10dp"
+                />
+
+        </LinearLayout>
+
+    </LinearLayout>
+
+</LinearLayout>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_1_8\" default=\"true\" project-jdk-name=\"1.8\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	
+++ b/.idea/misc.xml	
@@ -1,7 +1,7 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="ExternalStorageConfigurationManager" enabled="true" />
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" default="true" project-jdk-name="1.8" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_11" project-jdk-name="1.8" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/build/classes" />
   </component>
   <component name="ProjectType">
Index: app/src/main/res/layout/fragment_clubs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_clubs.xml b/app/src/main/res/layout/fragment_clubs.xml
new file mode 100644
--- /dev/null	
+++ b/app/src/main/res/layout/fragment_clubs.xml	
@@ -0,0 +1,26 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_height="match_parent"
+    android:layout_width="match_parent"
+    android:orientation="vertical"
+    android:padding="10dp"
+    android:background="#F3F3F3">
+    <Button
+        android:id="@+id/createClubButton"
+        android:layout_width="wrap_content"
+        android:layout_height="40dp"
+        android:text="+ Create Club"
+        android:textSize="12sp"
+        android:layout_gravity="right"
+        android:background="@drawable/custom_dialog_background"
+        android:backgroundTint="@color/main_color"
+        android:textColor="#ffffff">
+    </Button>
+
+    <androidx.recyclerview.widget.RecyclerView
+        android:id="@+id/clubsRecycler"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:nestedScrollingEnabled="false" />
+</LinearLayout>
Index: app/src/main/java/com/project24/animexapp/ui/ProfileTabAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/project24/animexapp/ui/ProfileTabAdapter.kt b/app/src/main/java/com/project24/animexapp/ui/ProfileTabAdapter.kt
new file mode 100644
--- /dev/null	
+++ b/app/src/main/java/com/project24/animexapp/ui/ProfileTabAdapter.kt	
@@ -0,0 +1,30 @@
+package com.project24.animexapp.ui
+
+import android.content.Context
+import androidx.fragment.app.Fragment
+import androidx.fragment.app.FragmentManager
+import androidx.fragment.app.FragmentPagerAdapter
+import com.project24.animexapp.ui.community.Clubs
+import com.project24.animexapp.ui.profile.PlaylistsFragment
+
+internal class ProfileTabAdapter(var context: Context, fm: FragmentManager, var totalTabs: Int): FragmentPagerAdapter(fm) {
+
+
+    override fun getItem(position: Int): Fragment {
+        return when(position) {
+            0 -> {
+                PlaylistsFragment()
+            }
+            1 -> {
+                Clubs()
+            }
+
+            else -> getItem(position)
+        }
+    }
+
+    override fun getCount(): Int {
+        return totalTabs
+    }
+
+}
\ No newline at end of file
Index: app/src/main/java/com/project24/animexapp/NotificationsAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/project24/animexapp/NotificationsAdapter.kt b/app/src/main/java/com/project24/animexapp/NotificationsAdapter.kt
new file mode 100644
--- /dev/null	
+++ b/app/src/main/java/com/project24/animexapp/NotificationsAdapter.kt	
@@ -0,0 +1,112 @@
+package com.project24.animexapp
+
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import android.widget.ImageView
+import android.widget.TextView
+import androidx.recyclerview.widget.RecyclerView
+import com.google.firebase.auth.FirebaseAuth
+import com.google.firebase.firestore.FieldValue
+import com.google.firebase.firestore.ktx.firestore
+import com.google.firebase.ktx.Firebase
+import com.project24.animexapp.ui.community.ClubMembersData
+
+
+class NotificationsAdapter(var notifsList : List<NotificationsData>): RecyclerView.Adapter<NotificationsAdapter.ViewHolder>() {
+
+    override fun onCreateViewHolder(parent:ViewGroup, viewType: Int): ViewHolder {
+        val view = LayoutInflater.from(parent.context).inflate(R.layout.notification_item, parent, false)
+        return ViewHolder(view)
+    }
+
+    override fun getItemCount(): Int {
+        return notifsList.size
+    }
+    override fun onBindViewHolder(holder: ViewHolder, position: Int) {
+
+        val notifsItem = notifsList[position]
+        holder.bindNotifs(notifsItem)
+    }
+
+    class ViewHolder(itemView: View): RecyclerView.ViewHolder(itemView) {
+
+        private var view: View = itemView
+        private lateinit var notifs: NotificationsData
+        var firebaseAuth: FirebaseAuth = FirebaseAuth.getInstance()
+        val db = Firebase.firestore
+        var allowButton: TextView
+        var clearButton: ImageView
+        var denyButton: TextView
+
+        init {
+            var currentUserId = firebaseAuth.currentUser?.uid
+            allowButton = itemView.findViewById(R.id.allowButton)
+            clearButton = itemView.findViewById(R.id.clearNotification)
+            denyButton = itemView.findViewById(R.id.denyButton)
+            var currentUsername: String
+            val docRef = db.collection("Users").document(currentUserId!!)
+
+            // When allow button is clicked in notification:
+            // remove requesting user from request collection
+            // add user to member collection for club
+            // Increment member count for club
+            // Delete notification
+
+
+            allowButton.setOnClickListener {
+
+                if(notifs.notificationType == "joinRequest") {
+                    // delete requesting user from request collection
+                    db.collection("Clubs").document(notifs.clubId.toString()).collection("Requests").document(notifs.requesterId.toString()).delete()
+
+                    // add user to member collection
+                    db.collection("Clubs").document(notifs.clubId.toString()).collection("Members").document(notifs.requesterId.toString()).set(
+                        ClubMembersData(notifs.requesterUsername, notifs.requester, "member")
+                    )
+
+                    // increment club count
+                    db.collection("Clubs").document(notifs.clubId.toString()).update("clubMemberCount", FieldValue.increment(1))
+
+                    // delete notification
+                    db.collection("Users").document(currentUserId.toString()).collection("Notifications").document(notifs.notificationId.toString()).delete()
+
+                } else if (notifs.notificationType == "adminRequest") {
+                    db.collection("Clubs").document(notifs.clubId.toString()).collection("AdminRequest").document(notifs.requesterId.toString()).delete()
+                    db.collection("Clubs").document(notifs.clubId.toString()).collection("Members").document(notifs.requesterId.toString()).set(
+                        ClubMembersData(notifs.requesterUsername, notifs.requester, "member")
+                    )
+                    db.collection("Clubs").document(notifs.clubId.toString()).collection("Admins").document(notifs.requesterId.toString()).set(
+                        ClubMembersData(notifs.requesterUsername, notifs.requester, "member")
+                    )
+                    db.collection("Users").document(currentUserId.toString()).collection("Notifications").document(notifs.notificationId.toString()).delete()
+                }
+
+            }
+
+            clearButton.setOnClickListener {
+                db.collection("Users").document(currentUserId.toString()).collection("Notifications").document(notifs.notificationId.toString()).delete()
+            }
+
+            denyButton.setOnClickListener {
+                if(notifs.notificationType == "joinRequest") {
+                    db.collection("Clubs").document(notifs.clubId.toString()).collection("Requests").document(notifs.requesterId.toString()).delete()
+                    db.collection("Users").document(currentUserId.toString()).collection("Notifications").document(notifs.notificationId.toString()).delete()
+                } else if (notifs.notificationType == "adminRequest") {
+                    db.collection("Clubs").document(notifs.clubId.toString()).collection("AdminRequest").document(notifs.requesterId.toString()).delete()
+                    db.collection("Users").document(currentUserId.toString()).collection("Notifications").document(notifs.notificationId.toString()).delete()
+                }
+            }
+        }
+
+        fun bindNotifs(notifs: NotificationsData) {
+            this.notifs = notifs
+            view.findViewById<TextView>(R.id.notificationText).text = notifs.notificationTitle
+        }
+
+
+
+
+    }
+
+}
\ No newline at end of file
Index: app/src/main/java/com/project24/animexapp/NotificationsData.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/project24/animexapp/NotificationsData.kt b/app/src/main/java/com/project24/animexapp/NotificationsData.kt
new file mode 100644
--- /dev/null	
+++ b/app/src/main/java/com/project24/animexapp/NotificationsData.kt	
@@ -0,0 +1,13 @@
+package com.project24.animexapp
+
+data class NotificationsData(
+    val notificationType: String? = null,
+    val requester: String? = null,
+    val requesterId: String? = null,
+    val notificationTitle: String? = null,
+    val notificationId: String? = null,
+    val requesterUsername: String? = null,
+    val clubId: String? = null,
+    val time: String? = null
+
+)
Index: app/src/main/res/layout/profile_img_username_item.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/profile_img_username_item.xml b/app/src/main/res/layout/profile_img_username_item.xml
new file mode 100644
--- /dev/null	
+++ b/app/src/main/res/layout/profile_img_username_item.xml	
@@ -0,0 +1,21 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_height="100dp"
+    android:layout_width="100dp"
+    android:orientation="vertical"
+    android:gravity="center">
+    <ImageView
+        android:id="@+id/userProfileImg"
+        android:layout_width="50dp"
+        android:layout_height="50dp"
+        android:background="@drawable/roundborder"/>
+    <TextView
+        android:id="@+id/userName"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:text="username"
+        android:layout_marginTop="5dp"
+        android:gravity="center"/>
+
+</LinearLayout>
\ No newline at end of file
Index: app/src/main/java/com/project24/animexapp/ui/community/ClubMembersData.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/project24/animexapp/ui/community/ClubMembersData.kt b/app/src/main/java/com/project24/animexapp/ui/community/ClubMembersData.kt
new file mode 100644
--- /dev/null	
+++ b/app/src/main/java/com/project24/animexapp/ui/community/ClubMembersData.kt	
@@ -0,0 +1,7 @@
+package com.project24.animexapp.ui.community
+
+data class ClubMembersData(
+    val memberUsername: String? = null,
+    val memberEmail: String? = null,
+    val memberPrivileges: String? = null,
+)
Index: app/src/main/res/layout/fragment_notifications.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_notifications.xml b/app/src/main/res/layout/fragment_notifications.xml
new file mode 100644
--- /dev/null	
+++ b/app/src/main/res/layout/fragment_notifications.xml	
@@ -0,0 +1,26 @@
+<?xml version="1.0" encoding="utf-8"?>
+
+<LinearLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="vertical"
+    android:layout_marginTop="60dp"
+    android:paddingRight="10dp"
+    android:paddingLeft="10dp"
+    android:background="#F3F3F3">
+
+    <TextView
+        android:id="@+id/noNotifications"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:text="You have no new notifications."
+        android:gravity="center"
+        android:layout_marginTop="20dp"/>
+
+    <androidx.recyclerview.widget.RecyclerView
+        android:id="@+id/notifsRecycler"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:nestedScrollingEnabled="false" />
+</LinearLayout>
\ No newline at end of file
Index: app/src/main/res/values/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><resources>\r\n    <string name=\"app_name\">AnimeXApp</string>\r\n    <string name=\"title_home\">Home</string>\r\n    <string name=\"title_dashboard\">Explore</string>\r\n    <string name=\"title_notifications\">Community</string>\r\n    <string name=\"title_profile\">Profile</string>\r\n    <!-- TODO: Remove or change this placeholder text -->\r\n    <string name=\"hello_blank_fragment\">Hello blank fragment</string>\r\n    <string name=\"anime_id_key\">ANIME_ID</string>\r\n    <string name=\"chosen_language_key\">Chosen Language Key</string>\r\n    <string name=\"english\">English</string>\r\n    <string name=\"japanese\">japanese</string>\r\n    <string name=\"anime_id_kitsu\">ANIME_ID_KITSU</string>\r\n    <string name=\"shared_preference_language_key\">Shared Preference Language Key</string>\r\n    <string-array name=\"genres\">\r\n        <item>Action</item>\r\n        <item>Adventure</item>\r\n        <item>Avant Garde</item>\r\n        <item>Award Winning</item>\r\n        <item>Comedy</item>\r\n        <item>Drama</item>\r\n        <item>Fantasy</item>\r\n        <item>Gourmet</item>\r\n        <item>Horror</item>\r\n        <item>Mystery</item>\r\n        <item>Romance</item>\r\n        <item>Sci-Fi</item>\r\n        <item>Slice of Life</item>\r\n        <item>Sports</item>\r\n        <item>Supernatural</item>\r\n        <item>Suspense</item>\r\n        <item>Childcare</item>\r\n        <item>Combat Sports</item>\r\n        <item>Delinquents</item>\r\n        <item>Detective</item>\r\n        <item>Educational</item>\r\n        <item>Gag Humor</item>\r\n        <item>Gore</item>\r\n        <item>High Stakes Game</item>\r\n        <item>Historical</item>\r\n        <item>Idols (Female)</item>\r\n        <item>Idols (Male)</item>\r\n        <item>Isekai</item>\r\n        <item>Iyashikei</item>\r\n        <item>Love Polygon</item>\r\n        <item>Mahou Shoujo</item>\r\n        <item>Martial Arts</item>\r\n        <item>Mecha</item>\r\n        <item>Medical</item>\r\n        <item>Military</item>\r\n        <item>Music</item>\r\n        <item>Mythology</item>\r\n        <item>Organized Crime</item>\r\n        <item>Otaku Culture</item>\r\n        <item>Parody</item>\r\n        <item>Performing Arts</item>\r\n        <item>Pets</item>\r\n        <item>Psychological</item>\r\n        <item>Racing</item>\r\n        <item>Reincarnation</item>\r\n        <item>Romantic Subtext</item>\r\n        <item>Samurai</item>\r\n        <item>School</item>\r\n        <item>Showbiz</item>\r\n        <item>Space</item>\r\n        <item>Strategy Game</item>\r\n        <item>Super Power</item>\r\n        <item>Survival</item>\r\n        <item>Team Sports</item>\r\n        <item>Time Travel</item>\r\n        <item>Vampire</item>\r\n        <item>Video Game</item>\r\n        <item>Visual Arts</item>\r\n        <item>Workplace</item>\r\n        <item>Joesei</item>\r\n        <item>Kids</item>\r\n        <item>Seinen</item>\r\n        <item>Shoujo</item>\r\n        <item>Shounen</item>\r\n    </string-array>\r\n    <string-array name=\"status\">\r\n        <item>Status</item>\r\n        <item>Complete</item>\r\n        <item>Airing</item>\r\n        <item>Upcoming\"</item>\r\n    </string-array>\r\n    <string-array name=\"type\">\r\n        <item>Type</item>\r\n        <item>TV</item>\r\n        <item>Movie</item>\r\n        <item>OVA</item>\r\n        <item>ONA</item>\r\n        <item>Special</item>\r\n        <item>Music</item>\r\n    </string-array>\r\n    <string-array name=\"sortby\">\r\n        <item>Default</item>\r\n        <item>Score</item>\r\n        <item>Alphabetically</item>\r\n        <item>Favourites</item>\r\n    </string-array>\r\n\r\n    <string-array name=\"reviewrating\">\r\n        <item>Select</item>\r\n        <item>1</item>\r\n        <item>2</item>\r\n        <item>3</item>\r\n        <item>4</item>\r\n        <item>5</item>\r\n        <item>6</item>\r\n        <item>7</item>\r\n        <item>8</item>\r\n        <item>9</item>\r\n        <item>10</item>\r\n    </string-array>\r\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
--- a/app/src/main/res/values/strings.xml	
+++ b/app/src/main/res/values/strings.xml	
@@ -4,6 +4,7 @@
     <string name="title_dashboard">Explore</string>
     <string name="title_notifications">Community</string>
     <string name="title_profile">Profile</string>
+    <string name="title_notifs">Notifications</string>
     <!-- TODO: Remove or change this placeholder text -->
     <string name="hello_blank_fragment">Hello blank fragment</string>
     <string name="anime_id_key">ANIME_ID</string>
Index: app/src/main/java/com/project24/animexapp/ui/notifications/NotificationsFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/project24/animexapp/ui/notifications/NotificationsFragment.kt b/app/src/main/java/com/project24/animexapp/ui/notifications/NotificationsFragment.kt
new file mode 100644
--- /dev/null	
+++ b/app/src/main/java/com/project24/animexapp/ui/notifications/NotificationsFragment.kt	
@@ -0,0 +1,94 @@
+package com.project24.animexapp.ui.notifications
+
+import android.app.DownloadManager
+import android.content.ContentValues
+import android.content.Context
+import android.os.Bundle
+import android.util.Log
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import android.widget.Toast
+import androidx.fragment.app.Fragment
+import androidx.recyclerview.widget.LinearLayoutManager
+import androidx.recyclerview.widget.RecyclerView
+import com.google.firebase.auth.FirebaseAuth
+import com.google.firebase.firestore.Query
+import com.google.firebase.firestore.ktx.firestore
+import com.google.firebase.ktx.Firebase
+import com.project24.animexapp.NotificationsAdapter
+import com.project24.animexapp.NotificationsData
+import com.project24.animexapp.PostAdapter
+import com.project24.animexapp.Posts
+import com.project24.animexapp.databinding.FragmentNotificationsBinding
+import com.project24.animexapp.databinding.FragmentPlaylistsBinding
+
+class NotificationsFragment : Fragment() {
+    private var _binding: FragmentNotificationsBinding? = null
+    private lateinit var firebaseAuth: FirebaseAuth
+    private lateinit var notifsList: List<NotificationsData>
+    private lateinit var notifsRV: RecyclerView
+    private lateinit var notifsAdapter: NotificationsAdapter
+    private val binding get() = _binding!!
+    private var mContext: Context? = null
+
+    override fun onCreateView(
+        inflater: LayoutInflater, container: ViewGroup?,
+        savedInstanceState: Bundle?
+    ): View? {
+        _binding = FragmentNotificationsBinding.inflate(inflater, container, false)
+        val root: View = binding.root
+
+        setNotifsAdapter()
+
+        return root
+    }
+
+    private fun setNotifsAdapter() {
+        firebaseAuth = FirebaseAuth.getInstance()
+        val db = Firebase.firestore
+        val currentUserId = firebaseAuth.currentUser?.uid
+        val noNotifications = binding.noNotifications
+
+        db.collection("Users").document(currentUserId.toString()).collection("Notifications").orderBy("time", Query.Direction.DESCENDING).addSnapshotListener {snapshot, error ->
+            if( error != null) {
+                Log.e(ContentValues.TAG, "onEvent: ", error)
+                return@addSnapshotListener
+            }
+
+            notifsList = emptyList()
+            notifsRV = binding.notifsRecycler
+            notifsAdapter = NotificationsAdapter(notifsList)
+            notifsRV.layoutManager = LinearLayoutManager (mContext?.applicationContext,
+                LinearLayoutManager.VERTICAL, false
+            )
+
+            notifsRV.adapter = notifsAdapter
+
+            if (snapshot != null) {
+                if(snapshot.isEmpty) {
+                    noNotifications.visibility = View.VISIBLE
+                } else {
+                    noNotifications.visibility = View.GONE
+                }
+            }
+            for (doc in snapshot!!) {
+
+                val notifsTitle = doc.getString("notificationTitle")
+                val requesterId = doc.getString("requesterId")
+                val requester = doc.getString("requester")
+                val time = doc.getString("time")
+                val clubId = doc.getString("clubId")
+                val notifId = doc.getString("notificationId")
+                val requesterUsername = doc.getString("requesterUsername")
+                val notificationType = doc.getString("notificationType")
+
+                notifsList = notifsList + NotificationsData(notificationType, requester, requesterId, notifsTitle, notifId, requesterUsername, clubId, time)
+                notifsAdapter.notifsList = notifsList
+                notifsAdapter.run {
+                    notifyDataSetChanged()
+                }
+            }
+        }
+    }
+}
\ No newline at end of file
Index: app/src/main/res/drawable/ic_baseline_person_24.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><vector android:height=\"24dp\" android:tint=\"#515151\"\r\n    android:viewportHeight=\"24\" android:viewportWidth=\"24\"\r\n    android:width=\"24dp\" xmlns:android=\"http://schemas.android.com/apk/res/android\">\r\n    <path android:fillColor=\"@android:color/white\" android:pathData=\"M12,12c2.21,0 4,-1.79 4,-4s-1.79,-4 -4,-4 -4,1.79 -4,4 1.79,4 4,4zM12,14c-2.67,0 -8,1.34 -8,4v2h16v-2c0,-2.66 -5.33,-4 -8,-4z\"/>\r\n</vector>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/ic_baseline_person_24.xml b/app/src/main/res/drawable/ic_baseline_person_24.xml
--- a/app/src/main/res/drawable/ic_baseline_person_24.xml	
+++ b/app/src/main/res/drawable/ic_baseline_person_24.xml	
@@ -1,4 +1,4 @@
-<vector android:height="24dp" android:tint="#515151"
+<vector android:height="24dp" android:tint="#303030"
     android:viewportHeight="24" android:viewportWidth="24"
     android:width="24dp" xmlns:android="http://schemas.android.com/apk/res/android">
     <path android:fillColor="@android:color/white" android:pathData="M12,12c2.21,0 4,-1.79 4,-4s-1.79,-4 -4,-4 -4,1.79 -4,4 1.79,4 4,4zM12,14c-2.67,0 -8,1.34 -8,4v2h16v-2c0,-2.66 -5.33,-4 -8,-4z"/>
Index: app/src/main/java/com/project24/animexapp/ui/community/ClubsData.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/project24/animexapp/ui/community/ClubsData.kt b/app/src/main/java/com/project24/animexapp/ui/community/ClubsData.kt
new file mode 100644
--- /dev/null	
+++ b/app/src/main/java/com/project24/animexapp/ui/community/ClubsData.kt	
@@ -0,0 +1,12 @@
+package com.project24.animexapp.ui.community
+
+data class ClubsData(
+    val clubName: String? = null,
+    val clubShortDesc: String? = null,
+    val clubLongDesc: String? = null,
+    val clubAccess: String? = null,
+    val clubId: String? = null,
+    val clubMemberCount: Int? = 1,
+    val clubDate: String? = null,
+    val clubTime: String? = null
+)
Index: .idea/shelf/Uncommitted_changes_before_Update_at_2022-11-29_10_11_p_m__[Changes]/shelved.patch
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_2022-11-29_10_11_p_m__[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_2022-11-29_10_11_p_m__[Changes]/shelved.patch
new file mode 100644
--- /dev/null	
+++ b/.idea/shelf/Uncommitted_changes_before_Update_at_2022-11-29_10_11_p_m__[Changes]/shelved.patch	
@@ -0,0 +1,19 @@
+Index: .idea/misc.xml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_11\" default=\"true\" project-jdk-name=\"1.8\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n</project>
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.idea/misc.xml b/.idea/misc.xml
+--- a/.idea/misc.xml	
++++ b/.idea/misc.xml	
+@@ -1,7 +1,7 @@
+ <?xml version="1.0" encoding="UTF-8"?>
+ <project version="4">
+   <component name="ExternalStorageConfigurationManager" enabled="true" />
+-  <component name="ProjectRootManager" version="2" languageLevel="JDK_11" default="true" project-jdk-name="1.8" project-jdk-type="JavaSDK">
++  <component name="ProjectRootManager" version="2" languageLevel="JDK_11" project-jdk-name="1.8" project-jdk-type="JavaSDK">
+     <output url="file://$PROJECT_DIR$/build/classes" />
+   </component>
+   <component name="ProjectType">
Index: app/src/main/res/layout/club_post_item.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/club_post_item.xml b/app/src/main/res/layout/club_post_item.xml
new file mode 100644
--- /dev/null	
+++ b/app/src/main/res/layout/club_post_item.xml	
@@ -0,0 +1,83 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:orientation="vertical"
+    android:paddingRight="16dp"
+    android:paddingLeft="16dp"
+    android:paddingTop="12dp"
+    android:paddingBottom="12dp"
+    android:background="@drawable/custom_dialog_background"
+    android:backgroundTint="#FFFFFF"
+    android:layout_marginTop="15dp"
+    >
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:orientation="horizontal">
+        <ImageView
+            android:layout_width="40dp"
+            android:layout_height="40dp"
+            android:background="@drawable/roundborder"
+            android:layout_marginRight="10dp"/>
+        <LinearLayout
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:orientation="vertical">
+            <TextView
+                android:id="@+id/postUsername"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:text="AlishaAnime"
+                android:textColor="@color/text_black"
+                android:textSize="13dp"
+                android:textStyle="bold" />
+        </LinearLayout>
+
+        <TextView
+            android:gravity="right"
+            android:id="@+id/postDate"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:paddingBottom="13dp"
+            android:text="Nov 23, 2022"
+            android:textSize="12dp" />
+    </LinearLayout>
+
+    <TextView
+        android:layout_marginTop="-20dp"
+        android:id="@+id/postText"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:text="If you don't want to use the default name, type a new name. If that resource name already exists in the project, as indicated by an error at the bottom of the wizard, it's overwritten. The name can contain lowercase characters, underscores, and digits only"
+        android:textColor="@color/text_black"
+        android:textSize="13dp"
+        android:paddingRight="10dp"
+        android:paddingLeft="10dp"
+        android:layout_marginLeft="40dp"
+        />
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:orientation="horizontal"
+        android:layout_marginTop="15dp"
+        android:gravity="right">
+        <ImageView
+            android:id="@+id/thumbsUpButton"
+            android:layout_width="20dp"
+            android:layout_height="20dp"
+            android:background="@drawable/ic_baseline_thumb_up_off_alt_24" />
+        <TextView
+            android:id="@+id/postLikesCount"
+            android:layout_width="wrap_content"
+            android:layout_height="match_parent"
+            android:text="0"
+            android:layout_marginLeft="2dp"/>
+
+
+    </LinearLayout>
+</LinearLayout>
+
Index: app/src/main/java/com/project24/animexapp/ui/community/ClubPostsAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/project24/animexapp/ui/community/ClubPostsAdapter.kt b/app/src/main/java/com/project24/animexapp/ui/community/ClubPostsAdapter.kt
new file mode 100644
--- /dev/null	
+++ b/app/src/main/java/com/project24/animexapp/ui/community/ClubPostsAdapter.kt	
@@ -0,0 +1,122 @@
+package com.project24.animexapp.ui.community
+
+import android.content.Context
+import android.graphics.drawable.Drawable
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import android.widget.ImageView
+import android.widget.TextView
+import androidx.core.content.res.ResourcesCompat
+import androidx.recyclerview.widget.RecyclerView
+import com.google.firebase.auth.FirebaseAuth
+import com.google.firebase.firestore.FieldValue
+import com.google.firebase.firestore.ktx.firestore
+import com.google.firebase.ktx.Firebase
+import com.project24.animexapp.Posts
+import com.project24.animexapp.R
+
+
+class ClubPostsAdapter(var postList : List<ClubPosts>): RecyclerView.Adapter<ClubPostsAdapter.ViewHolder>() {
+
+    private lateinit var firebaseAuth: FirebaseAuth
+
+    override fun onCreateViewHolder(parent:ViewGroup, viewType: Int): ViewHolder {
+        val view = LayoutInflater.from(parent.context).inflate(R.layout.club_post_item, parent, false)
+        return ViewHolder(view)
+    }
+
+    override fun getItemCount(): Int {
+        return postList.size
+    }
+    override fun onBindViewHolder(holder: ViewHolder, position: Int) {
+
+        val postItem = postList[position]
+        holder.bindAnime(postItem)
+    }
+
+    class ViewHolder(itemView: View): RecyclerView.ViewHolder(itemView) {
+
+        private var view: View = itemView
+        private lateinit var postItem: ClubPosts
+        var button: ImageView
+        var context: Context = itemView.context
+        val db = Firebase.firestore
+        var firebaseAuth: FirebaseAuth = FirebaseAuth.getInstance()
+
+        init {
+            val thumbsClicked: Drawable? = ResourcesCompat.getDrawable(
+                context.resources,
+                R.drawable.ic_baseline_thumb_up_alt_24,
+                null
+            )
+            val thumbsUnClicked: Drawable? = ResourcesCompat.getDrawable(
+                context.resources,
+                R.drawable.ic_baseline_thumb_up_off_alt_24,
+                null
+            )
+            val currentUserId = firebaseAuth.currentUser?.uid
+            button = itemView.findViewById(R.id.thumbsUpButton)
+
+            button.setOnClickListener {
+                db.collection("Posts").document(postItem.postId.toString()).collection("LikedBy").document(currentUserId.toString()).get().addOnSuccessListener {
+                    if(it.exists()) {
+                        button.setImageDrawable(thumbsUnClicked)
+                        db.collection("Clubs").document(postItem.clubId.toString()).collection("Posts").document(postItem.postId.toString())
+                            .update("likes", FieldValue.increment(-1))
+                        db.collection("Clubs").document(postItem.clubId.toString()).collection("Posts").document(postItem.postId.toString()).collection("LikedBy").document(currentUserId.toString()).delete()
+                    } else {
+                        button.setImageDrawable(thumbsClicked)
+                        db.collection("Clubs").document(postItem.clubId.toString()).collection("Posts").document(postItem.postId.toString()).collection("LikedBy")
+                            .document(currentUserId.toString()).set(
+                                Posts(
+                                    postItem.postText,
+                                    "",
+                                    "",
+                                    "",
+                                    postItem.username,
+                                    postItem.time,
+                                    postItem.date,
+                                    postItem.likes,
+                                    postItem.commentsNum,
+                                    postItem.postId.toString()
+                                )
+                            )
+                        db.collection("Clubs").document(postItem.clubId.toString()).collection("Posts").document(postItem.postId.toString())
+                            .update("likes", FieldValue.increment(1))
+                    }
+                }
+            }
+        }
+
+        fun bindAnime(postItem: ClubPosts) {
+            val currentUserId = firebaseAuth.currentUser?.uid
+            button = itemView.findViewById(R.id.thumbsUpButton)
+            this.postItem = postItem
+            val thumbsClicked: Drawable? = ResourcesCompat.getDrawable(
+                context.resources,
+                R.drawable.ic_baseline_thumb_up_alt_24,
+                null
+            )
+            val thumbsUnClicked: Drawable? = ResourcesCompat.getDrawable(
+                context.resources,
+                R.drawable.ic_baseline_thumb_up_off_alt_24,
+                null
+            )
+
+            db.collection("Clubs").document(postItem.clubId.toString()).collection("Posts").document(postItem.postId.toString()).collection("LikedBy").document(currentUserId.toString()).get().addOnSuccessListener {
+                if (it.exists()) {
+                    button.setImageDrawable(thumbsClicked)
+                } else {
+                    button.setImageDrawable(thumbsUnClicked)
+                }
+            }
+            view.findViewById<TextView>(R.id.postText).text = postItem.postText
+            view.findViewById<TextView>(R.id.postUsername).text = postItem.username
+            view.findViewById<TextView>(R.id.postLikesCount).text = postItem.likes.toString()
+            view.findViewById<TextView>(R.id.postDate).text = postItem.date.toString()
+        }
+
+    }
+
+}
\ No newline at end of file
Index: app/src/main/java/com/project24/animexapp/ui/community/ClubPosts.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/project24/animexapp/ui/community/ClubPosts.kt b/app/src/main/java/com/project24/animexapp/ui/community/ClubPosts.kt
new file mode 100644
--- /dev/null	
+++ b/app/src/main/java/com/project24/animexapp/ui/community/ClubPosts.kt	
@@ -0,0 +1,12 @@
+package com.project24.animexapp.ui.community
+
+data class ClubPosts(
+    val postText: String? = null,
+    val username: String? = null,
+    val time: String? = null,
+    val date: String? = null,
+    val likes: Int? = 0,
+    val commentsNum: Int? = 0,
+    val postId: String? = null,
+    val clubId: String? = null
+) {}
\ No newline at end of file
Index: app/src/main/res/layout/club_item.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/club_item.xml b/app/src/main/res/layout/club_item.xml
new file mode 100644
--- /dev/null	
+++ b/app/src/main/res/layout/club_item.xml	
@@ -0,0 +1,82 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:orientation="vertical"
+    android:background="@drawable/custom_dialog_background"
+    android:backgroundTint="#ffffff"
+    android:layout_marginTop="15dp"
+    android:padding="0dp"
+    android:clipToOutline="true"
+    >
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:orientation="vertical"
+        android:padding="15dp"
+        android:gravity="center">
+
+        <LinearLayout
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:orientation="horizontal"
+            android:layout_marginBottom="5dp">
+            <TextView
+                android:id="@+id/clubNameAdapter"
+                android:layout_width="match_parent"
+                android:gravity="center"
+                android:layout_height="wrap_content"
+                android:text="One Piece Fan Club"
+                android:textColor="@color/text_black"
+                android:textStyle="bold"
+                android:textSize="16sp"
+                android:layout_marginRight="5dp"/>
+            <ImageView
+                android:layout_width="20dp"
+                android:layout_height="20dp"
+                android:src="@drawable/ic_baseline_person_24"/>
+            <TextView
+                android:id="@+id/clubMemberCountAdapter"
+                android:layout_width="wrap_content"
+                android:layout_height="match_parent"
+                android:gravity="center"
+                android:text="20"/>
+        </LinearLayout>
+
+        <TextView
+            android:id="@+id/clubShortDescAdapter"
+            android:layout_width="wrap_content"
+            android:layout_height="match_parent"
+            android:gravity="center"
+            android:textAlignment="center"
+            android:text="Bem-vindos ao Brasil / Brazil. Ponto de encontro para todos os brasileiros do MAL."/>
+
+
+
+    </LinearLayout>
+
+    <LinearLayout
+        android:id="@+id/joinLL"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:background="@color/main_color"
+        android:paddingTop="7dp"
+        android:paddingBottom="7dp"
+        android:orientation="horizontal"
+        >
+        <TextView
+            android:id="@+id/joinButton"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:gravity="center"
+            android:textStyle="bold"
+            android:textColor="#ffffff"
+            />
+    </LinearLayout>
+
+
+
+</LinearLayout>
+
