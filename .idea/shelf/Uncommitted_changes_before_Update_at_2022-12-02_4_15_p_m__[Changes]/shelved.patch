Index: app/src/main/java/com/project24/animexapp/ui/community/Feed.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.project24.animexapp.ui.community\r\n\r\nimport android.content.ContentValues.TAG\r\nimport android.content.Context\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport android.widget.Toast\r\nimport androidx.fragment.app.Fragment\r\nimport androidx.recyclerview.widget.LinearLayoutManager\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport com.google.firebase.auth.FirebaseAuth\r\nimport com.google.firebase.firestore.Query\r\nimport com.google.firebase.firestore.ktx.firestore\r\nimport com.google.firebase.ktx.Firebase\r\nimport com.project24.animexapp.*\r\nimport com.project24.animexapp.databinding.FragmentFeedBinding\r\nimport java.text.SimpleDateFormat\r\nimport java.util.*\r\n\r\nclass Feed : Fragment() {\r\n    private var _binding: FragmentFeedBinding? = null\r\n    private lateinit var firebaseAuth: FirebaseAuth\r\n    private val binding get() = _binding!!\r\n    private lateinit var postsList: List<Posts>\r\n    private lateinit var postsRV: RecyclerView\r\n    private lateinit var postsAdapter: PostAdapter\r\n    private var mContext: Context? = null\r\n\r\n    override fun onCreateView(\r\n        inflater: LayoutInflater, container: ViewGroup?,\r\n        savedInstanceState: Bundle?\r\n    ): View? {\r\n        firebaseAuth = FirebaseAuth.getInstance()\r\n        val db = Firebase.firestore\r\n\r\n        _binding = FragmentFeedBinding.inflate(inflater, container, false)\r\n        val root: View = binding.root\r\n        val communityPostButton = binding.communityPostButton\r\n        val communityUserPost = binding.communityUserPost.text.toString()\r\n        val setTagsButton = binding.setTagsButton\r\n        val linkAnimeButton = binding.linkAnimeButton\r\n\r\n        communityPostButton.setOnClickListener {\r\n            createPost()\r\n        }\r\n        setPostsAdapter()\r\n        return root\r\n    }\r\n\r\n    private fun setPostsAdapter() {\r\n        firebaseAuth = FirebaseAuth.getInstance()\r\n        val db = Firebase.firestore\r\n\r\n\r\n\r\n        db.collection(\"Posts\").orderBy(\"time\", Query.Direction.DESCENDING).addSnapshotListener { snapshot, error ->\r\n            if( error != null) {\r\n                Log.e(TAG, \"onEvent: \", error)\r\n                return@addSnapshotListener\r\n            }\r\n\r\n\r\n            postsList = emptyList()\r\n            postsRV = binding.postsRecycler\r\n            postsAdapter = PostAdapter(postsList)\r\n            postsRV.layoutManager = LinearLayoutManager (mContext?.applicationContext,\r\n                LinearLayoutManager.VERTICAL, false\r\n            )\r\n\r\n            postsRV.adapter = postsAdapter\r\n\r\n            for(doc in snapshot!!) {\r\n                val postUser = doc.getString(\"username\")\r\n                val postText = doc.getString(\"postText\")\r\n                val postTime = doc.getString(\"time\")\r\n                val postDate = doc.getString(\"date\")\r\n                val postLikesCount = doc.getLong(\"likes\")\r\n                val postCommentsCount = doc.getLong(\"commentsNum\")\r\n                val postId = doc.getString(\"postId\")\r\n                postsList = postsList + Posts(postText, \"\", \"\", \"\", postUser, postTime, postDate, postLikesCount?.toInt(), postCommentsCount?.toInt(), postId)\r\n                postsAdapter.postList = postsList\r\n                postsAdapter.run {\r\n                    notifyDataSetChanged()\r\n                }\r\n            }\r\n//            Log.d(TAG, \"Current names: $posts\")\r\n        }\r\n    }\r\n\r\n    private fun createPost() {\r\n        firebaseAuth = FirebaseAuth.getInstance()\r\n        val db = Firebase.firestore\r\n        postsRV.adapter = postsAdapter\r\n\r\n        val currentUserID = firebaseAuth.currentUser?.uid\r\n        val communityUserPost = binding.communityUserPost.text.toString()\r\n        val userPost = binding.communityUserPost\r\n        var currentUsername: String\r\n        val sdf = SimpleDateFormat(\"MM/dd/yyyy hh:mm:ss\")\r\n        val currentTime = sdf.format(Date())\r\n        val sdfDate = SimpleDateFormat(\"MM/dd/yyyy\")\r\n        val currentDate = sdfDate.format(Date())\r\n        var postId: Int\r\n\r\n        if(userPost.text.isEmpty()) {\r\n                Toast.makeText(activity, \"You need to write something before posting\", Toast.LENGTH_SHORT).show()\r\n        }\r\n        else {\r\n            val docRef = db.collection(\"Users\").document(currentUserID!!)\r\n            docRef.get().addOnSuccessListener { document ->\r\n                if(document!=null) {\r\n                    currentUsername = document.data?.get(\"username\").toString()\r\n                    db.collection(\"Posts\").document(postsList.size.toString()).set(Posts(communityUserPost, \"\", \"\", \"\", currentUsername, currentTime, currentDate,0, 0, postsList.size.toString()))\r\n\r\n                }\r\n            }\r\n\r\n        }\r\n        userPost.text.clear()\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/project24/animexapp/ui/community/Feed.kt b/app/src/main/java/com/project24/animexapp/ui/community/Feed.kt
--- a/app/src/main/java/com/project24/animexapp/ui/community/Feed.kt	(revision 7c41e64f54f6185177827bf30c6e45ebb7e16886)
+++ b/app/src/main/java/com/project24/animexapp/ui/community/Feed.kt	(date 1669789833988)
@@ -54,15 +54,12 @@
         firebaseAuth = FirebaseAuth.getInstance()
         val db = Firebase.firestore
 
-
-
         db.collection("Posts").orderBy("time", Query.Direction.DESCENDING).addSnapshotListener { snapshot, error ->
             if( error != null) {
                 Log.e(TAG, "onEvent: ", error)
                 return@addSnapshotListener
             }
 
-
             postsList = emptyList()
             postsRV = binding.postsRecycler
             postsAdapter = PostAdapter(postsList)
@@ -121,9 +118,5 @@
         }
         userPost.text.clear()
 
-
     }
-
-
-
 }
Index: app/src/main/java/com/project24/animexapp/LogInActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.project24.animexapp\r\n\r\nimport android.content.Intent\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport android.os.Bundle\r\nimport android.widget.TextView\r\nimport android.widget.Toast\r\nimport com.google.firebase.auth.FirebaseAuth\r\nimport com.google.firebase.firestore.ktx.firestore\r\nimport com.google.firebase.ktx.Firebase\r\nimport com.project24.animexapp.databinding.ActivityLogInBinding\r\n\r\nclass LogInActivity : AppCompatActivity() {\r\n\r\n    private lateinit var binding:ActivityLogInBinding\r\n    private lateinit var firebaseAuth: FirebaseAuth\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n\r\n        val db = Firebase.firestore\r\n        binding = ActivityLogInBinding.inflate(layoutInflater)\r\n        setContentView(binding.root)\r\n        firebaseAuth = FirebaseAuth.getInstance()\r\n        binding.signUpBtn.setOnClickListener {\r\n            val intent = Intent(this, RegisterActivity::class.java)\r\n            startActivity(intent)\r\n        }\r\n\r\n        binding.logInBtn.setOnClickListener {\r\n            val userEmail = binding.emailInput.text.toString()\r\n            val userPass = binding.passwordInput.text.toString()\r\n\r\n\r\n            if (userEmail.isNotEmpty() && userPass.isNotEmpty()) {\r\n                firebaseAuth.signInWithEmailAndPassword(userEmail, userPass).addOnCompleteListener {\r\n                    if(it.isSuccessful) {\r\n                        Toast.makeText(this, \"Logged in successfully\", Toast.LENGTH_SHORT).show()\r\n\r\n\r\n                        val intent = Intent(this, MainActivity::class.java)\r\n                        startActivity(intent)\r\n\r\n                    } else {\r\n                        Toast.makeText(this, it.exception.toString(), Toast.LENGTH_SHORT).show()\r\n                    }\r\n                }\r\n            } else {\r\n                Toast.makeText(this, \"All fields must be filled\", Toast.LENGTH_SHORT).show()\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/project24/animexapp/LogInActivity.kt b/app/src/main/java/com/project24/animexapp/LogInActivity.kt
--- a/app/src/main/java/com/project24/animexapp/LogInActivity.kt	(revision 7c41e64f54f6185177827bf30c6e45ebb7e16886)
+++ b/app/src/main/java/com/project24/animexapp/LogInActivity.kt	(date 1669788677273)
@@ -20,6 +20,7 @@
         val db = Firebase.firestore
         binding = ActivityLogInBinding.inflate(layoutInflater)
         setContentView(binding.root)
+
         firebaseAuth = FirebaseAuth.getInstance()
         binding.signUpBtn.setOnClickListener {
             val intent = Intent(this, RegisterActivity::class.java)
Index: .idea/deploymentTargetDropDown.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/deploymentTargetDropDown.xml b/.idea/deploymentTargetDropDown.xml
deleted file mode 100644
--- a/.idea/deploymentTargetDropDown.xml	(revision 7c41e64f54f6185177827bf30c6e45ebb7e16886)
+++ /dev/null	(revision 7c41e64f54f6185177827bf30c6e45ebb7e16886)
@@ -1,17 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="deploymentTargetDropDown">
-    <targetSelectedWithDropDown>
-      <Target>
-        <type value="QUICK_BOOT_TARGET" />
-        <deviceKey>
-          <Key>
-            <type value="VIRTUAL_DEVICE_PATH" />
-            <value value="C:\Users\matth\.android\avd\Pixel_4_API_29.avd" />
-          </Key>
-        </deviceKey>
-      </Target>
-    </targetSelectedWithDropDown>
-    <timeTargetWasSelectedWithDropDown value="2022-11-29T00:51:01.635573400Z" />
-  </component>
-</project>
\ No newline at end of file
